#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass extreport
\begin_preamble
 \usepackage{styles/esi_memoire}
\usepackage{styles/glossary_values}
\end_preamble
\use_default_options true
\begin_modules
hanging
minimalistic
fixltx2e
initials
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf4
\output_sync 1
\output_sync_macro "\synctex=1"
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Creation d'un outil d'administration de solutions BI"
\pdf_author "Afifi Sohaib, Tadjine Zineb"
\pdf_subject "Projet de fin d'étude (5I)"
\pdf_keywords "Business intelligence, SQL Server, SSAS, SSIS, SSRS, Sharepoint "
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 3
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 0
\use_esint 0
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\bullet 1 0 9 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pagenumbering{Arabic}
\end_layout

\begin_layout Plain Layout

%
\backslash
setcounter{chapter}{6}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Conception
\end_layout

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
epigraph{
\backslash
textit{Special cases aren't special enough to break the rules.
\backslash

\backslash
* Although practicality beats purity.}}{
\backslash
textit{Tim Peters, The Zen of Python}}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
TODO:
\end_layout

\begin_layout Enumerate
Phase 1: Writing Basic Ideas
\end_layout

\begin_layout Enumerate
Phase 2: Figures move
\end_layout

\begin_layout Enumerate
Phase 3: mention related features of each one
\end_layout

\begin_layout Enumerate
Phase 4: Highlight Arabic Words &Glossary keywords
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
After listing all possible search features as explained in the previous
 chapter, we will - at first - go through our previous work explaining all
 what we have already done.
 After that, we'll discuss many improvements that leads to a better search
 experience.
 We've gathered those improvements under those points:
\end_layout

\begin_layout Itemize
Maintain a full vocalization search engine;
\end_layout

\begin_layout Itemize
Text processing based on Uthmani script;
\end_layout

\begin_layout Itemize
Quranic Word Search;
\end_layout

\begin_layout Itemize
An accurate statistics gathering system;
\end_layout

\begin_layout Itemize
More adequate suggestion system;
\end_layout

\begin_layout Itemize
The road-map toward semantic search.
\end_layout

\begin_layout Standard
Finally, we'll mention also in this chapter all Qur'anic resources that
 we think it's necessary and the features depending on each resource.
\end_layout

\begin_layout Section
Previous Work
\end_layout

\begin_layout Standard
We've started the work on the idea of search in Quran in the Engineer degree
 graduation project entitled "Development of a search and indexing engine
 for Qur'anic documents"
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Original title in French: Développement d'un moteur de recherche et d'indexation
 pour les documents coraniques
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "ASSEM_MEROUANE"

\end_inset

.
 We'll browse what already done so we consider it as the base to continue.
\end_layout

\begin_layout Standard
To attend our objective, we had based on the general behavior of retrieval
 systems as described on the figure:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Basic Model.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Basic Prototype
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
to Translate the figure
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We did ignore the phase of crawling because our need was about search in
 a limited static resource which is the Quran text on the contrary of other
 search engines needs.
\end_layout

\begin_layout Standard
We have considered the Ayah as the key unit of the index, each Ayah is defined
 by its Surah name and its number in the Surah.
 We had adopted a Qur'anic text written on standard script for the basic
 search.
 
\end_layout

\begin_layout Standard
The basic schema that we've used in document index contains: Document ID,
 Ayah ID, Ayah text, Surah name.
\end_layout

\begin_layout Standard
The Searcher (in the previous figure) is the element served to perform the
 search operation.
 It gets user queries , retrieving them in the inverted index of Ayahs to
 get document IDs of matched Ayahs and then use those document IDs to retrieve
 all information of matched Ayahs such as Ayah text and its Surah name.
 The whole information will be sent to the interfaces as results.
 The behavior of Searcher is described in this figure:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Searcher Behavior.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The behavior of Searcher
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We had proposed a partial vocalization comparison between indexed and queried
 keywords.
 The new comparison compare the diacritics if exists in the two compared
 words but it pass the comparison if diacritics does not exist at least
 in one of the compared words.
\end_layout

\begin_layout Standard
We had enriched our prototype in many key steps , we cite them summarized
 here:
\end_layout

\begin_layout Subsection
Text Processing
\end_layout

\begin_layout Standard
Text Processing is generally based on two main phases.
 The first is the tokenization (extract tokens).
 The second is the processing of those tokens, it includes normalization
 of characters, filtering the stop words, and the last: the stemming.
 We've base on the same phases but we had customized them.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Text Processing.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Text processing
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For tokenization, we've applied the space tokenization to separate text
 on each space or tab encountered.
 We cited also that we can separate the pronouns from nouns but that need
 a further study for different cases.
 One of the special cases is 
\begin_inset ERT
status open

\begin_layout Plain Layout

‬‬
\backslash
arbox{لهن}
\end_layout

\end_inset

(for them, feminine) where the pronoun forms the base of the word.
\end_layout

\begin_layout Standard
For normalization, we include it it the fixing of shaping problem of letters
 and of lam-alef.
 we avoid to remove the diacritics in this phase because we needed the diacritic
s in further features.
 The same for the case of Hamza forms.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "For-stemming-previous-work"

\end_inset

For stemming, there are many different definitions, we had considered that
 stemming is the operation of detaching affixes without bringing the word
 back to its root origin as we may call it 
\begin_inset Quotes sld
\end_inset

light stemming
\begin_inset Quotes srd
\end_inset

.
 The reasons for that choice and more details are mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "ASSEM_MEROUANE"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "For-stop-words-filtering,"

\end_inset

For stop-words filtering, we had discussed how to consider a Qur'anic word
 as a stop-word and we had concluded that we had to choose from the list
 of most frequent words in Qur'an the particles and the pronouns taking
 in consideration their diacritical marks to avoid ambiguities.
\end_layout

\begin_layout Subsection
Query Processing
\end_layout

\begin_layout Standard
Advanced Query offers a set of search options, it's used by many search
 engines such as Google.
 The options that were already existing are: fields, partial word, wild-cards
 search (Jokers), logical relations (And, Or, Not), phrase, interval, and
 boosting.
\end_layout

\begin_layout Standard
We had benefited of the advanced query in the implementation of some new
 linguistic features such as:
\end_layout

\begin_layout Itemize

\series bold
Synonyms & Antonyms
\series default
:
\begin_inset CommandInset label
LatexCommand label
name "Synonyms-&-Antonyms:"

\end_inset

 it's a simple replacement operation of word by the set of its synonyms
 or antonyms.
 
\end_layout

\begin_layout Itemize

\series bold
Search by Derivations:
\begin_inset CommandInset label
LatexCommand label
name "Search-by-Derivations:"

\end_inset

 
\series default
it's a linguistic option aims to extract derivations of a given word based
 on a defined derivation level, that works on 3 steps:
\end_layout

\begin_deeper
\begin_layout Enumerate
Detect level of derivation of the given word, is it Root, Stem, Lemma or
 Complete Word?
\end_layout

\begin_layout Enumerate
Get the origin of the word in the required derivation level.
\end_layout

\begin_layout Enumerate
Fetch all the derivations of that origin.
\end_layout

\begin_layout Standard
We've implemented the previous actions using specific indexes that contains
 all different levels of derivations of all Qur'anic words.
 A con of using indexes is that it can't fetch origins of words not mentioned
 in Quran.
 This con can be fixed using morphological analyzers for the first step.
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Considering/Ignoring Spelling faults:
\begin_inset CommandInset label
LatexCommand label
name "Considering/Ignoring-Spelling-fa"

\end_inset

 
\series default
with this feature, the search engine would ignore most of spelling faults
 that are frequently in Arabic.
 We choose the following operations to be performed on the query words:
\end_layout

\begin_deeper
\begin_layout Itemize
Replace Tâ' marbûta with Hâ'.
\end_layout

\begin_layout Itemize
Replace Alef maqsûra with Yâ'.
\end_layout

\begin_layout Itemize
Replace all forms of Hamzä to independent Hamzä (
\lang arabic_arabi
ء
\lang english
).
\end_layout

\begin_layout Standard
Then, the search engine processes all indexed words and process them the
 same manner to compare them with the query words.
 The list of all words with successful comparison will compound the new
 query.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Search by the triple root-type-pattern:
\begin_inset CommandInset label
LatexCommand label
name "Search-by-the-triple"

\end_inset

 
\series default
The general behavior of this propriety is that the user put a triple of
 word properties so the search engine fetch in the index all the words that
 correspond to those properties.
\end_layout

\begin_layout Subsection
Suggestions
\end_layout

\begin_layout Standard
A suggestion module, is broadly: takes the query keywords and offers another
 words as suggestions.
 We had mentioned two features of suggestion:
\end_layout

\begin_layout Itemize

\series bold
Different Spellings:
\begin_inset CommandInset label
LatexCommand label
name "Different-Spellings:-To"

\end_inset

 
\series default
To offer a spell correction, we used n-gram dictionaries for Qur'anic words.
 
\end_layout

\begin_layout Itemize

\series bold
Related Keywords: 
\series default
For this, we suggested to use an ontology that include all words with of
 Qur'an their semantic relations where suggestion would be chosen on the
 term of dependency.
 
\end_layout

\begin_layout Subsection
Results Processing
\end_layout

\begin_layout Standard
We passed the results by many phases of processing to improve their quality
 and prepare them to send to interfaces.
 Those phases were: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Results Processing.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Results processing phases
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Scoring: 
\series default
the search in Qur'an is not different in how the scoring must be done so
 we had decided to choose simple TF*TDF or one of its derived algorithms
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "TF*TDF"
description "term frequency - inverse document frequency"

\end_inset

 
\end_layout

\begin_layout Itemize

\series bold
Sorting: 
\series default
we suggested those criteria to sort the results: score, natural order of
 mus-haf, revelation order of ayahs, alphabetic order of text fields, and
 numerical order of numeric fields.
\end_layout

\begin_layout Itemize

\series bold
Filtering:
\series default
 the objective of filtering is to eliminate some unneeded results based
 a such criterion like : By surah.
\end_layout

\begin_layout Itemize

\series bold
Extending
\series default
: here, extra information would be attached to each ayah in results such
 as: Tafssir, Translation to specified languages, recitation audio file,
 etc.
 
\end_layout

\begin_layout Itemize

\series bold
Paginating
\series default
: in this phase, the results would be divided to a stream of pages to be
 sent to interfaces page by page, because the user generally seek the first
 results.
 
\end_layout

\begin_layout Itemize

\series bold
Highlighting
\series default
: for highlighting, we didn't lean on the simple method of exact word matching.
 We had adopted a method that considers text processing for text-for-view
 as in text-for-search.
\end_layout

\begin_layout Subsection
Indexes Importing
\end_layout

\begin_layout Standard
To accomplish the features specific to Quran (such as: Search in Uthmani
 Script, Structural options, Statistical options, Thematic search and so
 on), should be invoke other information from extra indexes that contains:
\end_layout

\begin_layout Itemize

\series bold
Ayah texts: 
\series default
include the different writings of ayah's text such as Uthmani or Standard
 scripts.
 
\end_layout

\begin_layout Itemize

\series bold
Structural Information: 
\series default
include all structures made for mus-haf such as Ahzab, Manazil, Surahs and
 so on.
\end_layout

\begin_layout Itemize

\series bold
Surah Information: 
\series default
include all what is attributed to the surah as an index key unit such as
 surah's names, revelation place and time, and so on.
\end_layout

\begin_layout Itemize

\series bold
Statistical Information: 
\series default
include all statistics of surahs and ayahs such as word frequency.
\end_layout

\begin_layout Itemize

\series bold
Classification on Topics: 
\series default
include a categorization of ayahs on term of topic in a hierarchic manner.
\end_layout

\begin_layout Section
Full vocalized search engine 
\end_layout

\begin_layout Standard
An obvious fact is that the majority of Arabic texts are written unvocalized
 (without 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glstwo{diacritical marks}{diacritical marks}
\end_layout

\end_inset

), this causes some confusion in the meaning, only the context of text can
 lift the ambiguity.
 Therefore, We had to consider the vocalization in all indexing and search
 phases in order to achieve a Quranic retrieving system that pass over these
 ambiguities.
 One of the main barriers that prevent the consideration of vocalization
 in Arabic is the lack of vocalized Arabic texts among the total Arabic
 content
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
whereas the percent is nearly %%
\end_layout

\end_inset

.
 Though, since the Quran is already fully vocalized so one barrier is lifted
 on.
 Another barrier is comparing vocalized, partially vocalized, and unvocalized
 texts because the ordinary comparing does not distinguish between letters
 and diacritics and fails to discover the similarity between words.
 For example, with ordinary comparing those words will be considered different:
 
\lang arabic_arabi
الحمد
\lang english
 , 
\lang arabic_arabi
الحَمد
\lang english
 , and 
\lang arabic_arabi
الحَمْدُ
\lang english
.
 That's why we had attempted to replace it with a partial vocalization comparing
 which is working as following:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1st word
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2nd word
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
comparing result
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reason
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

الملْك
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

المٌلكُ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no conflicting diacritics
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

المَلك
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

المُلكٌ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
conflict of diacritics
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Partial vocalization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We've intended to use this method in the comparing between search query
 keywords and indexed keywords but this is not sufficient for two reasons:
 
\end_layout

\begin_layout Standard
1.
 This will take effect only in searching and not all operations needed in
 indexing, statistics calculation, detecting suggestions, detecting synonyms,
 detecting different vocalizations and any operation may appear later.
\end_layout

\begin_layout Standard
2.
 The performance will be affected since this method is not optimized compared
 to the ordinary one.
\end_layout

\begin_layout Standard
To fix those two issues, we have to improve the comparing method in the
 lowest layers possibles: 
\end_layout

\begin_layout Itemize
Regular expression engine: General regular expressions has no classification
 for
\series bold
 
\series default
neither Arabic letters nor Arabic diacritics while it gives special classes
 for Latin letters, digits, and symbols.
 Introducing Arabic customized classes into the regex engine improves the
 partial vocalization comparing performance and makes it globally available.
 
\end_layout

\begin_layout Itemize
Basic string: in most programming languages, strings are objects and have
 their own comparing method.
 Replacing that object method with our partial comparing operation takes
 effect on all declared instances and all derived objects.
\end_layout

\begin_layout Standard
One problem of changing Regex engine or basic string directly in-place is
 the possibility of disconnecting from the main line of the programming
 language development.
 That should be token in consideration because if it happens the forked
 branch will be stuck.
 An alternative way is the prototyping instead of replacing in-place.
 With this way, lot of conflicts -between main development branch and forked
 branch- can be avoided.
\end_layout

\begin_layout Standard
To improve better the vocalized search, we have to distinguish between original
 vowels and declension case markers because words like 
\lang arabic_arabi
الْمُلْكُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom, nominative), 
\lang arabic_arabi
الْمُلْكِ
\lang english
 (Kingdom, genitive), 
\lang arabic_arabi
الْمُلْكَ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom, accusative) are considered as one word with one meaning which
 is Kingdom.
 This will give best matches in search and will not oblige the user to repeat
 the search operation with each one of the different possible declensions.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/strip declension.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Different possible declensions of the word 
\lang arabic_arabi
الملك
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ignoring vocalization has a direct influence on filtering stop-words because
 filtering out a word like the particle 
\lang arabic_arabi
مِنْ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 leads to filtering the relative noun 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
مَنْ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 and the verb 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
مَنَّ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 .
 Using vocalized stop-words is very recommended to avoid ambiguities and
 to confine the filtered occurrences.
 We'll mention how we gather the stop-words in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Filtring-Stop-words:"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Different types.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Different types of the possible vocalizations of the word 
\lang arabic_arabi
من
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Another problem emerges by ignoring the vocalization is the inaccuracy of
 statistics.
 For example the frequency of the unvocalized word 
\lang arabic_arabi
الملك
\lang english
 will be the total of all those words 
\lang arabic_arabi
الْمُلْكُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom, nominative), 
\lang arabic_arabi
الْمُلْكِ
\lang english
 (Kingdom, genitive), 
\lang arabic_arabi
الْمُلْكَ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom, accusative), 
\lang arabic_arabi
الْمَلِكُ
\lang english
 (King, nominative), and 
\lang arabic_arabi
الْمَلِكِ
\lang english
 (King, genitive).
 The appropriate way to gather statistics is to use the vocalized words
 by ignoring the haraka of declension case (
\lang arabic_arabi
حالة الإعراب
\lang english
) for nouns so for the previous example we'll have two units: 
\lang arabic_arabi
المُلْك
\lang english
 (Kingdom, undefined case), 
\lang arabic_arabi
المَلِك
\lang english
 (King, undefined case).
 We'll talk more about gathering statistics in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Statistics-Gathering-System"

\end_inset

.
\end_layout

\begin_layout Standard
In order to build a full vocalized search engine, the linguistic and quranic
 resources that we use should be fully vocalized too.
 Those resources could be: 
\end_layout

\begin_layout Itemize
a text: Quranic ayahs.
\end_layout

\begin_layout Itemize
a list of names: sura names.
\end_layout

\begin_layout Itemize
an ontology: Quranic concepts.
\end_layout

\begin_layout Itemize
a thesaurus: synonyms, antonyms .
\end_layout

\begin_layout Itemize
a word mapping: Uthmani to Standard writing.
\end_layout

\begin_layout Itemize
annotations: Quranic words annotations.
\end_layout

\begin_layout Standard
If any necessary resource was unvocalized or partially, we could exploit
 it using partial vocalization comparing method and proceed the operation
 of vocalization it.
 
\end_layout

\begin_layout Standard
The old method of generating suggestions that we have proposed in the previous
 work didn't consider vocalization because it may rise some glitches such
 as:
\end_layout

\begin_layout Itemize
Larger number of n-grams.
\end_layout

\begin_layout Itemize
It's insignificant to have n-grams that start with a vocalization mark.
\end_layout

\begin_layout Standard
The right behavior is to distinguish between letters and diacritics and
 change the gram to contain the letter and the diacritic after then change
 the similarity function to use partial vocalization comparing.
 This keeps a small number of n-grams and avoids insignificant ones.
 
\end_layout

\begin_layout Standard
As a conclusion we mention benefits gained by basing on a full vocalization
 environment:
\end_layout

\begin_layout Itemize
Lift the ambiguities cause by ignoring vocalizations
\end_layout

\begin_layout Itemize
Make searching results, suggestions, and statistics more accurate.
\end_layout

\begin_layout Itemize
Refine the meanings detection ( a first step in the semantic approach )
\end_layout

\begin_layout Section
Othmani script and text processing
\begin_inset CommandInset label
LatexCommand label
name "sec:Text-processing"

\end_inset


\end_layout

\begin_layout Standard
Quran is written principally on Othmani script which has many differences
 compared to the standard script used usually in different media.
 In the previous work, we adopted the quranic text written on standard script
 but due to the difficulties caused by the its differences with Othmani
 script, we have to consider both scripts for indexing and search.
 Among those difficulties, we mention: 
\end_layout

\begin_layout Enumerate
Searching with an othmani writing form of a word such as
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
بصطة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 knowing that it written also in the form 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 in another Ayah
\begin_inset Foot
status open

\begin_layout Plain Layout
occurs as 
\lang arabic_arabi
بصطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
الأعراف
\lang english
 69) and as 
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
البقرة
\lang english
 247) 
\end_layout

\end_inset

.
 The retrieving system can't distinguish between the two occurrences basing
 only on the standard script.
 
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Different writings of bas6a in Uthmani Script.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Caption

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Different writing forms of the word 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 using Othmani script
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Calculating statistics knowing that letters number is different between
 the two scripts in a big number of ayahs.
 This difference is due to addition and removal of some letters in the Othmani
 script (for more details see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Knowledge-of-Orthongraphy"

\end_inset

).
\end_layout

\begin_layout Enumerate
Matching the same Word-By-Word structure of some Quranic linguistic resources.
 Using the Quranic word as the basic unit for linguistic resources lacks
 for precision in some cases such in the case of two occurrences of word
 that have different interpretation.
 To resolve that, many Quranic linguistic resources (such as Quranic Arabic
 Corpus, see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Qur’anic-Arabic-Corpus"

\end_inset

) have adopted the word occurrence as a basic unit a.k.a Word-By-Word Quran
 browsing.
 As a result for this, the resources such those have to use the words as
 they occurred in Quran (consequently in Othmani script) because the separation
 of some words is different between Othmani script and standard script as
 in the word
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
يَأَسَفَى
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in Yusuf 84 which is separated to two words 
\lang arabic_arabi
يَا
\lang english
 + 
\lang arabic_arabi
أَسَفَى
\lang english
 in the standard script.
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Attaching words in uthmani - Ya'asafa.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Merging Words in Uthmani Script
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we've said, to resolve those difficulties we consider Othmani text also
 for text processing along with standard text.
 In addition, we propose many improvements on the text processing phases
 to achieve many of search features that we have proposed in the previous
 chapter (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Proposals"

\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Uthmani vs Standard Text Processing.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
General Schema of Uthmani and Standard text processing.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We list in the following our improvements per phase:
\end_layout

\begin_layout Subsection
Substitution
\end_layout

\begin_layout Standard
This is a new phase that we propose to be added before tokenization.
 Its objective is to identify a list of pre-defined patterns and replace
 them as a preparation for tokenization.
 
\end_layout

\begin_layout Standard
Generally this phase is for processing the search query because it's not
 needed in indexing Quranic text.
\end_layout

\begin_layout Standard
We don't include this phase into normalization phase ( after tokenization
 ) before those substitutions are essential for a perfect tokenization.
 Especially that the tokenization phase is not a simple space-based separation
 and configured to use a word-by-word corpus.
 
\end_layout

\begin_layout Standard
We propose these cases of substitution:
\end_layout

\begin_layout Subsubsection

\series bold
Romanizations
\end_layout

\begin_layout Standard
Among the search features that we've described in the previous chapter,
 there is the option of search using a romanized Arabic text (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Romanization:"

\end_inset

).
 Romanized texts are in Latin letters and our system is defined for Arabic
 letters.
 That's why we have to replace each letter with its appropriate correlative.
 There are many romanization systems.
 To provide the possibility to use more then one, we should specify a guessing
 policy to detect what system is used in a given string.
 There are many criteria that could be used in guessing, we list some of
 them in the following:
\end_layout

\begin_layout Enumerate

\series bold
Nature of used characters: 
\series default
each romanization system uses a set of letters, numbers, or symbols to represent
 the Arabic vowels and letters (including hamza forms).
 The differences between those sets are remarkable.
 For example, ISO233 norm uses usually some dotted letters such as ẗ for
 
\lang arabic_arabi
ة
\lang english
 ; In the contrary, Buckwalter uses instead symbols such as & for 
\lang arabic_arabi
ؤ
\lang english
 .
 Those differences could be used to guess the romanization system.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The following table represents the exclusive characters used by the three
 romanization systems: ISO233, Buckwalter, and Arabtex.
\begin_inset Newline newline
\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Romanization system
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exclusive characters
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ISO 233
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
TODO
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buckwalter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arabtex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Exclusive characters between ISO233, Buckwalter, and Arabtex
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

For example If we consider the three romanization systems: ISO233, Buckwalter,
 and Arabtex, guessing the romanized word ẖalīfaẗ leads surely to ISO233
 system because of the specfic characters ẖ, ī, ẗ.
\end_layout

\begin_layout Enumerate

\series bold
Arabic valid words
\series default
: by interpreting the romanized word using the different romanization systems,
 we get many correlative Arabic words.
 We can check if each word is valid in Arabic, and eliminate non valid ones.
 
\begin_inset Newline newline
\end_inset

For example, guessing the romanized word xalyfap leads surely to the system
 buckwalter because it generates the only valid Arabic word: 
\lang arabic_arabi
خَليفَة
\lang english
.
\end_layout

\begin_layout Enumerate

\series bold
Word existence in Quran: 
\series default
by checking the existence in the Quran of interpreted words arising from
 a romanized word, we can detect potential ones.
 
\end_layout

\begin_layout Enumerate

\series bold
Predefined priorities: 
\series default
the last criterion is the predefined priorities.
 If the guessing system failed to limit the choices to only one romanization
 system, it should pick the first one based on predfined priorities.
 
\end_layout

\begin_layout Subsubsection

\series bold
Numbers into words
\series default
: 
\end_layout

\begin_layout Standard
In Quran, the numbers are written in words not as we write them in the current
 numeral systems (Arabic numerals
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Arabic numerals: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
\end_layout

\end_inset

, or Hindi numerals
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Hindi numerals: (
\lang arabic_arabi
٠
\lang english
‎ - 
\lang arabic_arabi
١
\lang english
‎ - 
\lang arabic_arabi
٢
\lang english
‎ - 
\lang arabic_arabi
٣‎
\lang english
 - 
\lang arabic_arabi
٤
\lang english
‎ - 
\lang arabic_arabi
٥
\lang english
‎ - 
\lang arabic_arabi
٦
\lang english
‎ - 
\lang arabic_arabi
٧
\lang english
‎ - 
\lang arabic_arabi
٨‎
\lang english
 - 
\lang arabic_arabi
٩‎
\lang english
)
\end_layout

\end_inset

aka Eastern Arabic numerals ).
 We need to translate those numerals into the literal form to make them
 search-able in the Quran.
 In the following table , we list some numbers as they mentioned in Quran:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N°
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ayah ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number as mentioned
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Appropriate numeral
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
الإخلاص
\lang english
 1) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

أَحَدٌ 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
المائدة
\lang english
 106)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

اثْنَانِ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
مريم
\lang english
 10) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

ثَلَاثَ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
الأنفال
\lang english
 65) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

عِشْرُونَ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
البقرة
\lang english
 261) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

مِائَةُ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
الأنفال
\lang english
 65) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

مِائَتَيْنِ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
200
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
البقرة
\lang english
 96) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

أَلْفَ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
المعارج
\lang english
 4) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

خَمْسِينَ_أَلْفَ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
50000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
يوسف
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
4) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

أَحَدَ_عَشَرَ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
الكهف
\lang english
 25) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

ثَلَاثَ_مِائَةٍ_سِنِينَ_وَازْدَادُوا_تِسْعًا
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
309
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(
\lang arabic_arabi
العنكبوت
\lang english
 14) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

أَلْفَ_سَنَةٍ_إِلَّا_خَمْسِينَ_عَامًا
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
950
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Some numbers as they mentioned in Quran
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
To be close to the Quranic way of writing numbers, we should respect many
 properties.
 We write each digit in its class: ones, tens, hundreds, thousands, tens
 of thousands, hundreds of thousands, and better to not write the conjuction
 waw (
\lang arabic_arabi
واو العطف
\lang english
).
 Zero has to be ignored because it will never be written, we don't say 
\lang arabic_arabi
صفر رجل
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(zero men) but we say 
\lang arabic_arabi
لا رجل
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(no men).
 One never mentioned as 
\lang arabic_arabi
واحد
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 but as 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
أحد
\lang english
.
 Some numbers accept gender such as 
\lang arabic_arabi
إثنان
\lang english
 (2, masculine) and 
\lang arabic_arabi
إثنتان
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(2, feminine).
 Other numbers change their forms in the opposite gender of the count noun
 (
\lang arabic_arabi
المعدود
\lang english
)
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
add to glossary
\end_layout

\end_inset

 such as 
\lang arabic_arabi
سبع سماوات
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(7 heavens, feminine) and 
\lang arabic_arabi
سبعة أبحر
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(7 seas, masculine).
 A hundred 
\lang arabic_arabi
مئة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
had a special writing in Quran which is 
\lang arabic_arabi
مِائَةُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 with an additional Alef.
\end_layout

\begin_layout Standard
In the example N°11of the table, the number 309 was separated with the two
 words but still search-able.
 In the contrary , the example N°12 show an indirect mention of the number
 950.
 That make it hard to be retrieved without understanding the Ayah semantically.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Substitution Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of Substitution
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tokenization:
\begin_inset CommandInset label
LatexCommand label
name "sub:Tokenization:"

\end_inset


\end_layout

\begin_layout Standard
The function of tokenization is to split a running text into tokens, so
 that they can be fed into the next phases for further processing.
 We keep the space-based tokenization from our previous work as a first
 step since it's a perfect choice and the simplest one at the same time.
 
\end_layout

\begin_layout Standard
After performing the space-based tokenization, We could also separate the
 words (tokens) into their parts (sub-tokens) so we'll have separated pronouns
 and clitics in case we needed a special processing for them.
 The problem with this is that it emerges lot of flaws.
 
\end_layout

\begin_layout Standard
Having as an example the word 
\lang arabic_arabi
فَأَسْقَيْنَاكُمُوهُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
mentioned in (
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
الحجر
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 22) 
\end_layout

\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 (meaning
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
English Translation of Mohammad Habib Shakir
\end_layout

\end_inset

: so We give it to you to drink of) so the separated sub-tokens would be
 
\lang arabic_arabi
فَ
\lang english
 + 
\lang arabic_arabi
أَسْقَيْنَا
\lang english
 + 
\lang arabic_arabi
كُمُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
+ 
\lang arabic_arabi
هُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
( ignoring 
\lang arabic_arabi
و
\lang english
 ) and the flaws will be: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Tokenization of fasqainakomoho.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tokenization of the word 
\lang arabic_arabi
فَأَسْقَيْنَٰكُمُوهُ
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Tokenization is an important phase since it's the basis for the following
 phases.
 Thus, it should have a very high precision while actually there is a lack
 for accurate Arabic analyzer.
\end_layout

\begin_layout Itemize
Some affixes change the form of word so we have to bring it to its original
 form after separation.
 In our example, 
\lang arabic_arabi
و
\lang english
 is an additional letter.
\end_layout

\begin_layout Itemize
A lot of clitics and pronouns such as 
\lang arabic_arabi
فَ
\lang english
 should be considered as stop words because they will have a high frequency
 and have a less need of retrieving.
\end_layout

\begin_layout Standard
A related solution, proposed by 
\noun on
Mohammed A.
 Attia 
\noun default

\begin_inset CommandInset citation
LatexCommand cite
key "Attia_arabictokenization"

\end_inset

.
 He started his idea by noting that the Arabic word can comprise up to four
 independent tokens so he consider that the morphological knowledge needs
 to be incorporated into the tokenizer.
 He described a rule-based tokenizer that handles tokenization as a full-rounded
 process with two stages: a preprocessing stage (white space normalizer),
 and a post-processing stage (token filter).
 He described the implementation of 3 tokenization models:
\end_layout

\begin_layout Enumerate

\series bold
Tokenization Combined with Morphological Analysis
\series default
: This is the most linguistically motivated and the most common form of
 implementation for Arabic tokenization 
\begin_inset CommandInset citation
LatexCommand cite
key "Habash05arabictokenization"

\end_inset

.
 However, it violates the design concept of modularity which requires systems
 to have separate modules for undertaking separate tasks.
 For example: the word ( 
\lang arabic_arabi
ولیشكر‬
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
, and to thank ) will be ‫
\lang arabic_arabi
و‬
\lang english
+conj@
\lang arabic_arabi
‫ل
\lang english
‬+comp@
\lang arabic_arabi
شكر‬
\lang english
+verb+pres+sg‫@.
\end_layout

\begin_layout Enumerate

\series bold
Tokenization Guesser (tokenization is separated from morphological analysis)
\series default
: The tokenizer here only detects and demarcates clitic boundaries with
 two additional components: a clitics guesser (integrated with the tokenizer)
 and a clitics transducer (integrated with the morphological transducer)
 to recover the information on what may constitute a clitic.
 the advantages are robustness as it is able to deal with any words whether
 they are known to the morphological transducer or not, and abiding by the
 concept of modularity as it separates the process of tokenization from
 morphological analysis.
 There is the disadvantage that the morphological analyzer and the syntactic
 parser have to deal with increased tokenization ambiguities.
 For example: the word (
\lang arabic_arabi
وللرجل‬
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
, and to the man) will be either @‫
\lang arabic_arabi
و
\lang english
@
\lang arabic_arabi
ل
\lang english
@
\lang arabic_arabi
ال
\lang english
@
\lang arabic_arabi
رجل‬
\lang english
, @
\lang arabic_arabi
‫و
\lang english
@
\lang arabic_arabi
ل
\lang english
@
\lang arabic_arabi
الرجل
\lang english
‬, @‫
\lang arabic_arabi
و
\lang english
@
\lang arabic_arabi
للرجل‬
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 , or 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
@‫
\lang arabic_arabi
وللرجل‬
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 whereas the tagging of the clitics is 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
‫
\lang arabic_arabi
و‬
\lang english
+conj, 
\lang arabic_arabi
ل‬
\lang english
+prep, 
\lang arabic_arabi
‫ال‬
\lang english
+art+def.
\end_layout

\begin_layout Enumerate

\series bold
Tokenization Dependent on the Morphological Analyzer: 
\series default
here the word stem is not guessed, but taken as a list of actual words.
 A possible word in the tokenizer in this model is any word found in the
 morphological transducer.
 The morphological transducer here is the same in the first model but with
 one difference, that is the output does not include any morphological features,
 but only token boundaries between clitics and stems.
 One advantage of this implementation is that the tool becomes more deterministi
c and more manageable in debugging.
 Its lack of robustness makes it mostly inapplicable as no single morphological
 transducer can claim to comprise all the words in a language.
 For example the word ‫( 
\lang arabic_arabi
وللرجل‬
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
, and to the man) will be @‫
\lang arabic_arabi
و
\lang english
@
\lang arabic_arabi
ل
\lang english
@
\lang arabic_arabi
ال
\lang english
@
\lang arabic_arabi
رجل‬
\lang english
.
\end_layout

\begin_layout Standard
Those models proposed by 
\noun on
Attia
\noun default
 are specified for Arabic, and because we aim the Quran we value the precision.
 The tokenization guesser leads to an increased number of ambiguities but
 if we use a hand-made word-by-word corpus we can limit those ambiguities
 especially for the words existing in Quran.
 For the words not existing in the corpus, we may use any general Arabic
 tokenization guesser.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Tokenization-Phase2.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sub-tokens separation schema
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tokenization cause a loss in token information as function and POS 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "POS"
description "Part Of Speech"

\end_inset

.
 This loss affect the semantic understanding of keywords.
 For example the two ayahs:
\end_layout

\begin_layout Enumerate
[ 
\lang arabic_arabi
وَالشَّمْسِ وَضُحَاهَا
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
] -- (
\lang arabic_arabi
الشمس
\lang english
 1) 
\end_layout

\begin_layout Enumerate
[ 
\lang arabic_arabi
وَهُوَ الَّذِي خَلَقَ اللَّيْلَ وَالنَّهَارَ وَالشَّمْسَ وَالْقَمَرَ كُلٌّ
 فِي فَلَكٍ يَسْبَحُونَ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
] -- (
\lang arabic_arabi
الأنبياء
\lang english
 33) 
\end_layout

\begin_layout Standard
When we tokenize the previous two Ayahs, we lose the function of the first
 waw (
\lang arabic_arabi
و
\lang english
) as in the first ayah is for oath and in the second ayah is for coordination.
 To recover such kind of loss, we introduce some tags that has the values
 of important information.
 We add tags in this phase exactly (tokenization) because it's the only
 phase that read the word in it's phrase semantic and syntactic context.
 By consequence, it knows the part-of-speech information.
 Another reason is that we need them in the next phases: Normalization and
 Stemming.
 Among the tags that we think they are important, there are:
\end_layout

\begin_layout Enumerate

\series bold
Word declension
\series default
: whether the word is declinable (
\lang arabic_arabi
معربة
\lang english
) or not.
 We need this in normalization phase because we intend to strip the declension
 vowels (
\lang arabic_arabi
حركات الإعراب
\lang english
) to unite different occurrences of a word.
\end_layout

\begin_layout Enumerate

\series bold
Flexion information
\series default
: whether the word is derivative or not.
 We need this in Stemming phase.
\end_layout

\begin_layout Standard
English language has a similar problem in the tokenization of compound nouns
 such as the word 
\begin_inset Quotes sld
\end_inset

homework
\begin_inset Quotes srd
\end_inset

 or the word 
\begin_inset Quotes sld
\end_inset

unLadyLike
\begin_inset Quotes srd
\end_inset

 but not the same complication as in Arabic language.
 
\end_layout

\begin_layout Standard
There is a possibility to delay affix processing into the stemming phase
 but there will be a difference:
\end_layout

\begin_layout Itemize
with stemming we lose affixes so we can't specify the exact word search
 ;
\end_layout

\begin_layout Itemize
with tokenization, we preserve tokens and we can reproduce the whole word.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Tokenization Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of tokenization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
We can use the tokenization to resolve the pronouns references by creating
 an extra token for each pronoun; That token has the key value of the referenced
 object.
 Each referenced object should have a unique key value.
 For example:
\end_layout

\begin_layout Plain Layout

\lang arabic_arabi
هو وصاحبه 
\end_layout

\begin_layout Plain Layout

\lang arabic_arabi
لا إله إلا هو ------------ لا إله إلا الله -- 
\end_layout

\begin_layout Plain Layout
[If I create extra tokens, but how that affect phrase search]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Normalization:
\end_layout

\begin_layout Standard
Since we are accepting the Othmani script beside the standard script,we
 have to specify the normalization for the both.
 We had to strip all recitation marks such as the Waqf symbol 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset


\begin_inset Formula $\mathbf{\therefore\therefore}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset

 (See different Waqf symbols in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Fragmentation-into-Stops"

\end_inset

).
 
\end_layout

\begin_layout Standard
After stripping all extra symbols, we should either normalize othmani text
 into standard text.
 This operation is necessary to unify the processing for the next phases.
 There is no benefits to continue in a separated lines.
 The converging into standard script makes the stemming clearer and pass
 over some special uthmani-written words.
 For example, the word -example-.
 
\end_layout

\begin_layout Standard
To achieve that, we need a complete mapping of Quranic words between the
 both scripts.
 To minimize the size of mapping, we can exclude the words that are written
 in the same manner.
 The mapping should use the uthmani word as a unit not the standard word.
 The reason is that some words are mapped differently from an occurrence
 to another.
 An example for that, the word 
\lang arabic_arabi
بسطة
\lang english
 which occurs as 
\lang arabic_arabi
بصطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
الأعراف
\lang english
 69) and as 
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
البقرة
\lang english
 247).
 
\end_layout

\begin_layout Standard
Mainly it is recommended to strip vowels in the normalization of Arabic
 texts.
 This means ignoring vowels during indexing and search.
 Consequently it affects negatively the accuracy of search since the vowels
 are an important key to detect a word meaning and distinguish it from other
 meanings.
 An example for that, the word 
\lang arabic_arabi
الملك
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
that mentioned with different meanings in Quran: 
\lang arabic_arabi
الْمُلْكُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom), 
\lang arabic_arabi
الْمَلِكُ
\lang english
 (King) and 
\lang arabic_arabi
الْمَلَكُ
\lang english
 (Angel).
 This word, however, are mentioned in different declension cases: Nominative,
 Accusative and Genitive.
 The declension case has no effect on the meaning.
 Our idea is to keep the vowels except the declension case ending vowel.
 This will unify all declension cases of a word.
 This can be done by passing tags with tokens for declension info such as:
\end_layout

\begin_layout Itemize
Declinable (
\lang arabic_arabi
مُعرَب
\lang english
) or not?
\end_layout

\begin_layout Itemize
Declension case (
\lang arabic_arabi
حالة الإعراب
\lang english
): Nominative, Accusative, and Genitive.
 
\end_layout

\begin_layout Itemize
Declension case markers (
\lang arabic_arabi
علامات الإعراب
\lang english
): Fatha, Damma, Kessra, Double-Fatha (with the additional Alef) , Double-Kessra
, Double-Damma.
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Harakat.gif
	scale 60

\end_inset


\begin_inset Graphics
	filename figures/Harakatnun.gif
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Arabic case markers
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Normalization Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of normalization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Filtering stop-words:
\begin_inset CommandInset label
LatexCommand label
name "sub:Filtring-Stop-words:"

\end_inset


\end_layout

\begin_layout Standard
In the previous work, we discussed the feasibility of filtering stop-words
 for search in Quran (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "For-stop-words-filtering,"

\end_inset

).
 We have proposed to select the stop-words from the list of the most frequent
 words in Qur'an, the particles and the pronouns taking in consideration
 their diacritical marks.
\end_layout

\begin_layout Standard
We made an improvement in the tokenization that affect our previous criteria
 for choosing the list of stop-words.
 This improvement is the separation of pronouns and clitics from the lemma
 of the word.
 Clitics such as 
\lang arabic_arabi
فَـ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(fa) generally has a high frequency and hasn't a self independent meaning.
 Therefore, clitics are potential stop-words, should be ignored for a better
 search experience.
 The ignoring should be optional to let the possibility for linguists to
 look for these keywords.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Filtring Stopwords Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of stop-word filtering 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lemmatization:
\end_layout

\begin_layout Standard
The Arabic word has many different level of derivations.
 Those levels are the word, the word without affixes (Lemma), the stem,
 or the root.
 We proposed stripping the affixes in tokenization (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Tokenization:"

\end_inset

).
 In Stemming we either bring it back into stem or root origin.
 The roots in Arabic are the basic unit.
 There are about 10000 roots
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
9273 roots in the lexicon of Lisan Al-arab.
\end_layout

\end_inset

 in Arabic (about 1500 roots in Quran).
 When pairing with patterns, the root can generate more then 1000 variant
 words.
 Generated words could have similar, independent or opposite meanings.
 In the contrary, the stem usually generate a small set of words that have
 a similar meaning.
 Thus, we recommend use the stem as the landmark for this phase.
\end_layout

\begin_layout Standard
We can use the morphology tags from the tokenization phase as feeds for
 the stemmer.
 Some tags are helpful.
 We include the stem value of each word -if available- as a tag.
 We use it to replace the word.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Lematization.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Examples of lemmatization 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Qur'anic Word Search
\end_layout

\begin_layout Standard
Previously, we have considered the ayah as the search unit.
 That means it was the unit of our document index or we can call it 
\emph on
the document
\emph default
.
 The ayah being the document is yet the perfect choice.
 However, to attend many linguistic features (mentioned in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Proposals"

\end_inset

) such as: 
\end_layout

\begin_layout Itemize
Suggestion systems :: Different vocalizations;
\end_layout

\begin_layout Itemize
Linguistic Aspects :: Multi-level derivation;
\end_layout

\begin_layout Itemize
Linguistic Aspects ::
\series bold
 
\series default
Specific-derivations
\end_layout

\begin_layout Itemize
Linguistic Aspects ::
\series bold
 
\series default
Word properties embedded query
\end_layout

\begin_layout Itemize
Linguistic Aspects :: Word linguistic annotations
\end_layout

\begin_layout Standard
We need to consider a different search unit: the Quranic word (
\lang arabic_arabi
اللفظ القرآني
\lang english
).
 The purpose of this is to obtain a quick efficient stable method to retrieve
 specific Quranic words.
 To achieve that we need a corpus of Quranic words enriched with linguistic
 properties of each word.
 This corpus could be based on either the word form or the word occurrence.
 The second choice is the most accurate because the word can change their
 properties moving from an occurrence to another.
 There are about 17 thousands of words with a total about 76 thousands of
 occurrences
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
We calculated those statistics based on the Quran copy downloaded from Tanzil.org
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
We propose those information to be included in the schema of the word document
 index:
\end_layout

\begin_layout Itemize

\series bold
Identifiers
\series default
: a global identifier, a secondary identifier based on the order in the
 ayah added to ayah identifier and surah identifier;
\end_layout

\begin_layout Itemize

\series bold
Different forms
\series default
: Uthmani vocalized word (the main form), Standard vocalized word, Standard
 unvocalized word;
\end_layout

\begin_layout Itemize

\series bold
Transliterations: 
\series default
ISO233, Buckwalter, Arabtex;
\end_layout

\begin_layout Itemize

\series bold
Translations: 
\series default
English, other languages;
\end_layout

\begin_layout Itemize

\series bold
Different levels of stemming
\series default
: Lemma, Stem, Root;
\end_layout

\begin_layout Itemize

\series bold
Other properties:
\series default
 Part Of Speech, type, state, case, mood, voice, number, gender, person.
\end_layout

\begin_layout Standard
Then we make the inverted indexes based on the document indexes as explained
 in the following figure:
\end_layout

\begin_layout Standard
[+figure of indexing the word document index into inverted indexes]
\end_layout

\begin_layout Standard
We should pass the word fields by the same text analyzing phases, we described
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-processing"

\end_inset

.
 We should also preserve a duplicate field for the original word without
 text analyzing in order to satisfy exact search needs.
 
\end_layout

\begin_layout Standard
We use the word search to improve the ayah search by introducing a 2-steps
 search strategy.
 First step, retrieving the best keywords set based on the user query by
 searching in the word-as-a-unit index.
 Second step, retrieving the corresponding ayahs using the keywords set
 resulted from the first step.
 we explaining the 2-steps search strategy on this figure: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Two-steps Search.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Two-Steps search behavior
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 2-steps search must also perform a second operation which is to inquire
 a word ontology to retrieve semantically related words.
 Semantically related words includes 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Idols example - ontologies.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Semantically related words : Idols in Quran
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As a conclusion, the 2-steps search strategy helps in retrieving Quran words
 classified on their origins, properties, translations, transliterations,
 semantic relations.
 The classification goes flexibly, and fast by using inverted indexes and
 ontologies.
 In the following, we explain some potential useful classifications for
 the root 
\lang arabic_arabi
قول
\lang english
 (qwl): 
\end_layout

\begin_layout Enumerate
Synonyms: 
\lang arabic_arabi
نطق
\lang english
, 
\lang arabic_arabi
كلام
\lang english
, 
\lang arabic_arabi
شهادة
\lang english
.
\end_layout

\begin_layout Enumerate
Imperative tense: 
\lang arabic_arabi
قل
\lang english
, 
\lang arabic_arabi
قولوا
\lang english
, 
\lang arabic_arabi
قولي
\lang english
.
\end_layout

\begin_layout Enumerate
Passive form: 
\lang arabic_arabi
يقال
\lang english
, 
\lang arabic_arabi
قيل
\lang english
.
\end_layout

\begin_layout Enumerate
Past tense: 
\lang arabic_arabi
قال
\lang english
, 
\lang arabic_arabi
قالا
\lang english
, 
\lang arabic_arabi
قلنا
\lang english
, 
\lang arabic_arabi
قالت
\lang english
...etc.
\end_layout

\begin_layout Enumerate
Noun, Plural: 
\lang arabic_arabi
الأقاويل
\lang english
.
\end_layout

\begin_layout Standard
Building on the 2-steps strategy we propose those new operations to be implement
ed in the query parser:
\end_layout

\begin_layout Subsection
Word properties search
\end_layout

\begin_layout Standard
This operation replaces the search by the triple root-type-pattern in the
 previous work (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Search-by-the-triple"

\end_inset

).
 Its objective is to allow the users to locate ayahs based on a set of keywords
 chosen by linguistic properties such as Part Of Speech, type, state, case,
 mood, voice, number, gender, person.
 All what we need for the implementation of this operation is the word document
 index with the ability of fielded search.
 A fielded search is an advanced query feature that enables users to select
 and associate the different document fields to which he wishes to limit
 the query, to then use the required keywords within these fields.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
[Figure: fields choosing figure]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We propose the query syntax 
\emph on
{{ PROPERTY_FIELDi:PROPERTY_VALUEi, ...
 }}
\emph default
 to search for the set of words that have the value 
\emph on
PROPERTY_VALUEi
\emph default
 for the property 
\emph on
PROPERTY_FIELDi.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Word_Properties.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Word properties search example : First person, Plural, Masculine
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Subsection
Word Translation search 
\end_layout

\begin_layout Plain Layout
One of search features that we've mentioned in the previous chapter ()
\end_layout

\begin_layout Plain Layout
---
\end_layout

\begin_layout Plain Layout
========
\end_layout

\begin_layout Plain Layout
Objective, behavior, status, needed resources, figure
\end_layout

\begin_layout Plain Layout
========
\end_layout

\begin_layout Plain Layout
Syntax like [[ ]]
\end_layout

\begin_layout Plain Layout
benefit to search inside the TranslatioNs
\end_layout

\begin_layout Plain Layout
+figure: class example
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Semantically Related Words
\end_layout

\begin_layout Standard
This operation replaces the synonyms and antonyms operation in the previous
 work (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Synonyms-&-Antonyms:"

\end_inset

).
 Its objective is to offer the related words of a keyword entered by the
 user.
 The user can specify which semantic relation to inquire: Synonymy, Antonymy,
 Hypernymy, Hyponymy, Meronymy, Holonymy, Troponymy.
 This operation requires an ontology that clarify the relations between
 different Quranic words.
 It is performed firstly by inquiring the ontology for related words and
 secondly by using those keywords to retrieve the corresponding ayahs.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Ontology  Search.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Searching through an ontology
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We propose the query syntax 
\emph on
RELATION~WORD 
\emph default
to search for the words related to the word 
\emph on
WORD 
\emph default
by the semantic relation 
\emph on
RELATION
\emph default
, or 
\emph on
~WORD 
\emph default
to search using an undefined relation
\emph on
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Hyponymy-prophets.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Semantically Related Words, Hyponymy of the word 
\lang arabic_arabi
نبي
\lang english
 (prophet)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Multi-level Derivations
\end_layout

\begin_layout Standard
This operation replaces the derivation search operation in the previous
 work (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Search-by-Derivations:"

\end_inset

).
 The objective of this operation is to get a set of words that share the
 same origin such as stem and root.
 The user has to specify the word and a level of derivation.
 The operation will recover the origin of the word in the specified derivation
 level and retrieve all the set of words that share this origin.
 Since we can adopt the lemma or the stem as the form to save the words
 in indexing phase (after text analyzing).
 So the adopted form would be the reference level to our operation.
 If we adopt the stem so the root level will be the only one.
 If we adopt the lemma there would be two levels: the stem and the root.
 This operation require the origins of each Qur'anic word to be available.
\end_layout

\begin_layout Standard
We propose the query syntax 
\emph on
ORIGIN_LEVEL>WORD
\emph default
 to search for the set of words with the same origin of the word 
\emph on
WORD 
\emph default
in the level 
\emph on
ORIGIN_LEVEL.
 
\emph default
The syntax could be simplified into
\emph on
 >WORD, >>WORD or >>>WORD depending on the 
\emph default
origin level
\emph on
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Multi-level derivation search example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Multi-level Derivation Search example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Specific Derivations
\end_layout

\begin_layout Standard
This operation is quite similar to the previous one in the objective.
 Although, this is about find the words resultants of applying a specific
 derivation operation on the user given word.
 Among the possible derivations, we mention:
\end_layout

\begin_layout Itemize
Conjugation of verbs in different tenses: Perfect, Imperfect, Imperative.
\end_layout

\begin_layout Itemize
Conjugation of verbs with different pronouns:
\end_layout

\begin_deeper
\begin_layout Itemize
Person: First person, Second person, Third preson;
\end_layout

\begin_layout Itemize
Number: Singular, Dual, Plural;
\end_layout

\begin_layout Itemize
Gender: Masculine, Feminine.
\end_layout

\end_deeper
\begin_layout Itemize
Conjugation of verbs in different voices: Active, Passive.
\end_layout

\begin_layout Itemize
Genders and Plurals of a noun: Masculine singular , Feminine singular ,
 Masculine Dual (
\lang arabic_arabi
مثنى
\lang english
), Feminine Dual (
\lang arabic_arabi
مثنى
\lang english
), Masculine Plural, Feminine Plural, Broken Plural, Plural of Plural.
\end_layout

\begin_layout Itemize
Deverbals of a root: Active participle (
\lang arabic_arabi
اسم فاعل
\lang english
), Passive participle (
\lang arabic_arabi
اسم مفعول
\lang english
), Nouns of time and place (
\lang arabic_arabi
أسماء الزمان والمكان
\lang english
), Noun of instrument (
\lang arabic_arabi
اسم الآلة
\lang english
), The Nomen Vicis (
\lang arabic_arabi
اسم المرة
\lang english
), The Nomen Speciei (
\lang arabic_arabi
اسم الهيئة
\lang english
).
\end_layout

\begin_layout Itemize
Other derivations: the forms of exaggeration, The Comparative and Superlative
 Noun.
\end_layout

\begin_layout Standard
The user should enter the keyword and specify which derivation he seeks.
 We generate the set of derived words either by fetching in the word index
 or using linguistic tools such as verb conjugators.
 If it's the second case, the generated set could be filtered as a second
 step by intersection with the set of Quranic words.
 The resulted set will be used to locate the corresponding ayahs.
\end_layout

\begin_layout Standard
We propose the query syntax OPERATION(WORD) to search for the set words
 generated from the word WORD by applying the operation OPERATION.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Specific Derivation example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Special derivations example, Imperative of 
\lang arabic_arabi
قال
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 (to say)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Fuzzy Search
\end_layout

\begin_layout Standard
This operation replaces the Considering/Ignoring spell errors operation
 in the previous work (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Considering/Ignoring-Spelling-fa"

\end_inset

).
 Its objective is to fetch using the set of words that are nearly similar
 to the input word in writing or pronunciation.
 Usually useful to guess the right spellings of a misspelled word.
 There are many methods to implement fuzzy search, some are designed for
 search against previously unknown text such as Liechtenstein distance method
 and other not such as ngrams and spell-checker methods.
 Since we are applying on a previously known text, so that means both of
 the two types is feasible.

\series bold
 
\series default
Nevertheless, methods such Liechtenstein distance and ngrams lack for good
 handling for Arabic vowels (
\lang arabic_arabi
حركات
\lang english
).
 They consider the vowels the same as letters and this leads to an important
 decrease of efficiency.
 To pass on this weakness, those methods should consider any letter followed
 by a vowel as one unit.
 In Arabic, the vocalized letter is considered as one letter whilst in computer
 this still considered as two characters.
 In the other hand, Lam-alef (
\lang arabic_arabi
لا
\lang english
) which is actually two letters still consider as one character in many
 computer writing systems.
 
\end_layout

\begin_layout Standard
Any fuzzy search algorithm should consider some specific similarities in
 Arabic:
\end_layout

\begin_layout Itemize
The similarity between the different forms of each letter: Hamza, Ta', and
 Alef.
 For example, 
\lang arabic_arabi
مءصدة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Hamza on the line) and 
\lang arabic_arabi
مؤصدة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Hamza on waw).
 
\end_layout

\begin_layout Itemize
An unvocalized letter is so similar to a vocalized one whatever the vowel
 is.
 For example, 
\lang arabic_arabi
الحمد
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(unvocalized) and 
\lang arabic_arabi
الحَمْدُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(vocalized).
\end_layout

\begin_layout Itemize
Tanwin in a vowel is roughly similar to a vowel without Tanwin.
 For example, 
\lang arabic_arabi
عشرِ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 (kessra) 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
and 
\lang arabic_arabi
عشرٍ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(tanwin kessra).
\end_layout

\begin_layout Itemize
Shedda on a letter is so similar to the letter doubled.
 For example, 
\lang arabic_arabi
يضلَه
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 (Shedda on Lam) and 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
يضلله
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(doubled Lam).
\end_layout

\begin_layout Standard
The fuzzy search algorithms could be strengthened by coupling it with a
 Phonetic algorithm.
 A phonetic algorithm matches two different words with similar pronunciation
 to the same code, which allows phonetic similarity based word set comparison
 and indexing.
 Usually used for proper names where there is no unified spelling for the
 word 
\begin_inset Note Note
status open

\begin_layout Plain Layout
[REF]
\end_layout

\end_inset

.
 One of the first algorithms was Soundtex invented in the 1910s by 
\noun on
Robert Russell
\noun default
.
 Its working principle is based on the partition of consonants in groups
 with ordinal numbers, which are then compiled to the resulting value.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The following table represents one of the applications of Soundtex on Arabic:
\end_layout

\begin_layout Plain Layout
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Letters
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
omit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang arabic_arabi
ا
\lang english
 
\lang arabic_arabi
و
\lang english
 
\lang arabic_arabi
ي
\lang english
 
\lang arabic_arabi
ع
\lang english
 
\lang arabic_arabi
ح
\lang english
 
\lang arabic_arabi
ه
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang arabic_arabi
ف
\lang english
 
\lang arabic_arabi
ب
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang arabic_arabi
خ
\lang english
 
\lang arabic_arabi
ج
\lang english
 
\lang arabic_arabi
ز
\lang english
 
\lang arabic_arabi
س
\lang english
 
\lang arabic_arabi
ص
\lang english
 
\lang arabic_arabi
ظ
\lang english
 
\lang arabic_arabi
ق
\lang english
 
\lang arabic_arabi
ك
\lang english
 
\lang arabic_arabi
غ
\lang english
 
\lang arabic_arabi
ش
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang arabic_arabi
ت
\lang english
 
\lang arabic_arabi
ث
\lang english
 
\lang arabic_arabi
د
\lang english
 
\lang arabic_arabi
ذ
\lang english
 
\lang arabic_arabi
ض
\lang english
 
\lang arabic_arabi
ط
\lang english
 
\lang arabic_arabi
ة
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang arabic_arabi
ل
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang arabic_arabi
ن
\lang english
 
\lang arabic_arabi
م
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang arabic_arabi
ر
\lang english
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Soundtex table for Arabic [REF]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Generally the fuzzy search should be implemented to work automatically either
 always or when there is a lack of results.
 Another case is to show the possibilities as suggestions.
\end_layout

\begin_layout Standard
Those are some examples of fuzzy search:
\end_layout

\begin_layout Enumerate
Mis-order of letters: 
\lang arabic_arabi
زنبجيل
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
for 
\lang arabic_arabi
زنجبيل
\lang english
.
\end_layout

\begin_layout Enumerate
Phonetic similarity: 
\lang arabic_arabi
هرم
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
for 
\lang arabic_arabi
إرم
\lang english
.
\end_layout

\begin_layout Enumerate
Spelling similarity: 
\lang arabic_arabi
الضحي
\lang english
 for 
\lang arabic_arabi
الضحى
\lang english
.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Subsection
New Arabic Jokers [If you think it hard , avoid it]
\end_layout

\begin_layout Itemize
Consents: ? *
\end_layout

\begin_deeper
\begin_layout Itemize
Hamza 
\end_layout

\end_deeper
\begin_layout Itemize
Vowels: !
\end_layout

\begin_deeper
\begin_layout Itemize
Long Vowels
\end_layout

\begin_layout Itemize
Short Vowels
\end_layout

\end_deeper
\begin_layout Itemize
All: .
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\begin_inset Note Note
status collapsed

\begin_layout Section

\series bold
Suggestion System
\end_layout

\begin_layout Plain Layout
La méthode de fonctionnement des modules de suggestion est généralement :
 pendre les mots-clés résultant du parseur et non pas directement de la
 requête brute entrée par l'utilisateur car certains mots-clés sont traités
 et leur forme change et aussi, de nouveaux mots sont ajoutés, comme dans
 le cas des synonymes et antonymes.
 Le module, grâce à une certaine politique, trouve les mots qui ont une
 relation particulière avec les mots-clés.
 
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Suggestor.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Suggester 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
We explain many possibilities of suggestions and the way to achieve each
 one.
 
\end_layout

\begin_layout Plain Layout
===============
\end_layout

\begin_layout Plain Layout
[definition, what needs, how to achieve that]
\end_layout

\begin_layout Plain Layout
===============
\end_layout

\begin_layout Enumerate

\series bold
Spell correction 
\series default
[either n-grams, Liechtenstein, or spell checker]
\end_layout

\begin_layout Enumerate

\series bold
Semantically related keywords
\series default
 (Ontology-Based) [ Ontology of semantically related words]
\end_layout

\begin_layout Enumerate

\series bold
Different vocalizations 
\series default
[ a mapping unvocalized-vocalized]
\end_layout

\begin_layout Enumerate

\series bold
Collocated words 
\end_layout

\begin_layout Enumerate

\series bold
Different significations [ !! ]
\end_layout

\begin_layout Enumerate

\series bold
Keyword Mapping [ a mapper based on different Arabic-Latin Keyboards]
\end_layout

\begin_layout Section
Statistics Gathering System
\begin_inset CommandInset label
LatexCommand label
name "sec:Statistics-Gathering-System"

\end_inset


\end_layout

\begin_layout Plain Layout
The use of vocalization will improve the quality and the accuracy of statistics
\end_layout

\begin_layout Plain Layout
use the Uthmani text as a default text for statistics in addition to the
 standard text
\end_layout

\begin_layout Plain Layout
what about Dagger-Alef, consider it?
\end_layout

\begin_layout Plain Layout
how to retrieve collocations?
\end_layout

\begin_layout Plain Layout
what words can be considered as Divine name:
\lang arabic_arabi
 *لله*!
\lang english
 , huwa or Rab when it refer surely to Allah?
\end_layout

\begin_layout Plain Layout
Calculating statistics will be during importing texts or after indexing
 them, based on whether they requires text analytics or not.
\end_layout

\begin_layout Section
Toward a Semantic search engine
\end_layout

\begin_layout Plain Layout
Question answering system requeire a resource like WORDNET that defines
 the semantic relations between all words of quran, in addition to accurate
 linguistic analysers.
\end_layout

\begin_layout Plain Layout
---
\end_layout

\begin_layout Plain Layout
faceted thematic search to refine the concepts search by questions
\end_layout

\begin_layout Plain Layout
---
\end_layout

\begin_layout Plain Layout
Semantic search require the implementation of basic linguistic operations
 , 
\end_layout

\begin_layout Plain Layout
the accuracy must be high in order to diminish the ambiguities arisen 
\end_layout

\begin_layout Plain Layout
(google semantic search requirements
\end_layout

\begin_layout Plain Layout
--
\end_layout

\begin_layout Plain Layout
Parsing Arabic texts is not an easy task to perform because of two fundamental
 phenomena.
 The first phenomenon is related to the particularities of that language
 that make it more ambiguous than other natural languages (especially the
 Indo-European ones)1.
 These characteristics influence the different levels of Arabic language
 processing: morphological, syntactic, and semantic.
 We identify the following characteristics [1] that influence the parsing
 task 0: 
\end_layout

\begin_layout Itemize
the diacritization< phenomenon and the grammatical ambiguities; 
\end_layout

\begin_layout Itemize
the agglutination of enclitics with the simple forms; 
\end_layout

\begin_layout Itemize
the flexible order of the components within the same sentence; 
\end_layout

\begin_layout Itemize
the multiplicity of the syntactic interpretations for the same sentence;
 
\end_layout

\begin_layout Itemize
the abundance of the embedded structures; 
\end_layout

\begin_layout Itemize
and the problems related to the segmentation of paragraphs into sentences.
 
\end_layout

\begin_layout Plain Layout
The second phenomenon concerns the significant scarcity of the available
 digital resources for the Arabic language, especially the grammars and
 corpora.
 Therefore, there have not been many research studies that have focused
 on parsing the Arabic texts.
 
\end_layout

\begin_layout Plain Layout
Until now, it has been difficult to say that there are parsers for the Arabic
 language that are efficient and/or marketed, while there has been much
 research on parsing other natural languages.
\end_layout

\begin_layout Plain Layout
Our approach is to make a progressive parser since it proceeded by treating
 a sentence into a number of stages equal to the number of its words.
 At every step, the parser affects the target word with the most likely
 patterns that represent it in the context where it is put.
 Then, it joins the selected patterns with those collected in the previous
 parsing steps in order to construct the representative syntactic tree(s)
 of the whole sentence.
 If more than one tree is proposed, all the analysis trees are sorted according
 to their appearance frequencies in the Treebank.
 
\end_layout

\begin_layout Plain Layout
--
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
Word sens disambiguation
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Section
Conception of features
\end_layout

\begin_layout Plain Layout
scan features and Update the section above not those!
\end_layout

\begin_layout Subsection
Linguistic Options
\end_layout

\begin_layout Subsection
Qur'anic Options
\end_layout

\begin_layout Subsection
Best view of results 
\end_layout

\begin_layout Enumerate
Sorting Arabic letters : how to order hamza forms , ta' forms ...etc.
\end_layout

\begin_layout Subsection
Alternative entry methods
\end_layout

\begin_layout Subsection
Suggestions
\end_layout

\begin_layout Plain Layout
New Plan!
\end_layout

\begin_layout Plain Layout
Quranic WordByWord as a resource to resolve lot of prblems
\end_layout

\begin_layout Plain Layout
http://en.wikipedia.org/wiki/Fuzzy_search
\end_layout

\begin_layout Plain Layout
\begin_inset Note Comment
status open

\begin_layout Plain Layout

\lang arabic_arabi
ما هو ترتيب الاصح للرموز العربية في الحاسوب
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Note Comment
status open

\begin_layout Plain Layout

\lang arabic_arabi
لحرف العربي المشكول يعتبر في اللغة العربية حرفاً واحداً،
\end_layout

\begin_layout Plain Layout

\lang arabic_arabi
ألا يحق لنا أن نتساءل لماذا لا يمكن اعتبار الحرف المشكول حرفاً واحداً في
 الحاسوب؟
\lang english
 
\end_layout

\begin_layout Plain Layout
Personnaliser la distance de Levenshtein pour s'adapter avec les lettres
 vocalisé
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Using Spell Checkers, Spellchecking INTERSECT Quran_Words
\end_layout

\end_inset


\end_layout

\begin_layout Section
Statistics Calculating Methods
\end_layout

\begin_layout Subsection
God names' number:
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Description
Hints:
\end_layout

\begin_layout Itemize
Discover all formes of God's names
\end_layout

\begin_layout Itemize
Unify all these forms in only one regular expression
\end_layout

\end_inset


\end_layout

\begin_layout Section
Toward Semantic Search
\end_layout

\begin_layout Plain Layout
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Semantic search seeks to improve search accuracy by understanding searcher
 intent and the contextual meaning of terms as they appear in the searchable
 dataspace, whether on the Web or within a closed system, to generate more
 relevant results - wiki pedia - http://en.wikipedia.org/wiki/Semantic_search
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Note Comment
status open

\begin_layout Plain Layout

\lang arabic_arabi
محاولة تبسيط عبارة البحث من الشكل التركيبي الى الاستفهام الطبيعي? 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Necessary Quranic Resources
\end_layout

\begin_layout Subsection
Devine Names list
\end_layout

\begin_layout Plain Layout
Devine names are [def].
 [example]
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
We based on our previous work, we proposed fixes for what already done ,
 and new improvements.
 The improvements are about getting to a full vocalized search engine customized
 to offer most of the features mentioned in the previous chapter.
 We proposed a customized text processing to fits the properties of Quranic
 text.
 We introduce searching using the word as a unit in order to achieve a set
 of search features that requires the manipulation of word sets.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Quranic Word Search;
\end_layout

\begin_layout Itemize
An accurate statistics gathering system;
\end_layout

\begin_layout Itemize
More adequate suggestion system;
\end_layout

\begin_layout Itemize
The road-map toward semantic search.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the next chapter, we'll talk about implementation details.
\end_layout

\end_body
\end_document
