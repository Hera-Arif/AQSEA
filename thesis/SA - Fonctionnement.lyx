#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass extreport
\begin_preamble
 \usepackage{styles/esi_memoire}
\end_preamble
\use_default_options true
\begin_modules
hanging
minimalistic
initials
customHeadersFooters
endnotes
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf true
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Advanced  Search Engine in Holy Quran"
\pdf_author "Assem Chelli"
\pdf_subject "Thesis"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 4
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 0
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\boxbgcolor #005500
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 4
\paragraph_separation indent
\paragraph_indentation default
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\bullet 1 0 9 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
setcounter{chapter}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color black
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{chapter}{0}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{arabic} 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

\color black
Search engines 
\begin_inset CommandInset label
LatexCommand label
name "chapitre3"

\end_inset


\end_layout

\begin_layout Standard

\color black
\begin_inset Preview

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
epigraph{
\backslash
textit{How could the world beat a path to your door when the path was uncharted,
 uncatalogued, and could be discovered only serendipitously?}}{
\backslash
textit{Paul Gilster, Digital Literacy}}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\color black
Introduction 
\color inherit

\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
google this book: Advances in Information Retrieval Croft W
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color black
Our work falls within the field of Information Retrieval, as it aims to
 design a search engine, in this chapter we will discuss how search engines
 work by explaining its main components.
\end_layout

\begin_layout Standard

\color black
Exploration is the part that feeds the search engine by documents that it
 collects, but with the amount of information that becomes larger and larger,
 it is necessary to develop methods of search, only indexing able to accelerate
 search in very large systems such as the Web, because it anticipates the
 search by extracting and arranging them keywords.
\end_layout

\begin_layout Standard

\color black
So that search results be satisfactory, we must properly calculate the relevance
 of results against the query, this is done during the interrogation.
 The question must also be able to express simple questions as well as complex
 questions.
 
\end_layout

\begin_layout Standard

\color black
The quality of research is directly related to the quality of the crawling,
 indexing and search, these three operations can be considered as the core
 of search engine, the objective of this chapter is to define the main concepts
 of this area, starting with defining the crawling, then study indexing,
 its methods and steps, and then we shall explain the process of search
 and the notion of relevance.
 
\begin_inset Note Greyedout
status collapsed

\begin_layout Plain Layout

\color black
+overview of all search engines : General, Arabic, Quranic
\end_layout

\end_inset


\end_layout

\begin_layout Section

\color black
Definitions
\end_layout

\begin_layout Subsection

\color black
Keyword
\end_layout

\begin_layout Standard

\color black
Word or set of words chosen to represent the contents of a document, and
 find it in document search.
 It can be coming from the document (title, text, abstract, ...) or a controlled
 vocabulary..
\begin_inset CommandInset citation
LatexCommand cite
key "Han98"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Descriptor
\end_layout

\begin_layout Standard

\color black
Keyword selected from a set of equivalent terms to represent clearly a concept.
 It is usually part of an organized and hierarchical vocabulary of type
 "
\emph on
thesaurus
\emph default
".
\begin_inset CommandInset citation
LatexCommand cite
key "Han98"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Document 
\end_layout

\begin_layout Standard

\color black
A document can be text, a piece of text, web page, image, video, etc.
 We call Document any unit that can be an answer to a user query.
 For textual documents, there are many forms regarding their specification.
 A document can be a text without any structure (it is also called full-text)
 and may also be a text with a structured part (document partially structured
 or semi structured) or fully structured.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Amr08"

\end_inset


\end_layout

\begin_layout Subsection
Query
\end_layout

\begin_layout Standard

\color black
A query expresses the need for information of a user.
 Various types of query languages ​​have been proposed to formulate a query.
 A query can be expressed: 
\end_layout

\begin_layout Itemize

\color black
In natural (or almost) language (eg: "find all the manufacturing facilities
 of cars and their addresses")
\begin_inset CommandInset citation
LatexCommand cite
key "Sal71"

\end_inset


\end_layout

\begin_layout Itemize

\color black
In a structured format, also called Boolean query language (eg: "cars and
 factories and brand")
\begin_inset CommandInset citation
LatexCommand cite
key "Bou79"

\end_inset


\end_layout

\begin_layout Itemize

\color black
As graphical language from a 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "GUI"
description "graphical user interface"

\end_inset

GUI 
\begin_inset CommandInset citation
LatexCommand cite
key "Lel92"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Relevance
\end_layout

\begin_layout Standard

\color black
Relevance is a word that simply means returning the information considered
 the most useful at the top of a result list.
 While the definition is simple, getting a program to compute relevance
 is not a trivial task, mainly because the notion of usefulness is hard
 for a machine to understand.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ber08"

\end_inset


\end_layout

\begin_layout Section

\color black
Search engines
\end_layout

\begin_layout Standard

\color black
A search engine is software that allows to regain resources (web pages,
 images, video, files, information ...
 etc.) related to any words.
 Some websites offer a search engine as the main feature, called then search
 engine the website itself (Google, Yahoo, Bing ...
 are search engines).
 
\begin_inset CommandInset citation
LatexCommand cite
key "Nej07"

\end_inset


\end_layout

\begin_layout Standard

\color black
A search engine is also a crawling tool on the web made ​​up of "robots"
 that explore the websites periodically and automatically (without human
 intervention, that is what distinguishes search engines from directories).
 They follow the links (pages that link to each other) encountered on each
 page reached.
 Each identified page will be indexed in a database, then will be accessible
 by Internet users using keywords.
\begin_inset CommandInset citation
LatexCommand cite
key "San08"

\end_inset


\end_layout

\begin_layout Standard

\color black
Search engines do not apply only to Web: some engines are softwares installed
 on personal computers.
 These are known as desktop search engines , they aims the search in the
 files stored on the PC
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "PC"
description "Personal Computer"

\end_inset

 - include such Exalead Desktop, Google Desktop and Copernic Desktop Search
 ...
 etc.
\end_layout

\begin_layout Standard

\color black
In December 2004, Tim Berners Lee (the inventor of the World Wide Web) talked
 about a new project: "Semantic Web" which is based on processing of the
 web information automatically according to their significances.
 The reason for this was that 80% of Web contains texts intended to be read
 and understood by humans.
 While computer programs, Web browsers and search engines are unable to
 understand this content, so they are unable to speed up the search.
 In less than two years from the article of Lee, the First foundations of
 Semantic Web were formed.
 They seemed to lead the world toward a new revolution in Internet and search
 engines .
\begin_inset CommandInset citation
LatexCommand cite
key "Abu09"

\end_inset


\end_layout

\begin_layout Standard

\color black
At first glance, nothing distinguishes a classic search engine from a semantic
 one.
 The same sparse interface, with a text box in the center of the page where
 the user can enter his search query.
 In fact, the difference lies in the search mode.
 A classic search engine , as Google, works as follows: its robots index
 browse the pages and index the words.
 Then store these words in a gigantic database.
 Users can do search by send their queries and a search algorithm retrieve
 the results and sort them in a certain order based on their relevance.
\begin_inset CommandInset citation
LatexCommand cite
key "Ment08"

\end_inset


\end_layout

\begin_layout Section

\color black
Full-text search
\end_layout

\begin_layout Standard

\color black
Full-text search is a technology focused on finding documents matching a
 set of words .
\end_layout

\begin_layout Standard

\color black
While sounding like a mouthful, full-text search is more common than you
 might think.
 You probably have been using full-text search today.
 Most of the web search engines such as Google and Yahoo! use full-text
 search engines at the heart of their service.
 The differences between each of them are recipe secrets (and sometimes
 not so secret), such as the Google PageRank
\begin_inset script superscript

\begin_layout Plain Layout

\color black
TM
\end_layout

\end_inset

 algorithm.
 PageRank
\begin_inset script superscript

\begin_layout Plain Layout

\color black
TM
\end_layout

\end_inset

 will modify the importance of a given web page (result) depending on how
 many web pages are pointing to it and how important each page is .
 
\end_layout

\begin_layout Standard

\color black
Be careful, though; these so-called web search engines are way more than
 the core of full-text search: They have a web UI 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "UI"
description "User Interface\\\\"

\end_inset

, they crawl the web to find new pages or existing ones, and so on.
 They provide business-specific wrapping around the core of a full- text
 search engine.
 
\end_layout

\begin_layout Standard

\color black
Given a set of words (the query), the main goal of full-text search is to
 provide access to all the documents matching those words.
 Because sequentially scanning all the documents to find the matching words
 is very inefficient, a full-text search engine (its core) is split into
 two main operations: indexing the information into an efficient format
 and searching the relevant information from this precomputed index.
 From the definition, you can clearly see that the notion of 
\size footnotesize
word
\size default
 is at the heart of full-text search; this is the atomic piece of information
 that the engine will manipulate.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ber08"

\end_inset


\end_layout

\begin_layout Section
Crawling
\end_layout

\begin_layout Standard

\color black
Crawling is the process by which we gather pages from the Web, in order
 to index them and support a search engine.
 The objective of crawling is to quickly and efficiently gather as many
 useful web pages as possible, together with the link structure that interconnec
ts them.
 the web crawler is sometimes referred to as a spider .
 
\begin_inset CommandInset citation
LatexCommand cite
key "Chr09"

\end_inset


\end_layout

\begin_layout Standard

\color black
This process is in the phase preceding the indexing phase, see Figure: 
\end_layout

\begin_layout Standard

\color black
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center

\color black
\begin_inset Graphics
	filename figures/Crawling.png

\end_inset


\end_layout

\begin_layout Plain Layout

\color black
\begin_inset Caption

\begin_layout Plain Layout
The various components of a web search engine 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\color black
Crawler Features
\end_layout

\begin_layout Standard

\color black
We list the desiderata for web crawlers in two categories: features that
 web crawlers must provide, followed by features they should provide.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Chr09"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
Features a crawler must provide 
\end_layout

\begin_layout Subparagraph

\color black
Robustness :
\end_layout

\begin_layout Standard

\color black
The Web contains servers that create spider traps, which are generators
 of web pages that mislead crawlers into getting stuck fetching an infinite
 number of pages in a particular domain.
 Crawlers must be designed to be resilient to such traps.
 Not all such traps are malicious; some are the inadvertent side-effect
 of faulty website development .
 
\end_layout

\begin_layout Subparagraph

\color black
Politeness :
\end_layout

\begin_layout Standard

\color black
Web servers have both implicit and explicit policies regulating the rate
 at which a crawler can visit them.
 These politeness policies must be respected .
 
\end_layout

\begin_layout Subsubsection

\color black
Features a crawler should provide 
\end_layout

\begin_layout Subparagraph

\color black
Distributed :
\end_layout

\begin_layout Standard

\color black
The crawler should have the ability to execute in a distributed fashion
 across multiple machines .
\end_layout

\begin_layout Subparagraph

\color black
Scalable : 
\end_layout

\begin_layout Standard

\color black
The crawler architecture should permit scaling up the crawl rate by adding
 extra machines and bandwidth .
\end_layout

\begin_layout Subparagraph

\color black
Performance and efficiency :
\end_layout

\begin_layout Standard

\color black
The crawl system should make efficient use of various system resources including
 processor, storage and network band- width.
\end_layout

\begin_layout Subparagraph

\color black
Quality :
\end_layout

\begin_layout Standard

\color black
Given that a significant fraction of all web pages are of poor utility for
 serving user query needs, the crawler should be biased towards fetching
 “useful” pages first.
 
\end_layout

\begin_layout Subparagraph

\color black
Freshness :
\end_layout

\begin_layout Standard

\color black
In many applications, the crawler should operate in continuous mode: it
 should obtain fresh copies of previously fetched pages.
 A search engine crawler, for instance, can thus ensure that the search
 engine’s index contains a fairly current representation of each indexed
 web page.
 For such continuous crawling, a crawler should be able to crawl a page
 with a frequency that approximates the rate of change of that page.
 
\end_layout

\begin_layout Subparagraph

\color black
Extensible :
\end_layout

\begin_layout Standard

\color black
Crawlers should be designed to be extensible in many ways – to cope with
 new data formats, new fetch protocols, and so on.
 This demands that the crawler architecture be modular.
 
\end_layout

\begin_layout Section

\color black
Indexing
\end_layout

\begin_layout Standard

\color black
To make the research cost acceptable, it should pass  by an essential phase
 in the document database.
 This phase consists in analyzing each document in the collection to create
 a set of keywords: we call it the indexing phase.
 These keywords will be more easily used by the system during the subsequent
 process of search.
 Indexing create a representation of documents in the system.
 Its objective is to find the most important concepts of the document (or
 query), which form the descriptor of document.
\begin_inset CommandInset citation
LatexCommand cite
key "Sau05"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Definition
\end_layout

\begin_layout Standard

\color black
Indexing is the act of describing or classifying a document by index terms
 or other symbols in order to indicate what the document is about, to summarize
 its content or to increase its find-ability.
 In other words, it is about identifying and describing the subject of documents.
 Indexes are constructed, separately, on three distinct levels: terms in
 a document such as a book; objects in a collection such as a library; and
 documents (such as books and articles) within a field of knowledge.
\end_layout

\begin_layout Standard

\color black
The process of indexing begins with any analysis of the subject of the document.
 The indexer must then identify terms which appropriately identify the subject
 either by extracting words directly from the document or assigning words
 from a controlled vocabulary.
 The terms in the index are then presented in a systematic order.
 Indexers must decide how many terms to include and how specific the terms
 should be.
 Together this gives a depth of indexing.
\begin_inset CommandInset citation
LatexCommand cite
key "lancaster2003indexing"

\end_inset


\end_layout

\begin_layout Standard

\color black
Indexing is most often used to information retrieval.
 But it can also be used in other areas such as automatic classification
 of documents,   keyword suggestion, co-occurring terms calculating, automatic
 summarization, etc.
\begin_inset CommandInset citation
LatexCommand cite
key "Aba09"

\end_inset


\end_layout

\begin_layout Standard

\color black
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color black
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center

\color black
\begin_inset Graphics
	filename Indexing.png

\end_inset


\end_layout

\begin_layout Plain Layout

\color black
\begin_inset Caption

\begin_layout Plain Layout
Processus d’indexation
\end_layout

\end_inset


\end_layout

\end_inset

 to translate or to remove
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\color black
Indexing modes
\end_layout

\begin_layout Subsubsection

\color black
Manual indexing
\end_layout

\begin_layout Standard

\color black
Manual indexing is achieved by a human expert (librarian or specialist in
 the field ) that analyzes the content of the text to identify the terms
 representing the document.
\end_layout

\begin_layout Standard

\color black
Manual indexing ensures greater relevance in the answers, because it identifies
 a more specific keywords describing a document.
\end_layout

\begin_layout Standard

\color black
However, it has several drawbacks, there is the problem of used vocabulary
 and the dependence on indexer's knowledge on the topic, ie the same document
 can be indexed in several ways (according to vision of the person who makes
 the indexing), and an indexer at two different times can have two distinct
 terms to represent the same concept.
\end_layout

\begin_layout Standard

\color black
The major drawback of this method is the cost in time, this method is not
 therefore appropriate when the number of documents to be indexed is substantial.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Sau05,Aba09,Amr08"

\end_inset

 
\end_layout

\begin_layout Standard

\color black
Manual indexing is based on four key points 
\begin_inset CommandInset citation
LatexCommand cite
key "Cha89"

\end_inset

 : 
\end_layout

\begin_layout Itemize

\color black
reading the entire document for preparation ;
\end_layout

\begin_layout Itemize

\color black
consideration of descriptors, objectives (applications) and user needs;
\end_layout

\begin_layout Itemize

\color black
permanent complementarity between the terms of manual indexing and abstract;
\end_layout

\begin_layout Itemize

\color black
in the absence of appropriate descriptor, and when the emergence of a new
 concept is not explicit enough to propose a candidate descriptor, the ability
 to use a close or generic descriptor.
\end_layout

\begin_layout Standard

\color black
So we thought fast enough to use the computer
\begin_inset CommandInset citation
LatexCommand cite
key "Mus"

\end_inset

.
\end_layout

\begin_layout Subsubsection

\color black
Automatic indexing 
\end_layout

\begin_layout Standard

\color black
Automatic indexing is a set of automated processing phases applied on documents.
 We distinguish: Tokenization (automatic extraction of word), Elimination
 of stop words, Stemming (Lemmatization or radicalization), Scoring of words
 and finally the creation of the index
\begin_inset CommandInset citation
LatexCommand cite
key "Sau05"

\end_inset

.
 
\end_layout

\begin_layout Standard

\color black
The first approach to the automatic indexation KWIC (Key Word In Context-)
 was introduced by
\noun on
 Luhn
\noun default
 (1957)
\begin_inset CommandInset citation
LatexCommand cite
key "luhn1957statistical"

\end_inset

.
 There was discussion about to weight the index.
 In the early days of information retrieval, statistical methods were based
 on the frequency of words in the document.
 Later, this measure was extended to take into account the specificity of
 a term for the document.
 To this end, other methods have been exploited, such as 2-Poisson (Nie,
 2003)
\size tiny
\color inherit

\begin_inset CommandInset citation
LatexCommand cite
key "gaussier2003assistance"

\end_inset


\size default
\color black

\begin_inset CommandInset citation
LatexCommand cite
key "Mus"

\end_inset

.
 
\end_layout

\begin_layout Standard

\color black
The automatic indexing systems use several methods of analysis: 
\end_layout

\begin_layout Paragraph

\color black
Linguistic analysis: 
\end_layout

\begin_layout Standard

\color black
Technology issued from "text mining", the latter is to implement a simplified
 model of linguistic theories in computer systems of learning.
 This is part of the artificial intelligence field .
 
\begin_inset CommandInset citation
LatexCommand cite
key "All08"

\end_inset


\end_layout

\begin_layout Standard

\color black
The linguistic method consists of several modules of linguistic analysis:
 morphological, lexical, syntactic and pragmatic.
 The fact that some systems use indexing techniques of natural language
 processing, demonstrates the relevance of a linguistic approach.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Hach97"

\end_inset


\end_layout

\begin_layout Paragraph

\color black
Statistical analysis: 
\end_layout

\begin_layout Standard

\color black
The initiator of the methods of the automatic indexation is H.P.
 
\noun on
Luhn
\noun default
 with his influential article “The automatic creation of literature abstracts”
 published in 1958 in the “Journal of Research and Development” of IBM.
 He states : « (...) instead of sampling at ran- dom, as a reader normally
 does when scanning, the new mechanical method selects those among all the
 sentences of an article that are the most representative of pertinent informati
on », 
\noun on
H.
 P.

\noun default
 
\noun on
Luhn
\noun default
 opened the door to work on automatic indexing by proximity also called
 statistical method
\begin_inset CommandInset citation
LatexCommand cite
key "luhn1958automatic"

\end_inset

.
\end_layout

\begin_layout Standard

\color black
Automatic indexing involves the following steps : 
\end_layout

\begin_layout Itemize

\color black
Extracting words (tokenization): the extraction rules are language-dependent.
 
\end_layout

\begin_layout Itemize

\color black
Eliminating stop words (stop words): these are words too frequent but unnecessar
y.
 Example: the, a, of, or ...
 etc.
\end_layout

\begin_layout Itemize

\color black
Stemming : for example the stem of the word "stemmers" is "stem".
 
\end_layout

\begin_layout Itemize

\color black
Transformation rules: removal of plural endings.
 
\end_layout

\begin_layout Itemize

\color black
Truncation: choose an optimal value of truncation of words.
 It is better to truncate suffixes.
 There is no absolute rule for this.
 
\end_layout

\begin_layout Subsubsection

\color black
Semi-automatic indexing
\end_layout

\begin_layout Standard

\color black
The two previous techniques can be combined, a first automatic process to
 extract the terms of the document.
 However the final choice remains the expert in the field or librarian to
 establish semantic relations between keywords and choose the significant
 terms using a thesaurus or a terminology database which is an organized
 list of descriptors (keywords) obeying specific terminology rules
\begin_inset CommandInset citation
LatexCommand cite
key "Aba09,Sau05,Hadj08"

\end_inset

.
\end_layout

\begin_layout Subsection

\color black
Index types
\end_layout

\begin_layout Standard

\color black
The index is the output of the indexing process, there are several types
 of indexes according to the used technique and the desired function:
\end_layout

\begin_layout Subsubsection

\color black
Document Index 
\end_layout

\begin_layout Standard

\color black
The document index keeps information about each document.
 It is an index ISAM (Index sequential access mode) with a fixed width,
 ordered by the ID of the document.
 The information stored in each entry includes data, a checksum of documents
 and various statistics.
 If the document was crawled, it also contains a pointer to a variable width
 file called the document information that contains the URL and title.
 This design decision was driven by the desire to have a relatively compact
 data structure, and the ability to find a record in one disk traversal,
 when queried.
\begin_inset CommandInset citation
LatexCommand cite
key "Brin98"

\end_inset


\end_layout

\begin_layout Standard

\color black
The following table is a simplified illustration of a document index: 
\end_layout

\begin_layout Standard

\color black
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center

\color black
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Text
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Link
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
The cow says moo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
/ex/doc1.txt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
The cat and the hat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
/ex/doc2.txt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
The dish ran away with the spoon
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
/ex/doc3.txt
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\color black
\begin_inset Caption

\begin_layout Plain Layout
Document Index
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
Forward Index 
\end_layout

\begin_layout Standard

\color black
The forward index stores a list of words for each document.
 The following is a simplified form of forward index:
\end_layout

\begin_layout Standard

\color black
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\color black
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Words
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
the, cow, says, moo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
the, cat, and, the, hat 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
the, dish, ran, away, with, the, spoon
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\color black
\begin_inset Caption

\begin_layout Plain Layout
Forward Index
\end_layout

\end_inset


\end_layout

\end_inset

The rationale behind developing a forward index is that as documents are
 parsing, it is better to immediately store the words per document.
 The delineation enables Asynchronous system processing, which partially
 circumvents the inverted index update bottleneck.
 The forward index is sorted to transform it to an inverted index.
 The forward index is essentially a list of pairs consisting of a document
 and a word, collated by the document.
 Converting the forward index to an inverted index is only a matter of sorting
 the pairs by the words.
 In this regard, the inverted index is a word-sorted forward index.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Brin98"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
Inverted index 
\end_layout

\begin_layout Standard

\color black
Many search engines include an inverted index when evaluating a search query
 to quickly retrieve documents that contain words in the query and then
 sort them by relevance.
 Since the inverted index stores the list of documents containing each word,
 the search engine can use direct access to find documents associated with
 each word in a query to retrieve documents that respond quickly.
 The following table is a simplified illustration of an inverted index:
 
\end_layout

\begin_layout Standard

\color black
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\color black
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Word
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Documents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
 the
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 1, Document 3, Document 4, Document 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
cow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 2, Document 3, Document 4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
says
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
 moo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Document 7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\color black
\begin_inset Caption

\begin_layout Plain Layout
 Inverted Index
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color black
This index can identify only if a word exists in a particular document because
 it does not store any information regarding the frequency or the position
 of the word.
 It is considered an index of boolean.
 This index determines which documents that match a query, but does not
 classify them.
 In some models, the index includes additional information such as frequency
 of each word in each document or positions of a word in each document.
 The position information allow the search algorithm to identify the adjacent
 words to support the search by phrases.
 The frequency can be used to assist calculating the relevance of documents
 to the query.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Gro02,Tan04"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
N-gram index
\end_layout

\begin_layout Standard

\color black
An n-gram is a sequence of n consecutive characters.
 For any document, all n-grams (usually n takes the values ​​2 or 3) we
 can generate, is the result obtained by shifting a window of n squares
 on the body text.
 This shift occurs in steps, one step corresponds to a character.
 Then we calculate the frequencies of n-grams found.
 for example 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\color black
le caractère “_” est utilisé à la place des blancs, pour faciliter la lecture.
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Jal02"

\end_inset

the french sentence
\emph on
 "La nourrice nourrit le nourrisson"
\emph default
 is represented by :
\end_layout

\begin_layout Standard

\color black
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\color black
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="14">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
…
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
n-grams
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
la_
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
a_n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
_no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
nou
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
our
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
urr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
rri
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
 ric
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
ice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
_ce
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
e_n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
rit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
…
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
Frequencies
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color black
…
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\color black
\begin_inset Caption

\begin_layout Plain Layout
N-gram index
\end_layout

\end_inset


\end_layout

\end_inset

One benefit of n-grams is automatic tracking of the most common stems 
\begin_inset CommandInset citation
LatexCommand cite
key "Gref95"

\end_inset

: dans in the previous example, using techniques based on n-grams we find
 the common root of : Nourrir, nourri, nourrit, nourrissez, nourriture,
 etc.
 Tolerance to spelling mistakes and distortions is also an important property.
 
\begin_inset CommandInset citation
LatexCommand cite
key "San08"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Index storage
\end_layout

\begin_layout Standard

\color black
Le stockage des structures d’index est caractérisé essentiellement par la
 taille de l’index et l’organisation des éléments de celui-ci.
 Les structures d'index varient largement dans leur consommation d'espace
 qui est étroitement liée à l’organisation des données dans l’index.
\end_layout

\begin_layout Standard

\color black
Cette organisation a un impact significatif sur la latence de recherche.
 Plus les éléments liés sont près les uns des autres dans l’espace de stockage
 moins est la latence de recherche, c’est ce qu’on appelle le concept de
 localité.
 Il est également très important que l’index puisse tenir dans la mémoire
 centrale, cela évite les accès disque au système et réduit considérablement
 la latence de recherche.
 
\end_layout

\begin_layout Standard

\color black
L’index idéal est donc celui qui occupe moins d’espace et qui permet de
 réduire au maximum la latence de recherche.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Mise à jour d’index 
\end_layout

\begin_layout Standard

\color black
Par mise à jour d’index on entend le comportement de l’index face aux changement
s que subit la base de données.
 Des changements qui peuvent être des insertions, des modifications ou des
 suppressions.
 Et ceci peut concerner les documents comme les nœuds des documents.
 Un index peut être plus ou moins capable de s'adapter à ces changements.
 Cette adaptation peut se présenter sous trois formes :
\end_layout

\begin_layout Subsubsection

\color black
Mise à jour incrémentale 
\end_layout

\begin_layout Standard

\color black
Dans le cas d’une mise à jour incrémentale (également appelée par augmentation)
 la structure de l'index est mise à jour en lui rajoutant les index des
 nouvelles données (documents ou nœuds à indexer) sans modifier ceux qui
 existent déjà.
 Le nombre de changements supportés est cependant, souvent limité, dans
 ce cas.
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
Mise à jour progressive 
\end_layout

\begin_layout Standard

\color black
Dans le premier cas la structure de l'index existante peut être modifiée
 et les modifications sont limitées uniquement à une petite partie de l'index.
 Cet index supporte donc des mises à jour progressives.
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
Mise à jour globale 
\end_layout

\begin_layout Standard

\color black
Le troisième cas, et le plus défavorable, c’est quand la structure de l'index
 entière doit être reconstruite à partir de zéro.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Les étapes d’indexation
\end_layout

\begin_layout Standard

\color black
Le processus d’indexation se compose des étapes suivantes :
\end_layout

\begin_layout Subsubsection

\color black
Extraction des mots-clés (Tokenization)
\end_layout

\begin_layout Standard

\color black
L’extraction des mots-clés est une étape qui peut sembler triviale au premier
 abord, et qui pourtant constituera la base de tout le reste du processus
 d’indexation.
 Il faut donc que cette phase soit d’une qualité maximale.
\begin_inset CommandInset citation
LatexCommand cite
key "Maylan2001"

\end_inset


\end_layout

\begin_layout Standard

\color black
Certains systèmes de recherche d’information utilisent une liste de mots-clés
 prédéfinie.
 Cette liste est conçue manuellement et, dans la plus part des cas, construite
 par rapport à un thème spécifique.
 Cette méthode permet entre autre de contrôler la taille des index.
 L’utilisation d’une extraction automatique des mots-clés ou l’utilisation
 d’une liste de mots-clés prédéfinie, détermine le type d’indexation.
 Orientée document dans le premier cas et orientée requête dans le second
 .
\begin_inset CommandInset citation
LatexCommand cite
key "Berrut97,Dah06"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
Normalisation des mots-clés
\end_layout

\begin_layout Standard

\color black
Ce traitement consiste à retrouver pour un mot sa forme normalisée (généralement
 le masculin pour les noms, l’infinitif pour les verbes, le masculin singulier
 pour les adjectifs, etc.).
 Ainsi, dans l’index ne sont conservées que les formes normalisées, ce qui
 offre un gain de place appréciable, mais surtout, si le même traitement
 est effectué sur la requête, cela permet d’être beaucoup plus souple et
 rapide dans la recherche: par exemple, si l’utilisateur effectue une recherche
 avec un verbe, les documents comportant ce verbe dans toutes ses formes
 conjuguées seront pris en compte, et pas seulement les documents contenant
 le verbe dans la forme fournie par l’utilisateur.
 Cette étape est également appelée « traitement morphologique des mots-clés
 » 
\begin_inset CommandInset citation
LatexCommand cite
key "Den04"

\end_inset


\end_layout

\begin_layout Standard

\color black
Cette phase peut également être enrichie avec un traitement syntaxique et
 sémantique des mots-clés.
 Le premier consiste à identifier et regrouper un ensemble de mots dont
 la signification dépend de leur union.
 Par exemple, les mots « maison blanche » ne signifient habituellement pas
 qu’on a affaire à une maison qui est blanche, mais plutôt au siège de la
 présidence des États-Unis.
 Elle consiste aussi à éliminer des ambiguïtés comme par exemple les problèmes
 d’homographie.
 
\end_layout

\begin_layout Standard

\color black
Le traitement sémantique
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout

\color black
This is very important, it's what you need for semantic search
\end_layout

\end_inset

 a pour but de faire des distinctions entres les différents sens possibles
 d’un même mot (polysémie).
 Par exemple, cette phase permet de différencier le mot « pièce » qui peut
 correspondre à une pièce de monnaie par exemple, ou à une pièce dans une
 maison.
 C’est une tâche ardue qui n’est pas aujourd’hui bien maîtrisée et dont
 l’intérêt en termes de hausse des performances des systèmes n’est pas toujours
 démontré.
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
Élimination des mots vides 
\end_layout

\begin_layout Standard

\color black
Cette étape revêt une importance certaine dans la mesure où elle constitue
 un facteur d’une grande influence dans la précision de la recherche.
 Le fait de ne pas éliminer les mots vides provoque inévitablement du bruit.
 L’élimination des mots vides qui sont des mots du langage courant et qui
 ne contiennent pas beaucoup d'information sémantique doit se faire aussi
 bien à l’indexation qu’à l’interrogation (élimination des mots vides de
 la requête).
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsubsection

\color black
La pondération 
\end_layout

\begin_layout Standard

\color black
Cette étape est entièrement dépendante du modèle de recherche d’information
 utilisé.
 Elle permet de définir l’importance qu’a un terme dans un document donné,
 elle est également utilisée pour filtrer l’index résultant du processus
 d’indexation (c’est-à-dire : éliminer les index dont le poids est inférieur
 à un certain seuil).
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Standard

\color black
De manière générale, la majorité des formules de pondération des termes
 est construite par combinaison de deux facteurs.
 Un facteur de pondération locale quantifiant la représentativité locale
 d’un terme dans le document, et un second facteur de pondération globale
 mesurant la représentativité globale du terme vis-à-vis de la collection
 des documents.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Amr08"

\end_inset


\end_layout

\begin_layout Standard

\color black
Il y a deux types de pondération : 
\end_layout

\begin_layout Paragraph

\color black
Pondération locale 
\end_layout

\begin_layout Standard

\color black
La pondération locale prend en considération les informations locales du
 terme qui ne dépendent que du document.
 Elle correspond généralement à une fonction de la fréquence d'apparition
 du terme dans le document, notée 
\series bold
tf
\series default
 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "TF"
description "Term Frequency"

\end_inset

(
\emph on
Term Frequency
\emph default
).
 Un terme qui apparaît fréquemment dans un document sera considéré comme
 pertinent pour décrire son contenu.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Paragraph

\color black
Pondération globale 
\end_layout

\begin_layout Standard

\color black
La pondération globale mesure l'importance d'un terme au sein de l'ensemble
 des documents de la collection.
 Elle vise à représenter son caractère discriminant ou en d’autres termes
 sa capacité à différencier les documents de la collection.
 En effet, un terme apparaissant dans peu de documents est considéré comme
 plus discriminant et doit être privilégié par rapport à un terme présent
 dans de nombreux documents.
 Le calcul de la pondération globale s'appuie sur le nombre de documents
 de la collection dans lesquels un terme apparaît.
 L'une des mesures les plus utilisées est 
\series bold
l’idf 
\series default

\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "IDF"
description "Inverse Document Frequency"

\end_inset

(
\emph on
Inverse Document Frequency
\emph default
), représentée par la formule suivante:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Formula $Idf=\log(\frac{N}{n_{i}})$
\end_inset


\end_layout

\begin_layout Standard

\color black
Où i n est le nombre de documents contenant le terme i t i et N le nombre
 total de documents dans la collection.
\end_layout

\begin_layout Standard

\color black
La mesure 
\series bold
tf *idf
\series default
 donne une bonne approximation de l’importance d’un terme dans le document,
 particulièrement dans les corpus de documents de taille homogène.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Section

\color black
Interrogation 
\end_layout

\begin_layout Standard

\color black
L'interrogation est la phase d'interaction entre le système et l'utilisateur.
 Ce dernier exprime son besoin d'information via un langage de requête que
 le système va se charger de traduire.
 Cette traduction se fait selon le modèle de requête et a pour but de comprendre
 les besoins de l'utilisateur et de les exprimer dans un formalisme similaire
 à celui mis en œuvre lors de l'indexation des documents.
 Ce processus fournit une requête interne.
 Suite à cette phase de compréhension de la requête, un modèle de correspondance
 calcule la correspondance entre la requête interne et chaque index des
 documents.
 Ce calcul, établi par la fonction de correspondance, a classiquement pour
 résultat une liste ordonnée des documents de la base.
 Il faut, à ce niveau, établir une comparaison sémantique (et non une égalité)
 entre les concepts figurants dans un document et ceux figurants dans la
 requête.
\end_layout

\begin_layout Standard

\color black
La comparaison entre requête et document aboutit rarement à des équivalences
 strictes, mais plutôt à des équivalences partielles : le document correspond
 à une partie seulement de la requête.
 Le premier document de la liste renvoyée par le système est celui qui est
 considéré par le système comme le plus pertinent, c’est-à-dire celui qui
 répond le mieux à la requête, toujours d'après le système.
 Le dernier document est celui qui est considéré par le système comme le
 moins pertinent.
 Cette notion de pertinence repose sur la proximité entre les besoins exprimés
 par l'utilisateur et les résultats fournis par le système.
 On différencie la pertinence utilisateur de la pertinence système.
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsection

\color black
La notion de pertinence 
\end_layout

\begin_layout Standard

\color black
Pertinence est une notion centrale de l’interrogation car toutes les évaluations
 s'articulent autour de cette notion.
 Mais c'est aussi la notion la plus mal connue, malgré de nombreuses études
 portant sur cette notion tel que celle figurant dans.
\begin_inset CommandInset citation
LatexCommand cite
key "Denos97"

\end_inset


\end_layout

\begin_layout Standard

\color black
Voyons quelques définitions de la pertinence pour avoir une idée de la divergenc
e.
 La pertinence est: 
\end_layout

\begin_layout Itemize

\color black
La correspondance entre un document et une requête, une mesure d'informativité
 du document à la requête; 
\end_layout

\begin_layout Itemize

\color black
Un degré de relation (chevauchement, relativité, …) entre le document et
 la requête; 
\end_layout

\begin_layout Itemize

\color black
Un degré de la surprise qu'apporte un document, qui a un rapport avec le
 besoin de l'utilisateur; 
\end_layout

\begin_layout Itemize

\color black
Une mesure d'utilité du document pour l'utilisateur; …etc.
\end_layout

\begin_layout Standard

\color black
Même dans ces définitions, les notions utilisées (informativité, relativité,
 surprise, …) restent très vagues et ceci, parce que les utilisateurs ont
 des besoins très variés.
 Ils ont aussi des critères très différents pour juger si un document est
 pertinent.
 Donc, la notion de pertinence est utilisée pour recouvrir un très vaste
 éventail de critères et de relations.
 
\end_layout

\begin_layout Standard

\color black
Dans la suite, nous appelons pertinence système l'ensemble des principes
 qui sous-tendent la fonction de correspondance (donc le document est jugé
 pertinent par le système) 
\begin_inset CommandInset citation
LatexCommand cite
key "Denos97"

\end_inset

, par opposition à la pertinence utilisateur, qui correspond à l'ensemble
 des jugements de pertinence que produit l’utilisateur qui utilise le système
 (le document est jugé pertinent par l’utilisateur).
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset


\end_layout

\begin_layout Subsection

\color black
Fonction de similarité 
\end_layout

\begin_layout Standard

\color black
La comparaison entre le document et la requête revient à calculer un score,
 supposé représenter la pertinence du document vis-à-vis de la requête.
 Cette valeur est calculée à partir d’une fonction ou d’une probabilité
 de similarité notée 
\series bold
rsv(q,d)
\series default
 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "RSV"
description "Retrieval Status Value"

\end_inset

 (
\emph on
retrieval status value
\emph default
), où 
\series bold
q 
\series default
est une requête et 
\series bold
d 
\series default
un document et dont la formule de calcul dépend entièrement du modèle de
 recherche d’information utilisé.
 Cette mesure tient compte du poids des termes dans les documents, déterminé
 en fonction d’analyses statistiques et probabilistes.
 La fonction d’appariement est très étroitement liée aux opérations d’indexation
 et de pondération des termes de la requête et des documents du corpus.
 D’une façon générale, l’appariement document - requête et le modèle d’indexatio
n permet de caractériser et d’identifier un modèle de recherche d’information.
 La fonction de similarité permet ensuite d’ordonner les documents renvoyés
 à l’utilisateur.
 La qualité de cet ordonnancement est primordiale.
 En effet, l’utilisateur se contente généralement d’examiner les premiers
 documents renvoyés (les 10 ou 20 premiers).
 Si les documents recherchés ne sont pas présents dans cette tranche, l’utilisat
eur considérera le tri comme mauvais vis-à-vis de sa requête.
 
\end_layout

\begin_layout Standard

\color black
Le but de tout tri est donc évidemment de rapprocher la pertinence système
 de la pertinence utilisateur (qui comme nous l’avons vu précédemment, est
 fortement subjective) 
\begin_inset CommandInset citation
LatexCommand cite
key "Sau05,Dah06"

\end_inset


\end_layout

\begin_layout Subsection

\color black
La modélisation de la connaissance
\end_layout

\begin_layout Standard

\color black
Selon 
\begin_inset CommandInset citation
LatexCommand cite
key "Mathias02,Berrut97"

\end_inset

la modélisation de la connaissance apparaît sous la forme d’un thésaurus,
 et sert de référence aussi bien au processus d’interrogation qu’au processus
 d’indexation.
 Le processus d’interrogation l’utilise afin d’augmenter ou de restreindre
 les requêtes des utilisateurs, agissant ainsi directement sur le nombre
 et la qualité des réponses données par le système.
 Le processus d’indexation l’utilise essentiellement comme norme de définition
 des termes d’indexation 
\begin_inset CommandInset citation
LatexCommand cite
key "Dah06"

\end_inset

.
\end_layout

\begin_layout Subsection

\color black
Le processus d’interrogation 
\end_layout

\begin_layout Standard

\color black
La recherche tient une requête de l’utilisateur et retourne efficacement
 la liste des résultats correspondants classés par pertinence.
 Comme l'indexation, la recherche est un processus à plusieurs étapes, comme
 le montre la figure.
 
\end_layout

\begin_layout Standard

\color black
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\color black
\begin_inset Graphics
	filename Processus d'interrogation.png

\end_inset


\end_layout

\begin_layout Plain Layout

\color black
\begin_inset Caption

\begin_layout Plain Layout
Le processus d’interrogation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color black
La première opération 
\begin_inset Note Comment
status open

\begin_layout Plain Layout

\color black
These Three operations are importants
\end_layout

\end_inset

consiste à l’établissement de la requête.
 Le moyen d'exprimer la requête est : 
\end_layout

\begin_layout Enumerate

\color black
Basé sur les chaines de caractères : langage d’interrogation basé sur le
 texte.
 En fonction de l’objectif, un tel langage peut être aussi simple que la
 manipulation des mots ou aussi complexe que d'avoir des opérateurs booléens,
 des opérateurs de rapprochement, restriction de champ, et bien plus encore!
 
\end_layout

\begin_layout Enumerate

\color black
Basé sur une API de programmation : pour une requête avancées et étroitement
 contrôlée, une API de programmation est très approprié.
 elle donne au développeur un moyen souple pour exprimer des requêtes complexes
 et décider comment exposer la flexibilité de la requête aux utilisateurs
 (ça peut être une fonction exposée avec une interface de la REST
\begin_inset Foot
status open

\begin_layout Plain Layout

\color black
Une manière de construire une application pour les systèmes distribués.
\end_layout

\end_inset

 
\emph on

\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "REST"
description "REpresentational State Transfer"

\end_inset

 Representational State Transfer
\emph default
).
 
\end_layout

\begin_layout Standard

\color black
Certains outils vont concentrer sur la requête basée sur les chaines de
 caractères, d'autres sur l'API de programmation, et d'autres sur les deux.
 
\end_layout

\begin_layout Standard

\color black
La deuxième opération, appelons-la 
\emph on
l’analyse
\emph default
, est chargé de prendre des phrases ou des listes de mots et les applique
 l'opération similaire à celle du moment d'indexation (classer en mots,
 radicaux, ou description phonétique).
 Ceci est crucial car le résultat de cette opération est le langage en commun
 que indexation et la recherche utilisent pour parler entre eux, et se trouve
 d’être celui stocké dans l'index.
 Si la même série d'opérations n’est pas appliquée, la recherche ne trouvera
 pas les mots indexés, ce qui n’est pas si utile! 
\end_layout

\begin_layout Standard

\color black
Basé sur le langage commun entre l'indexation et la recherche, la troisième
 opération (recherche de documents) lit les index et recherche l’information
 d'index associées à chaque mot correspondant.
 N'oublions pas que pour chaque mot, l'index peut stocker la liste des documents
 correspondants, la fréquence, les positions du mot dans un document, et
 ainsi de suite.
 L'accord implicite ici est que le document en lui-même n'est pas chargé,
 et c'est une des raisons pour laquelle la recherche à texte intégral (full-text
 search) est efficace : le document n'a pas à être chargé pour savoir s'il
 correspond.
 L'opération suivante (filtrer et trier) traitera les informations récupérées
 à partir de l'index et construira la liste des documents (ou plus précisément,
 les gestionnaires ‘handlers’ de documents).
 A partir des informations disponibles (les documents correspondants par
 mot, la fréquence du mot, et la position du mot), le moteur de recherche
 est en mesure d'exclure les documents de la liste.
 Plus important encore, il est capable de calculer le score de chaque document.
 Plus son score est élevé, plus un document sera dans la liste des résultats.
 Jetons un regard sur certains facteurs qui influent sur sa valeur :
\end_layout

\begin_layout Itemize

\color black
Dans une requête qui comporte plusieurs mots, plus ils sont proche dans
 un document, plus le rang (rank) est supérieur.
 
\end_layout

\begin_layout Itemize

\color black
Dans une requête comportant plusieurs mots, plus on les trouve dans un document
 unique, plus le rang est supérieur.
 
\end_layout

\begin_layout Itemize

\color black
Plus la fréquence d'un mot dans un document est supérieure, plus le rang
 est supérieur.
 
\end_layout

\begin_layout Standard

\color black
Selon la façon dont la requête est exprimée et comment le produit calcule
 le score, ces règles peuvent s'appliquer ou non.
 Cette liste est là pour donner une idée de ce qui peut affecter le score,
 donc la pertinence d'un document.
 Une fois la liste ordonnée des documents est prête, le moteur de recherche
 à plein texte expose les résultats à l'utilisateur à travers une API 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "API"
description "Application Programming Interface\\\\"

\end_inset

de programmation ou dans une page web.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ber08"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Section
L’approche sémantique 
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
Todo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Important if you continue to improve this side
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\color black
Conclusion
\end_layout

\begin_layout Standard

\color black
In this chapter, the study focused on the working mechanism of search engines
 and information retrieval systems, based on indexing due to its importance.
 Indeed, it is the most important step in the search process as it allows
 the extraction and processing of keywords.
\end_layout

\begin_layout Standard

\color black
The search phase does not offer only the interaction between users and the
 system, but also calculates the match percentage between the query and
 the documents to provide the most relevant results.
\end_layout

\end_body
\end_document
