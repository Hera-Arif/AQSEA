#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass extreport
\begin_preamble

 
\usepackage{styles/esi_memoire}
\end_preamble
\use_default_options true
\begin_modules
hanging
minimalistic
initials
fix-cm
fixltx2e
\end_modules
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Advanced search engine for Holy-Quran"
\pdf_author "Assem Chelli"
\pdf_subject "Thesis"
\pdf_keywords "Indexing/Search, Arabic, Holy Quran, Information retrieval, Search engines.  "
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 4
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 0
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic true
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\bullet 1 0 9 -1
\tracking_changes false
\output_changes true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Proposition d'un systeme avancé de recherche dans le Saint Coran
\end_layout

\begin_layout Author
Assem Chelli, Pr.
 Amar Balla
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
+IRM 2011/2012
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Le Coran est différent de tous les documents que nous connaissons .
 C'est le livre sacré des musulmans.
 Il comporte des connaissances sur tous les aspects de la vie.
 Avec un tel volume d'informations, on ne peut y extraire qu'une infime
 partie manuellement.
 Ceci s'avère être insuffisant vue la quantité de connaissances que contient
 le Coran.
 D'où la nécessité de trouver une méthode pour extraire ces informations.
 Or il n'existe aucun outil à utiliser sauf quelques lexiques imprimés et
 quelques outils de recherche simple et séquentielle par les expressions
 régulières.
 En raison de cette limitation, le Coran nous oblige à trouver de nouvelles
 façons d'interaction.
\end_layout

\begin_layout Abstract
Le but recherché à travers ce travail est de proposer un système de recherche
 avancée dans l'ensemble des informations contenues dans le Coran en prenant
 en considération la morphologie de la langue Arabe et les propriétés du
 texte coranique.
 Elle doit être fondée sur les méthodes modernes de recherche d'informations
 pour obtenir une bonne stabilité et une recherche de grande vitesse.
 Elle serait trés utile pour les chercheurs et pourrait être généralisée
 pour couvrir l'ensemble du contenu en arabe.
\lang english

\begin_inset Newline newline
\end_inset


\series bold
\lang french
Mots clés : 
\series default
Indexation/Recherche, Arabe, Coran, Recherche d'information, Moteurs de
 recherche.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{fancy}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhf{} 
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[R]{
\backslash
footnotesize 
\backslash
thepage} 
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[C]{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[R]{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[L]{}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Introduction
\end_layout

\begin_layout Section*
Conteste du travaille 
\end_layout

\begin_layout Standard
Le Coran, en Arabe, a le sense de la lecture ou la recitation.
 Les érudits musulmans le définissent comme: les paroles d'Allah révélées
 à Son Prophète Muhammad, écrit en Mus'haf et transmis par les générations
 successives (
\lang arabic_arabi
التواتر
\lang french
).
 Le Coran est également connu sous d'autres noms tels que: Al-Furkan, Al-Kitab
 Al-dhikr, Al-wahy et Al-Rouh.
 Il est le livre sacré de tous les musulmans et la première référence à
 la loi islamique.
 C'est plus de 14 siècles écoulés depuis sa révélation, et les musulmans
 sont encore étudier, enseigner, écrire des livres à ce sujet et développer
 récemment des applications pour lui.
\end_layout

\begin_layout Standard
Coran est une source importante d'informations qui contient diverses information
s sur tous les aspects de la vie: scientifique, sociale, historique, Politique
 ...
 etc.
\end_layout

\begin_layout Section*
Problématique 
\end_layout

\begin_layout Standard
En raison de la grande quantité d'informations contenues dans le Coran,
 il est devenu extrêmement difficile pour les moteurs de recherche régulières
 pour extraire avec succès les informations essentielles.
 Par exemple, lorsque vous recherchez un livre lié à la grammaire anglaise,
 vous aurez simplement le googler, sélectionnez un fichier PDF et le télécharger.
 C'est tout! Les moteurs de recherche (comme Google) sont généralement utilisés
 sur les lettres latines et de recherche d'informations générales sur le
 document comme contenu, titre, auteur etc ...
 Cependant, la recherche dans le texte coranique est beaucoup plus compliqué,
 c'est la procédure qui est exigeant beaucoup plus en solution approfondie
 car il ya beaucoup d'informations qui doit être extrait pour répondre aux
 besoins de Coran érudits.
 Avant la création de l'ordinateur, les savants du Coran utilisaient des
 lexiques imprimés faites manuellement.
 Les lexiques imprimés peuvent pas aider beaucoup depuis plusieurs processus
 de recherche gaspille le temps et la force du chercheur.
 Chaque lexique est écrit pour répondre à une requête spécifique qui est
 généralement simple.
 Aujourd'hui, il ya des applications qui sont spécifiques pour les besoins
 de la recherche, la plupart des applications qui ont été développées pour
 Qur'an eu la fonction de recherche, mais dans une simple façon: recherche
 séquentielle avec des expressions régulières.
 
\end_layout

\begin_layout Standard
La recherche simple en utilisant la requête exact n'offre pas de meilleures
 options et toujours inefficace à se déplacer vers la recherche thématique
 par exemple.
 Recherche plein texte est la nouvelle approche de la recherche, qui a remplacé
 la recherche séquentielle et qui est utilisé dans les moteurs de recherche.
 Malheureusement, cette approche n'est pas encore appliquée sur Coran.
 La question est pourquoi nous avons besoin de cette approche? Pourquoi
 les moteurs de recherche? Est-ce que vraiment les applications de recherche
 dans le Coran ont besoin d'être mis en œuvre comme des moteurs de recherche?
\end_layout

\begin_layout Section*
Objectives
\end_layout

\begin_layout Standard
Notre proposition est sur ​​la conception d'un système de recherche qui
 répondent aux besoins de la recherche du Coran.
 Mais pour réaliser cet objectif, nous devons d'abord énumérer et classer
 toutes les fonctionnalités de recherche qui sont possibles et utiles.
 Ensuite, nous devons étudier comment mettre en œuvre chaque fonction et
 ce qui est de ses besoins.
\end_layout

\begin_layout Section*
Organisation de Rapport 
\end_layout

\begin_layout Standard
Nous avons organisé le rapport comme suits:
\end_layout

\begin_layout Subsection*
Première partie: Etat de l'art
\end_layout

\begin_layout Standard
Cette partie contient 3 chapitres:
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Chapitre 1 : Moteurs de recherche
\end_layout

\begin_layout Standard
Pour concevoir un puissant moteur de recherche, il est essentiel de comprendre
 comment les moteurs de recherche fonctionnent, dans ce chapitre, nous discutons
 les différentes parties d'un moteur de recherche, à savoir: l'exploration,
 l'indexation et l'interrogation.
 Et la définition des concepts de base dans le domaine des systèmes de recherche
 d'information.
 Ce chapitre contient une introduction à l'approche sémantique.
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Chapitre 2: Langue arabe
\end_layout

\begin_layout Standard
L'objectif de ce chapitre est de présenter les propriétés de la langue arabe,
 ses charmes, sa morphologie et introduire quelques questions qui soulèvent
 des ambiguïtés en raison de la nature arabe ...
 etc.
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Chapitre 3 : Le Coran
\end_layout

\begin_layout Standard
Ce chapitre présente un aperçu du Coran et ses sciences, il a un historique
 sur l'évolution du Coran, la structure de la Mus'haf, et les problèmes
 principaux de l'informatisation du Coran, y compris le Script Uthmani et
 l'authentification des textes coraniques.
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Subsection*
Deuxième partie: Analyse et Conception
\end_layout

\begin_layout Standard
Cette partie contient deux chapitres:
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Chapitre 4: les fonctionnalités de recherche coraniques
\end_layout

\begin_layout Standard
L'objectif de ce chapitre est de présenter les fonctionalitées de recherche
 possibles dans le Coran.
 Il a une grande importance dans notre travail, car il définit nos objectifs
 et notre chemin sur le travail.
 Nous avons fait une enquête sur l'utilité, le besoin et la clarté de chaque
 fonctionnalité afin de valider nos points de vue dans le choix de ces fonctionn
alitées.
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Chapitre 5: la Conception
\end_layout

\begin_layout Standard
Dans ce chapitre, nous commençons par un aperçu de notre travail précédent
 alors nous vous proposons de nombreuses améliorations à effectuer toutes
 les fonctionalitées de recherche possibles mentionnés dans le chapitre
 précédent.
\end_layout

\begin_layout Subsection*
Troisième Partie: l'implémentation
\end_layout

\begin_layout Standard
Cette partie contient les différentes étapes de l'implémentation de notre
 système de recherche.
 Il comprend un chapitre:
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Chapitre 6 : l'implémentation
\series default
 
\end_layout

\begin_layout Standard
Ce chapitre décrit le choix des technologies et des outils de développement
 et présente également le prototype avec une description des différentes
 fonctionnalités.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
Nous avons publié, au sujet de ce travail, deux articles dans deux conférences:
\end_layout

\begin_layout Itemize
Un article en Arabe NITS 2011 a l'Arabie saoudite intitulé 
\begin_inset Quotes sld
\end_inset


\emph on
Une interface de programmation pour l'indexation et la recherche dans Noble
 Coran
\emph default

\begin_inset Quotes srd
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Titre en Arabe: 
\lang arabic_arabi
مكتبة برمجية للفهرسة والبحث في القرآن الكريم
\lang french
 
\end_layout

\end_inset

 .
\end_layout

\begin_layout Itemize
Un article en Anglais dans un atelier pré-conférence dans LREC 2012 en Turquie
 qui est sur le point 
\begin_inset Quotes sld
\end_inset

LRE-Rel: les ressources et l'évaluation linguistiques pour les textes religieux
\begin_inset Quotes srd
\end_inset

.
 Le document était intitulé 
\begin_inset Quotes sld
\end_inset

La recherche avancée dans le Coran: Classification et Proposition de toutes
 les fonctionnalités possibles
\begin_inset Quotes srd
\end_inset

 
\begin_inset Foot
status open

\begin_layout Plain Layout
English title: Advanced Search in Quran: Classification and Proposition
 of All Possible Features
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Chapter
Classification et Proposition des fonctionnalités de recherche coraniques
 
\end_layout

\begin_layout Standard
Notre proposition est de concevoir un système de recherche d'information
 qui s'adapte aux besoins spécifiques du Coran.
 Mais pour réaliser cet objectif, nous devons d'abord lister et classer
 toutes les fonctionnalités de recherche qui sont possible et utile, ce
 chapitre a été écrit pour expliquer ce point.
 Il contient une liste de toutes les fonctionnalités de la recherche que
 nous avons recueillies et une classification en fonction de la nature de
 la fonctionalités.
 
\end_layout

\begin_layout Section
Les difficultées de la recherche dans le Coran
\end_layout

\begin_layout Standard
Afin de clarifier la vision sur la problématique de cet article, nous décrivons
 les défis auxquels est confrontée la recherche dans le Coran: 
\end_layout

\begin_layout Itemize
Tout d'abord, comme un besoin de recherche général;
\end_layout

\begin_layout Itemize
Deuxièmement, comme un défi de recherche arabe;
\end_layout

\begin_layout Itemize
Troisièmement, le Coran comme une source particulière d'information.
\end_layout

\begin_layout Standard
Nous commençons à expliquer le premier point, la recherche dans le Coran
 est theoriquement a les mêmes défis de la recherche dans les autres documents.
 La recherche dans les documents est passée par différentes phases dans
 son évolution.
 Au début, la recherche était séquentiel en fonction d'un mot clé exact
 avant que les expressions régulières ont été introduits.
 Recherche plein texte a été inventé pour éviter les limitations de la recherche
 séquentielles sur des documents énormes.
 La recherche plein texte introduit quelques nouveaux mécanismes d'analyse
 de texte qui incluent tokenization, normalisation, et lemmatisation etc
 ...
 Collecte de statistiques font désormais partie du processus de recherche,
 elle contribue à améliorer l'ordre des résultats et des suggestions.
 Après la levée de la sémantique web, la recherche se dirige vers une approche
 sémantique où l'd'améliorer la précision de la recherche par la compréhension
 de l'intention du chercheur et la signification contextuelle des termes
 tels qu'ils apparaissent dans un espace de données recherche-capable pour
 générer des résultats plus pertinents.
 Pour obtenir plus d'expérience de l'utilisateur, les moteurs de recherche
 tentent d'améliorer le comportement de montrer les résultats en le tri
 en fonction de leur pertinence dans les documents, plusieurs critères de
 tri, en soulignant les mots-clés, la pagination, le filtrage.
 En outre, d'améliorer l'entrée de requête en introduisant différentes méthodes
 d'entrée (ex: entrée vocale) et en suggérant des mots clés connexes.
 Jusqu'à présent, la plupart de ces fonctionnalités ne sont pas mis en œuvre
 pour utiliser le Coran.
 Et beaucoup d'entre eux doivent être personnalisées pour s'adapter aux
 propriétés arabes que ce expliquées dans le point suivant.
 
\end_layout

\begin_layout Standard
Deuxièmement, la langue du Coran est considéré comme l'arabe classique.
 L'arabe est une langue spécifique, car sa morphologie et son orthographe,
 et cela doit être pris en considération dans les phases d'analyse de texte.
 Par exemple, façonnage des lettres (spécialement le Hamza 
\lang arabic_arabi
-ء-
\lang french
), la vocalisation, les différents niveaux de lemmatisation et les types
 de dérivations ...
 etc.
 Cela doit être pris en considération dans les fonctions de recherche par
 exemple: les expressions régulières mal dénaturent les lettres arabes étant
 donné que les signes diacritiques de vocalisation sont pas distincte de
 lettres.
 L'absence de vocalisation émettre certaines ambiguïtés dans la compréhension
 des mots:
\end_layout

\begin_layout Itemize
Le mot 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{الملك}
\end_layout

\end_inset

 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
pourrait être compris comme
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
المَلَك
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 (l'ange), 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
المَلِك
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 (le roi) ou 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
المُلْك
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 (le royaume)
\end_layout

\begin_layout Itemize
Le mot 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
وعد
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 pourrait être compris comme 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
وَعَدَ
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(*il* a promis) ou 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
وَ+عَدَّ
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(et + *il* compte)
\end_layout

\begin_layout Itemize
Le mot 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
وله
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 pourrait être compris comme 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
وَلَهَ
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(admirer) ou 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
وَلِّ+ه
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
( couronne + lui ) ou 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
وَ+لَ+هُ
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
( et + il + a ) 
\end_layout

\begin_layout Standard
Tenter de résoudre ces problèmes comme un problème arabe générique est vraiment
 difficile car il n'a pas les ressources linguistiques pour faire des analyseurs
 lexicaux strictes.
 En revanche, le Coran a un nombre limité de mots, ce qui signifie qu'il
 est possible d'écrire manuellement indices morphologiques et l'utiliser
 pour remplacer les analyseurs lexicaux.
 Enfin, nous expliquons en ce moment quels sont les défis spécifiques rencontrés
 dans la recherche en vue de la caractéristique particulière du Coran.
 El-MusHaf, le livre de Coran, est écrit sur le script Uthmani.
 Ce dernier est plein de marques de récitation et ecrit quelques mots d'une
 manière différente de la façon standard.
 Par example, le mot 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
بسطة
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 est ecrit 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arbox{
\end_layout

\end_inset


\lang arabic_arabi
بصطة
\lang french

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 dans le script Uthmani.
 Le script Uthmani exige le compte tenu de ses spécifications dans les phases
 d'analyse de texte: la normalisation, la lemmatization.
 le Coran est structuré en plusieurs niveaux d'analyse:
\end_layout

\begin_layout Itemize
La structure principale: Surah, Ayah, Mot, lettre.
\end_layout

\begin_layout Itemize
Emplacements spéciaux: Le début de la sourate, la fin de la sourate.
 La fin de Aya.
 Sajda, Waqf, Facilah;
\end_layout

\begin_layout Itemize
La structure de Mushaf: page, thumn, rubu', nisf, hizb, juz';
\end_layout

\begin_layout Itemize
L'ecriture de Coran: sawāmit, harakāt, hamza, signes de distinction entre
 les lettres semblables, les signes phonétiques;
\end_layout

\begin_layout Itemize
La structure incorporel: mot, mot-clé, expression, l'unité objectif.
\end_layout

\begin_layout Itemize
Révélation: ordre, lieu, calendrier, cause, contexte ...
 etc.
 
\end_layout

\begin_layout Standard
Les utilisateurs peuvent avoir besoin de rechercher, filtrer les résultats
 ou les groupes basés sur une de ces structures.
 Il ya beaucoup de sciences liées au Coran, nommé sciences coraniques: Tafsir,
 traduction, récitation, Similitudes et Abrogations ...
 etc.
 
\end_layout

\begin_layout Section
Classification
\end_layout

\begin_layout Standard
Pour faire la liste des fonctionnalités de recherche plus facile, nous les
 avons classés en plusieurs catégories en fonction de leurs objectifs.
 
\end_layout

\begin_layout Enumerate

\series bold
Requête avancée
\series default
: Cette classe contient les modifications sur la requête simple afin de
 donner à l'utilisateur la possibilité de formuler sa requête d'une manière
 précisée.
 Par exemple: La recherche d'expressions, les relations logiques, les Jokers.
 
\end_layout

\begin_layout Enumerate

\series bold
Amélioration de sortie
\series default
: Ce sont pour améliorer les résultats avant de la montrer aux utilisateurs.
 Les résultats doivent passer par plusieurs phases: Scoring, le tri, la
 pagination, mise en evidence ...
 etc.
 
\end_layout

\begin_layout Enumerate

\series bold
Systèmes de suggestion
\series default
: Cette classe contient toutes les options qui vise à offrir une suggestion
 qui aident les utilisateurs à corriger, étendre les résultats en améliorant
 les requêtes.
 Par exemple, suggérer correction de mots-clés mal orthographiés ou suggérer
 des mots-connexes.
\end_layout

\begin_layout Enumerate

\series bold
Aspects linguistiques
\series default
: Aspects linguistiques: Il s'agit de toutes les fonctionnalités qui sont
 liées aux aspects linguistiques comme stemming, filtrage des mots vides,
 la normalisation.
 
\end_layout

\begin_layout Enumerate

\series bold
Les options coraniques
\series default
: Il est lié aux propriétés de l'ouvrage et l'information incluse à l'intérieur.
 Comme nous l'avons mentionné dans la problématique, le livre de Coran (al-musha
f) est écrit dans le script Uthmani pleine de diacritiques et structuré
 en plusieurs façons.
\end_layout

\begin_layout Enumerate

\series bold
Les requêtes sémantiques
\series default
: l'approche sémantique est sur le point de permettre aux utilisateurs de
 poser leurs questions en langage naturel pour obtenir des résultats plus
 pertinents implicitement.
 
\end_layout

\begin_layout Enumerate

\series bold
Le système statistique
\series default
: Cette classe couvre tous les besoins statistiques des utilisateurs.
 Les statistiques sont utiles pour la classification des mots et des ayahs
 et peuvent aussi être utilisés pour vérifier la validité des faits désignés
 comme des miracles numériques.
 Un exemple de statistiques, la recherche du mot le plus fréquenté.
\end_layout

\begin_layout Standard
C'est une première classification, nous devons l'améliorer pour un bon exploit
 de toutes les fonctionnalités de recherche possibles.
 
\end_layout

\begin_layout Section
Propositions
\begin_inset CommandInset label
LatexCommand label
name "sec:Proposals"

\end_inset


\end_layout

\begin_layout Standard
En ce moment, nous faisons appel à toutes les fonctionnalités de recherche
 possibles en fonction de la classification nous l'avons mentionné auparavant.
 Ces fonctions entières expriment un besoin de recherche: général, liée
 à l'arabe ou liée à Coran.
 Nous avons recueilli les idées de base à partir de: 
\end_layout

\begin_layout Itemize
Les moteurs de recherche classiques et sémantiques : Google, 
\end_layout

\begin_layout Itemize
Les moteurs de recherche arabe: Taya it, 
\end_layout

\begin_layout Itemize
Les outils de recherche coraniques: Zekr, al-monaqeb alqurany, 
\end_layout

\begin_layout Itemize
Bibliothèques de programmation pour l'indexation / la recherche: Whoosh,
 Lucene 
\end_layout

\begin_layout Itemize
Lexiques coraniques (en papier): La Mu'jam indexé des mots du Saint Coran
 (
\series bold
\lang arabic_arabi
 المعجم المفهرس لألفاظ القرآن الكريم
\lang french
) 
\series default
par
\series bold
 
\series default
\noun on
Mohammed Fouad Abd El-bāki
\end_layout

\begin_layout Standard
Nous avons manipulé ces idées pour s'adapter au contexte de l'arabe et le
 Coran.
 Il ya beaucoup de fonctionnalités qui sont tout à fait nouveau, nous leur
 proposons pour répondre à un besoin de recherche ou pour résoudre un problème
 spécifique.
 
\end_layout

\begin_layout Standard

\series bold
Remarque:
\series default
 la liste et un sondage à ce sujet, sont inclus dans la thèse.
\end_layout

\begin_layout Chapter
Conception
\end_layout

\begin_layout Standard
Après avoir énuméré toutes les fonctionnalités de recherche possibles, comme
 expliqué dans le chapitre précédent, nous allons - au premier abord - passer
 par notre précédent travail expliquant tout ce que nous avons déjà fait.
 Après cela, nous allons discuter de nombreuses améliorations qui conduit
 à une meilleure expérience de recherche.
 Nous avons rassemblé ces améliorations dans les points:
\end_layout

\begin_layout Itemize
Implementation d'un moteur de recherche plein vocalisé;
\end_layout

\begin_layout Itemize
Traitement de texte basé sur le script Uthmani;
\end_layout

\begin_layout Itemize
Recherche sur les mots coraniques;
\end_layout

\begin_layout Section
Un moteur de recherche plein vocalisé
\end_layout

\begin_layout Standard
An obvious fact is that the majority of Arabic texts are written unvocalized
 (without diacritical marks), this causes some confusion in the meaning,
 only the context of text can lift the ambiguity.
 Therefore, We had to consider the vocalization in all indexing and search
 phases in order to achieve a Quranic retrieving system that pass over these
 ambiguities.
 One of the main barriers that prevent the consideration of vocalization
 in Arabic is the lack of vocalized Arabic texts among the total Arabic
 content.
 Though, since the Quran is already fully vocalized so one barrier is lifted
 on.
 Another barrier is comparing vocalized, partially vocalized, and unvocalized
 texts because the ordinary comparing does not distinguish between letters
 and diacritics and fails to discover the similarity between words.
 For example, with ordinary comparing those words will be considered different:
 
\lang arabic_arabi
الحمد
\lang french
 , 
\lang arabic_arabi
الحَمد
\lang french
 , and 
\lang arabic_arabi
الحَمْدُ
\lang french
.
 That's why we had attempted to replace it with a partial vocalization comparing
 which is working as following:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1st word
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2nd word
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
comparing result
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reason
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

الملْك
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

المٌلكُ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no conflicting diacritics
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

المَلك
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset

المُلكٌ
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
conflict of diacritics
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Partial vocalization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We've intended to use this method in the comparing between search query
 keywords and indexed keywords but this is not sufficient for two reasons:
 
\end_layout

\begin_layout Standard
1.
 This will take effect only in searching and not all operations needed in
 indexing, statistics calculation, detecting suggestions, detecting synonyms,
 detecting different vocalizations and any operation may appear later.
\end_layout

\begin_layout Standard
2.
 The performance will be affected since this method is not optimized compared
 to the ordinary one.
\end_layout

\begin_layout Standard
To fix those two issues, we have to improve the comparing method in the
 lowest layers possibles: 
\end_layout

\begin_layout Itemize
Regular expression engine: General regular expressions has no classification
 for
\series bold
 
\series default
neither Arabic letters nor Arabic diacritics while it gives special classes
 for Latin letters, digits, and symbols.
 Introducing Arabic customized classes into the regex engine improves the
 partial vocalization comparing performance and makes it globally available.
 
\end_layout

\begin_layout Itemize
Basic string: in most programming languages, strings are objects and have
 their own comparing method.
 Replacing that object method with our partial comparing operation takes
 effect on all declared instances and all derived objects.
\end_layout

\begin_layout Standard
One problem of changing Regex engine or basic string directly in-place is
 the possibility of disconnecting from the main line of the programming
 language development.
 That should be token in consideration because if it happens the forked
 branch will be stuck.
 An alternative way is the prototyping instead of replacing in-place.
 With this way, lot of conflicts -between main development branch and forked
 branch- can be avoided.
\end_layout

\begin_layout Standard
To improve better the vocalized search, we have to distinguish between original
 vowels and declension case markers because words like 
\lang arabic_arabi
الْمُلْكُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom, nominative), 
\lang arabic_arabi
الْمُلْكِ
\lang french
 (Kingdom, genitive), 
\lang arabic_arabi
الْمُلْكَ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom, accusative) are considered as one word with one meaning which
 is Kingdom.
 This will give best matches in search and will not oblige the user to repeat
 the search operation with each one of the different possible declensions.
\end_layout

\begin_layout Standard
Ignoring vocalization has a direct influence on filtering stop-words because
 filtering out a word like the particle 
\lang arabic_arabi
مِنْ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 leads to filtering the relative noun 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
مَنْ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 and the verb 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
مَنَّ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 .
 Using vocalized stop-words is very recommended to avoid ambiguities and
 to confine the filtered occurrences.
 We'll mention how we gather the stop-words in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Filtring-Stop-words:"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Different types.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Different types of the possible vocalizations of the word 
\lang arabic_arabi
من
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As a conclusion we mention benefits gained by basing on a full vocalization
 environment:
\end_layout

\begin_layout Itemize
Lift the ambiguities cause by ignoring vocalizations
\end_layout

\begin_layout Itemize
Make searching results, suggestions, and statistics more accurate.
\end_layout

\begin_layout Itemize
Refine the meanings detection ( a first step in the semantic approach )
\end_layout

\begin_layout Section
Othmani script and text processing
\begin_inset CommandInset label
LatexCommand label
name "sec:Text-processing"

\end_inset


\end_layout

\begin_layout Standard
Quran is written principally on Othmani script which has many different
 from the standard script used usually in different media.
 In the previous work, we adopted the quranic text written on standard script
 but due to the difficulties caused by the its differences with Othmani
 script, we have to consider both scripts for indexing and search.
 Among those difficulties, we mention: 
\end_layout

\begin_layout Enumerate
Searching with an othmani writing form of a word such as
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
بصطة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 knowing that it written also in the form 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 in another Ayah
\begin_inset Foot
status open

\begin_layout Plain Layout
occurs as 
\lang arabic_arabi
بصطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
الأعراف
\lang french
 69) and as 
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
البقرة
\lang french
 247) 
\end_layout

\end_inset

.
 The retrieving system can't distinguish between the two occurrences basing
 only on the standard script.
 
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Different writings of bas6a in Uthmani Script.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Caption

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Different writing forms of the word 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 using Othmani script
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Calculating statistics knowing that letters number is different between
 the two scripts in a big number of ayahs.
 This difference is due to addition and removal of some letters in the Othmani
 script.
\end_layout

\begin_layout Enumerate
Matching the same Word-By-Word structure of some Quranic linguistic resources.
 Using the Quranic word as the basic unit for linguistic resources lacks
 for precision in some cases such in the case of two occurrences of word
 that have different interpretation.
 To resolve that, many Quranic linguistic resources have adopted the word
 occurrence as a basic unit a.k.a Word-By-Word Quran browsing.
 As a result for this, the resources such those have to use the words as
 they occurred in Quran (consequently in Othmani script) because the separation
 of some words is different between Othmani script and standard script as
 in the word
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
يَأَسَفَى
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in Yusuf 84 which is separated to two words 
\lang arabic_arabi
يَا
\lang french
 + 
\lang arabic_arabi
أَسَفَى
\lang french
 in the standard script.
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Attaching words in uthmani - Ya'asafa.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Merging Words in Uthmani Script
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we've said, to resolve those difficulties we consider Othmani text also
 for text processing along with standard text.
 In addition, we propose many improvements on the text processing phases
 to achieve many of search features.
 
\end_layout

\begin_layout Standard
We list in the following our improvements per phase:
\end_layout

\begin_layout Subsection
Substitution
\end_layout

\begin_layout Standard
This is a new phase that we propose to be added before tokenization.
 Its objective is to identify a list of pre-defined patterns and replace
 them as a preparation for tokenization.
 
\end_layout

\begin_layout Standard
Generally this phase is for processing the search query because it's not
 needed in indexing Quranic text.
\end_layout

\begin_layout Standard
We don't include this phase into normalization phase ( after tokenization
 ) before those substitutions are essential for a perfect tokenization.
 Especially that the tokenization phase is not a simple space-based separation
 and configured to use a word-by-word corpus.
 
\end_layout

\begin_layout Standard
We propose these cases of substitution: Romanizations
\series bold
, 
\series default
Numbers into words.
 More details in the full thesis.
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Substitution Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of Substitution
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tokenization:
\begin_inset CommandInset label
LatexCommand label
name "sub:Tokenization:"

\end_inset


\end_layout

\begin_layout Standard
The function of tokenization is to split a running text into tokens, so
 that they can be fed into the next phases for further processing.
 We keep the space-based tokenization from our previous work as a first
 step since it's a perfect choice and the simplest one at the same time.
 
\end_layout

\begin_layout Standard
After performing the space-based tokenization, We could also separate the
 words (tokens) into their parts (sub-tokens) so we'll have separated pronouns
 and clitics in case we needed a special processing for them.
 The problem with this is that it emerges lot of flaws.
 
\end_layout

\begin_layout Standard
Having as an example the word 
\lang arabic_arabi
فَأَسْقَيْنَاكُمُوهُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
mentioned in (
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
الحجر
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 22) 
\end_layout

\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 (meaning
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
English Translation of Mohammad Habib Shakir
\end_layout

\end_inset

: so We give it to you to drink of) so the separated sub-tokens would be
 
\lang arabic_arabi
فَ
\lang french
 + 
\lang arabic_arabi
أَسْقَيْنَا
\lang french
 + 
\lang arabic_arabi
كُمُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
+ 
\lang arabic_arabi
هُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
( ignoring 
\lang arabic_arabi
و
\lang french
 ) and the flaws will be: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Tokenization of fasqainakomoho.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tokenization of the word 
\lang arabic_arabi
فَأَسْقَيْنَٰكُمُوهُ
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Tokenization is an important phase since it's the basis for the following
 phases.
 Thus, it should have a very high precision while actually there is a lack
 for accurate Arabic analyzer.
\end_layout

\begin_layout Itemize
Some affixes change the form of word so we have to bring it to its original
 form after separation.
 In our example, 
\lang arabic_arabi
و
\lang french
 is an additional letter.
\end_layout

\begin_layout Itemize
A lot of clitics and pronouns such as 
\lang arabic_arabi
فَ
\lang french
 should be considered as stop words because they will have a high frequency
 and have a less need of retrievingBecause we aim the Quran, we value the
 accuracy.
 The tokenization guesser leads to an increased number of ambiguities but
 if we use a hand-made word-by-word corpus, we can limit those ambiguities
 especially for the words existing in Quran.
 For the words not existing in the corpus, we may use any general Arabic
 tokenization guesser.
 
\end_layout

\begin_layout Standard
Tokenization cause a loss in token information as function and POS 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "POS"
description "Part Of Speech"

\end_inset

.
 This loss affect the semantic understanding of keywords.
 For example the two ayahs:
\end_layout

\begin_layout Enumerate
[ 
\lang arabic_arabi
وَالشَّمْسِ وَضُحَاهَا
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
] -- (
\lang arabic_arabi
الشمس
\lang french
 1) 
\end_layout

\begin_layout Enumerate
[ 
\lang arabic_arabi
وَهُوَ الَّذِي خَلَقَ اللَّيْلَ وَالنَّهَارَ وَالشَّمْسَ وَالْقَمَرَ كُلٌّ
 فِي فَلَكٍ يَسْبَحُونَ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
] -- (
\lang arabic_arabi
الأنبياء
\lang french
 33) 
\end_layout

\begin_layout Standard
When we tokenize the previous two Ayahs, we lose the function of the first
 waw (
\lang arabic_arabi
و
\lang french
) as in the first ayah is for oath and in the second ayah is for coordination.
 To recover such kind of loss, we introduce some tags that has the values
 of important information.
 We add tags in this phase exactly (tokenization) because it's the only
 phase that read the word in it's phrase semantic and syntactic context.
 By consequence, it knows the part-of-speech information.
 Another reason is that we need them in the next phases: Normalization and
 Stemming.
 Among the tags that we think they are important, there are:
\end_layout

\begin_layout Enumerate

\series bold
Word declension
\series default
: whether the word is declinable (
\lang arabic_arabi
معربة
\lang french
) or not.
 We need this in normalization phase because we intend to strip the declension
 vowels (
\lang arabic_arabi
حركات الإعراب
\lang french
) to unite different occurrences of a word.
\end_layout

\begin_layout Enumerate

\series bold
Flexion information
\series default
: whether the word is derivative or not.
 We need this in Stemming phase.
\end_layout

\begin_layout Standard
English language has a similar problem in the tokenization of compound nouns
 such as the word 
\begin_inset Quotes sld
\end_inset

homework
\begin_inset Quotes srd
\end_inset

 or the word 
\begin_inset Quotes sld
\end_inset

unLadyLike
\begin_inset Quotes srd
\end_inset

 but not the same complication as in Arabic language.
 
\end_layout

\begin_layout Standard
There is a possibility to delay affix processing into the stemming phase
 but there will be a difference:
\end_layout

\begin_layout Itemize
with stemming we lose affixes so we can't specify the exact word search
 ;
\end_layout

\begin_layout Itemize
with tokenization, we preserve tokens and we can reproduce the whole word.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Tokenization Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of tokenization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
We can use the tokenization to resolve the pronouns references by creating
 an extra token for each pronoun; That token has the key value of the referenced
 object.
 Each referenced object should have a unique key value.
 For example:
\end_layout

\begin_layout Plain Layout

\lang arabic_arabi
هو وصاحبه 
\end_layout

\begin_layout Plain Layout

\lang arabic_arabi
لا إله إلا هو ------------ لا إله إلا الله -- 
\end_layout

\begin_layout Plain Layout
[If I create extra tokens, but how that affect phrase search]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Normalization:
\end_layout

\begin_layout Standard
Since we are accepting the Othmani script beside the standard script,we
 have to specify the normalization for the both.
 We had to strip all recitation marks such as the Waqf symbol 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Arabic}
\end_layout

\end_inset


\begin_inset Formula $\mathbf{\therefore\therefore}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{Arabic}
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
After stripping all extra symbols, we should either normalize othmani text
 into standard text.
 This operation is necessary to unify the processing for the next phases.
 There is no benefits to continue in a separated lines.
 The converging into standard script makes the stemming clearer and pass
 over some special uthmani-written words.
 For example, the word -example-.
 
\end_layout

\begin_layout Standard
To achieve that, we need a complete mapping of Quranic words between the
 both scripts.
 To minimize the size of mapping, we can exclude the words that are written
 in the same manner.
 The mapping should use the uthmani word as a unit not the standard word.
 The reason is that some words are mapped differently from an occurrence
 to another.
 An example for that, the word 
\lang arabic_arabi
بسطة
\lang french
 which occurs as 
\lang arabic_arabi
بصطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
الأعراف
\lang french
 69) and as 
\lang arabic_arabi
بسطة
\family roman
\series medium
\shape up
\size small
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
in (
\lang arabic_arabi
البقرة
\lang french
 247).
 
\end_layout

\begin_layout Standard
Mainly it is recommended to strip vowels in the normalization of Arabic
 texts.
 This means ignoring vowels during indexing and search.
 Consequently it affects negatively the accuracy of search since the vowels
 are an important key to detect a word meaning and distinguish it from other
 meanings.
 An example for that, the word 
\lang arabic_arabi
الملك
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
that mentioned with different meanings in Quran: 
\lang arabic_arabi
الْمُلْكُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Kingdom), 
\lang arabic_arabi
الْمَلِكُ
\lang french
 (King) and 
\lang arabic_arabi
الْمَلَكُ
\lang french
 (Angel).
 This word, however, are mentioned in different declension cases: Nominative,
 Accusative and Genitive.
 The declension case has no effect on the meaning.
 Our idea is to keep the vowels except the declension case ending vowel.
 This will unify all declension cases of a word.
 This can be done by passing tags with tokens for declension info such as:
\end_layout

\begin_layout Itemize
Declinable (
\lang arabic_arabi
مُعرَب
\lang french
) or not?
\end_layout

\begin_layout Itemize
Declension case (
\lang arabic_arabi
حالة الإعراب
\lang french
): Nominative, Accusative, and Genitive.
 
\end_layout

\begin_layout Itemize
Declension case markers (
\lang arabic_arabi
علامات الإعراب
\lang french
): Fatha, Damma, Kessra, Double-Fatha (with the additional Alef) , Double-Kessra
, Double-Damma.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Normalization Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of normalization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Filtering stop-words:
\begin_inset CommandInset label
LatexCommand label
name "sub:Filtring-Stop-words:"

\end_inset


\end_layout

\begin_layout Standard
In the previous work, we discussed the feasibility of filtering stop-words
 for search in Quran .
 We have proposed to select the stop-words from the list of the most frequent
 words in Qur'an, the particles and the pronouns taking in consideration
 their diacritical marks.
\end_layout

\begin_layout Standard
We made an improvement in the tokenization that affect our previous criteria
 for choosing the list of stop-words.
 This improvement is the separation of pronouns and clitics from the lemma
 of the word.
 Clitics such as 
\lang arabic_arabi
فَـ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(fa) generally has a high frequency and hasn't a self independent meaning.
 Therefore, clitics are potential stop-words, should be ignored for a better
 search experience.
 The ignoring should be optional to let the possibility for linguists to
 look for these keywords.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Filtring Stopwords Example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of stop-word filtering 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lemmatization:
\end_layout

\begin_layout Standard
The Arabic word has many different level of derivations.
 Those levels are the word, the word without affixes (Lemma), the stem,
 or the root.
 We proposed stripping the affixes in tokenization (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Tokenization:"

\end_inset

).
 In Stemming we either bring it back into stem or root origin.
 The roots in Arabic are the basic unit.
 There are about 10000 roots
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
9273 roots in the lexicon of Lisan Al-arab.
\end_layout

\end_inset

 in Arabic (about 1500 roots in Quran).
 When pairing with patterns, the root can generate more then 1000 variant
 words.
 Generated words could have similar, independent or opposite meanings.
 In the contrary, the stem usually generate a small set of words that have
 a similar meaning.
 Thus, we recommend use the stem as the landmark for this phase.
\end_layout

\begin_layout Standard
We can use the morphology tags from the tokenization phase as feeds for
 the stemmer.
 Some tags are helpful.
 We include the stem value of each word -if available- as a tag.
 We use it to replace the word.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Lematization.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Examples of lemmatization 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Qur'anic Word Search
\end_layout

\begin_layout Standard
Previously, we have considered the ayah as the search unit.
 That means it was the unit of our document index or we can call it 
\emph on
the document
\emph default
.
 The ayah being the document is yet the perfect choice.
 However, to attend many linguistic features (mentioned in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Proposals"

\end_inset

) such as: 
\end_layout

\begin_layout Itemize
Suggestion systems :: Different vocalizations;
\end_layout

\begin_layout Itemize
Linguistic Aspects :: Multi-level derivation;
\end_layout

\begin_layout Itemize
Linguistic Aspects ::
\series bold
 
\series default
Specific-derivations
\end_layout

\begin_layout Itemize
Linguistic Aspects ::
\series bold
 
\series default
Word properties embedded query
\end_layout

\begin_layout Itemize
Linguistic Aspects :: Word linguistic annotations
\end_layout

\begin_layout Standard
We need to consider a different search unit: the Quranic word (
\lang arabic_arabi
اللفظ القرآني
\lang french
).
 The purpose of this is to obtain a quick efficient stable method to retrieve
 specific Quranic words.
 To achieve that we need a corpus of Quranic words enriched with linguistic
 properties of each word.
 This corpus could be based on either the word form or the word occurrence.
 The second choice is the most accurate because the word can change their
 properties moving from an occurrence to another.
 There are about 17 thousands of words with a total about 76 thousands of
 occurrences
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
We calculated those statistics based on the Quran copy downloaded from Tanzil.org
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
We propose those information to be included in the schema of the word document
 index:
\end_layout

\begin_layout Itemize

\series bold
Identifiers
\series default
: a global identifier, a secondary identifier based on the order in the
 ayah added to ayah identifier and surah identifier;
\end_layout

\begin_layout Itemize

\series bold
Different forms
\series default
: Uthmani vocalized word (the main form), Standard vocalized word, Standard
 unvocalized word;
\end_layout

\begin_layout Itemize

\series bold
Transliterations: 
\series default
ISO233, Buckwalter, Arabtex;
\end_layout

\begin_layout Itemize

\series bold
Translations: 
\series default
English, other languages;
\end_layout

\begin_layout Itemize

\series bold
Different levels of stemming
\series default
: Lemma, Stem, Root;
\end_layout

\begin_layout Itemize

\series bold
Other properties:
\series default
 Part Of Speech, type, state, case, mood, voice, number, gender, person.
\end_layout

\begin_layout Standard
We should pass the word fields by the same text analyzing phases, we described
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-processing"

\end_inset

.
 We should also preserve a duplicate field for the original word without
 text analyzing in order to satisfy exact search needs.
 
\end_layout

\begin_layout Standard
We use the word search to improve the ayah search by introducing a 2-steps
 search strategy.
 First step, retrieving the best keywords set based on the user query by
 searching in the word-as-a-unit index.
 Second step, retrieving the corresponding ayahs using the keywords set
 resulted from the first step.
 we explaining the 2-steps search strategy on this figure: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Two-steps Search.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Two-Steps search behavior
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 2-steps search must also perform a second operation which is to inquire
 a word ontology to retrieve semantically related words.
 Semantically related words includes 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Idols example - ontologies.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Semantically related words : Idols in Quran
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As a conclusion, the 2-steps search strategy helps in retrieving Quran words
 classified on their origins, properties, translations, transliterations,
 semantic relations.
 The classification goes flexibly, and fast by using inverted indexes and
 ontologies.
 In the following, we explain some potential useful classifications for
 the root 
\lang arabic_arabi
قول
\lang french
 (qwl): 
\end_layout

\begin_layout Enumerate
Synonyms: 
\lang arabic_arabi
نطق
\lang french
, 
\lang arabic_arabi
كلام
\lang french
, 
\lang arabic_arabi
شهادة
\lang french
.
\end_layout

\begin_layout Enumerate
Imperative tense: 
\lang arabic_arabi
قل
\lang french
, 
\lang arabic_arabi
قولوا
\lang french
, 
\lang arabic_arabi
قولي
\lang french
.
\end_layout

\begin_layout Enumerate
Passive form: 
\lang arabic_arabi
يقال
\lang french
, 
\lang arabic_arabi
قيل
\lang french
.
\end_layout

\begin_layout Enumerate
Past tense: 
\lang arabic_arabi
قال
\lang french
, 
\lang arabic_arabi
قالا
\lang french
, 
\lang arabic_arabi
قلنا
\lang french
, 
\lang arabic_arabi
قالت
\lang french
...etc.
\end_layout

\begin_layout Enumerate
Noun, Plural: 
\lang arabic_arabi
الأقاويل
\lang french
.
\end_layout

\begin_layout Standard
Building on the 2-steps strategy we propose those new operations to be implement
ed in the query parser:
\end_layout

\begin_layout Subsection
Word properties search
\end_layout

\begin_layout Standard
This operation replaces the search by the triple root-type-pattern in the
 previous work .
 Its objective is to allow the users to locate ayahs based on a set of keywords
 chosen by linguistic properties such as Part Of Speech, type, state, case,
 mood, voice, number, gender, person.
 All what we need for the implementation of this operation is the word document
 index with the ability of fielded search.
 A fielded search is an advanced query feature that enables users to select
 and associate the different document fields to which he wishes to limit
 the query, to then use the required keywords within these fields.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Word_Properties.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Word properties search example : First person, Plural, Masculine
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Subsection
Word Translation search 
\end_layout

\begin_layout Plain Layout
One of search features that we've mentioned in the previous chapter ()
\end_layout

\begin_layout Plain Layout
---
\end_layout

\begin_layout Plain Layout
========
\end_layout

\begin_layout Plain Layout
Objective, behavior, status, needed resources, figure
\end_layout

\begin_layout Plain Layout
========
\end_layout

\begin_layout Plain Layout
Syntax like [[ ]]
\end_layout

\begin_layout Plain Layout
benefit to search inside the TranslatioNs
\end_layout

\begin_layout Plain Layout
+figure: class example
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Semantically Related Words
\end_layout

\begin_layout Standard
This operation replaces the synonyms and antonyms operation in the previous
 work (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Synonyms-&-Antonyms:"

\end_inset

).
 Its objective is to offer the related words of a keyword entered by the
 user.
 The user can specify which semantic relation to inquire: Synonymy, Antonymy,
 Hypernymy, Hyponymy, Meronymy, Holonymy, Troponymy.
 This operation requires an ontology that clarify the relations between
 different Quranic words.
 It is performed firstly by inquiring the ontology for related words and
 secondly by using those keywords to retrieve the corresponding ayahs.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Hyponymy-prophets.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Semantically Related Words, Hyponymy of the word 
\lang arabic_arabi
نبي
\lang french
 (prophet)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Multi-level Derivations
\end_layout

\begin_layout Standard
This operation replaces the derivation search operation in the previous
 work.
 The objective of this operation is to get a set of words that share the
 same origin such as stem and root.
 The user has to specify the word and a level of derivation.
 The operation will recover the origin of the word in the specified derivation
 level and retrieve all the set of words that share this origin.
 Since we can adopt the lemma or the stem as the form to save the words
 in indexing phase (after text analyzing).
 So the adopted form would be the reference level to our operation.
 If we adopt the stem so the root level will be the only one.
 If we adopt the lemma there would be two levels: the stem and the root.
 This operation require the origins of each Qur'anic word to be available.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Multi-level derivation search example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Multi-level Derivation Search example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Specific Derivations
\end_layout

\begin_layout Standard
This operation is quite similar to the previous one in the objective.
 Although, this is about find the words resultants of applying a specific
 derivation operation on the user given word.
 Among the possible derivations, we mention:
\end_layout

\begin_layout Itemize
Conjugation of verbs in different tenses: Perfect, Imperfect, Imperative.
\end_layout

\begin_layout Itemize
Conjugation of verbs with different pronouns:
\end_layout

\begin_deeper
\begin_layout Itemize
Person: First person, Second person, Third preson;
\end_layout

\begin_layout Itemize
Number: Singular, Dual, Plural;
\end_layout

\begin_layout Itemize
Gender: Masculine, Feminine.
\end_layout

\end_deeper
\begin_layout Itemize
Conjugation of verbs in different voices: Active, Passive.
\end_layout

\begin_layout Itemize
Genders and Plurals of a noun: Masculine singular , Feminine singular ,
 Masculine Dual (
\lang arabic_arabi
مثنى
\lang french
), Feminine Dual (
\lang arabic_arabi
مثنى
\lang french
), Masculine Plural, Feminine Plural, Broken Plural, Plural of Plural.
\end_layout

\begin_layout Itemize
Deverbals of a root: Active participle (
\lang arabic_arabi
اسم فاعل
\lang french
), Passive participle (
\lang arabic_arabi
اسم مفعول
\lang french
), Nouns of time and place (
\lang arabic_arabi
أسماء الزمان والمكان
\lang french
), Noun of instrument (
\lang arabic_arabi
اسم الآلة
\lang french
), The Nomen Vicis (
\lang arabic_arabi
اسم المرة
\lang french
), The Nomen Speciei (
\lang arabic_arabi
اسم الهيئة
\lang french
).
\end_layout

\begin_layout Itemize
Other derivations: the forms of exaggeration, The Comparative and Superlative
 Noun.
\end_layout

\begin_layout Standard
The user should enter the keyword and specify which derivation he seeks.
 We generate the set of derived words either by fetching in the word index
 or using linguistic tools such as verb conjugators.
 If it's the second case, the generated set could be filtered as a second
 step by intersection with the set of Quranic words.
 The resulted set will be used to locate the corresponding ayahs.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Specific Derivation example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Special derivations example, Imperative of 
\lang arabic_arabi
قال
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 (to say)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Fuzzy Search
\end_layout

\begin_layout Standard
This operation replaces the Considering/Ignoring spell errors operation
 in the previous work .
 Its objective is to fetch using the set of words that are nearly similar
 to the input word in writing or pronunciation.
 Usually useful to guess the right spellings of a misspelled word.
 There are many methods to implement fuzzy search, some are designed for
 search against previously unknown text such as Liechtenstein distance method
 and other not such as ngrams and spell-checker methods.
 Since we are applying on a previously known text, so that means both of
 the two types is feasible.

\series bold
 
\series default
Nevertheless, methods such Liechtenstein distance and ngrams lack for good
 handling for Arabic vowels (
\lang arabic_arabi
حركات
\lang french
).
 They consider the vowels the same as letters and this leads to an important
 decrease of efficiency.
 To pass on this weakness, those methods should consider any letter followed
 by a vowel as one unit.
 In Arabic, the vocalized letter is considered as one letter whilst in computer
 this still considered as two characters.
 In the other hand, Lam-alef (
\lang arabic_arabi
لا
\lang french
) which is actually two letters still consider as one character in many
 computer writing systems.
 
\end_layout

\begin_layout Standard
Any fuzzy search algorithm should consider some specific similarities in
 Arabic:
\end_layout

\begin_layout Itemize
The similarity between the different forms of each letter: Hamza, Ta', and
 Alef.
 For example, 
\lang arabic_arabi
مءصدة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Hamza on the line) and 
\lang arabic_arabi
مؤصدة
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(Hamza on waw).
 
\end_layout

\begin_layout Itemize
An unvocalized letter is so similar to a vocalized one whatever the vowel
 is.
 For example, 
\lang arabic_arabi
الحمد
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(unvocalized) and 
\lang arabic_arabi
الحَمْدُ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(vocalized).
\end_layout

\begin_layout Itemize
Tanwin in a vowel is roughly similar to a vowel without Tanwin.
 For example, 
\lang arabic_arabi
عشرِ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 (kessra) 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
and 
\lang arabic_arabi
عشرٍ
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(tanwin kessra).
\end_layout

\begin_layout Itemize
Shedda on a letter is so similar to the letter doubled.
 For example, 
\lang arabic_arabi
يضلَه
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 (Shedda on Lam) and 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
\lang arabic_arabi
يضلله
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
(doubled Lam).
\end_layout

\begin_layout Standard
The fuzzy search algorithms could be strengthened by coupling it with a
 Phonetic algorithm.
 A phonetic algorithm matches two different words with similar pronunciation
 to the same code, which allows phonetic similarity based word set comparison
 and indexing.
 Usually used for proper names where there is no unified spelling for the
 word 
\begin_inset Note Note
status open

\begin_layout Plain Layout
[REF]
\end_layout

\end_inset

.
 One of the first algorithms was Soundtex invented in the 1910s by 
\noun on
Robert Russell
\noun default
.
 Its working principle is based on the partition of consonants in groups
 with ordinal numbers, which are then compiled to the resulting value.
 
\end_layout

\begin_layout Standard
Generally the fuzzy search should be implemented to work automatically either
 always or when there is a lack of results.
 Another case is to show the possibilities as suggestions.
\end_layout

\begin_layout Standard
Those are some examples of fuzzy search:
\end_layout

\begin_layout Enumerate
Mis-order of letters: 
\lang arabic_arabi
زنبجيل
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
for 
\lang arabic_arabi
زنجبيل
\lang french
.
\end_layout

\begin_layout Enumerate
Phonetic similarity: 
\lang arabic_arabi
هرم
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang french
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
for 
\lang arabic_arabi
إرم
\lang french
.
\end_layout

\begin_layout Enumerate
Spelling similarity: 
\lang arabic_arabi
الضحي
\lang french
 for 
\lang arabic_arabi
الضحى
\lang french
.
\end_layout

\begin_layout Chapter
Implementation
\end_layout

\begin_layout Standard
Notre objectif dans l'mplementation est d'offrir une interface de programmation
 d'application.
 Cette API doit être bien extensible pour atteindre le maximum des fonctionnalit
és de recherche que nous avons discuté dans le chapitre précédent.
 Nous allons parler des détails techniques de notre implémentation.
 Nous aussi lister toutes les ressources coraniques et linguistique que
 nous avons utilisés ou dont nous avons besoin dans le développement.
 Aussi, nous allons expliquer pourquoi nous avons décidé d'ouvrir le code
 source, quels sont les avantages qui nous conduit à adopter une telle approche.
\end_layout

\begin_layout Section
Base de code précédente
\end_layout

\begin_layout Standard
Nous nous sommes basés sur la base de code que nous avons réalisé dans 
\begin_inset CommandInset citation
LatexCommand cite
key "ASSEM_MEROUANE"

\end_inset

.
 Le code de base a été publiée sous la licence GPL à la suite de l'utilisation
 de la bibliothèque whoosh sous la même licence.
 Il contient une interface de programmation d'application qui exécute l'opératio
n de recherche de base.
 Il offre les résultats dans un format HTML brut, pourraient être utilisés
 seulement en Python.
 Pour être utilisé dans un autre langage de programmation, il faut écrire
 un wrapper compliqué.
 Il y avait un gestionnaire de ressources de base qu'indique les informations
 stockées dans une base de données intermédiaire.
 L'importation de nouvelles ressources dans cette base de données intermédiaire
 est une pièce manquante.
 Deux interfaces ont été développées pour l'API:
\end_layout

\begin_layout Enumerate
Une interface de bureau , démontrent parfaitement les fonctionnalités de
 l'API.
 Il est codé en urgence en Python et Qt.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Enumerate
Une interface CGI-Html démontre d'une manière plus simple les fonctionnalités
 de l'API.
 Aussi codé en urgence et il n'a pas respecté l'approche Model View Control
 (MVC).
\end_layout

\begin_layout Section
Nos améliorations
\end_layout

\begin_layout Standard
Dans un premier temps, nous changeons la licence au Affero General Public
 License, qui vise à protéger les bibliothèques qui habituellement utilisés
 dans les serveurs.
 Le code de base a eu 981 commits représentant 15 243 lignes de code.
 Il est principalement écrit en Python avec un code source bien commenté.
 C'est une base de code établie a environ 4 ans d'effort (COCOMO modèle)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Statistic analysis from Ohloh website.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Voici les étapes principales que nous avons traversées:
\end_layout

\begin_layout Subsection
Un nouveau système de sortie centralisé:
\end_layout

\begin_layout Standard
Premièrement, nous avons amélioré le système de sortie de l'API pour proposer
 les résultats au format de données JSON au lieu de HTML brut.
 Ensuite, nous avons centralisé le système de sortie pour gagner de nombreux
 avantages qui sont:
\end_layout

\begin_layout Standard
1.
 Implémentation facile de plus de structures de données;
\end_layout

\begin_layout Standard
2.
 L'utilisation du même système de sortie dans les différentes interfaces:
 interface console, l'interface CGI, interfaces de bureau, les interfaces
 Web;
\end_layout

\begin_layout Standard
3.
 Apporter des modifications et mises à jour qu'à un seul endroit au lieu
 de plusieurs.
\end_layout

\begin_layout Standard
Deuxièmement, nous avons proposé une structure étendue des résultats.
 Cette structure est extensible: toute nouvelle information peut être inclus
 facilement sans affecter la structure ancienne et sans qu'il en résulte
 un incompatibilité.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/JSON formatted - results of alkawthar.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Les resultats de 
\lang arabic_arabi
الكوثر
\lang french
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Troisièmement, nous affinons la liste des drapeaux de demande pour permettre
 au demandeur de personnaliser sa demande et de contrôle des informations
 récupérées afin de gagner en performance et réduire la taille des résultats
 et l'durée récupéré.
 Un concept de configuration prédéfinie pour les demandes est introduit.
 Ainsi, le demandeur peut choisir entre une vue minimal, normal, plein,
 linguistiques ou statistiques, sans préciser la valeur de chaque drapeau.
\end_layout

\begin_layout Standard
Nous centralisons aussi le chargement des fichiers de données nécessaires.
 Les fichiers de données sont maintenant chargé automatiquement à partir
 d'un chemin par défaut sinon si ce chemin est redéfini.
 Nous avons inclus les fichiers de données avec le paquet API pour maintenir
 la portabilité.
 Aussi, nous les exportons dans un format de données JSON comme une étape
 de normalisation.
 Nous entendons des fichiers de données, les fichiers tels que:
\end_layout

\begin_layout Enumerate
Les fichiers de configuration: liste des récitations disponibles, liste
 des traductions disponibles, conseils d'utilisation, statistiques d'utilisation
, méta-informations.
\end_layout

\begin_layout Enumerate
Les ressources linguistiques: liste de dérivations, liste de vocalisations,
 liste des synonymes, standard-en-uthmani , liste de mots vides, liste des
 propriétés de texte.
 
\end_layout

\begin_layout Enumerate
Les index coraniques: Index des documents pour la Ayah, Index des documents
 de la traduction, Index de document Word.
 
\end_layout

\begin_layout Standard
Une fonctionnalité de calcul des statistiques d'utilisation est implémentée.
 Les statistiques sont enregistrées dans un format JSON y compris l'utilisation
 de chaque drapeau traversèrent la requête de recherche.
 
\end_layout

\begin_layout Standard
Nous avons proposé un ensemble de codes d'erreur en cas de requête de recherche
 échoué.
 Il contribue à clarifier la nature de la défaillance.
 Cet ensemble est extensible, de nouveaux codes d'erreur peuvent être ajoutés
 facilement.
 
\end_layout

\begin_layout Standard
Nous avons fait les métadonnées API disponible pour la demande dans le système
 de sortie.
 Métadonnées comprennent: l'auteur, la licence, la description, la version
 , les messages d'erreur, drapeaux possibles, leurs valeurs par défaut,
 possible intervalles de valeurs et les messages d'aide, les champs de recherche
 disponibles, les traductions et les récitations disponibles.
\end_layout

\begin_layout Subsection
Nouvelles fonctionnalités
\end_layout

\begin_layout Standard
Nous avons implémenté de nombreuses nouvelles fonctionnalités qui sont disponibl
es dans le nouveau système de sortie JSON.
 L'une des fonctionnalités est la fonctionnalité de la recherche floue.
 Nous avons fait une implémentation de base qui automatise la recherche
 floue pour inclure les synonymes possibles du mot et également les différentes
 dérivations du mot.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Fuzzy search example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
La recherche floue
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nous avons ajouté la possibilité de récupérer les ayahs précédentes et suivantes
 de chaque Ayah des résultats.
 Montrant les ayahs voisins permet à l'utilisateur de savoir exactement
 la position Ayah dans son propre sourate.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Next_previous ayas.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Affichage des ayahs adjacentes
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pour le texte de Ayah, nous avons offert la possibilité de choisir entre
 le texte vocalisé ou non vocalisé, et entre le texte standard ou Uthmani.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Script example - standard unvocalized.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Script example - standard vocalized.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Script example - uthmani.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Affichage ayahs dans différents formats
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nous avons mis quatre opérations de suggestion: Proche orthographes, différentes
 vocalisations, différentes dérivations, synonymes.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Suggestion example - v-s-d.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Exemple de suggestion de vocalisations, dérivations et synonymes du mot
 
\lang arabic_arabi
قول
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nous avons implémenté la possibilité de recherche en utilisant la translittérati
on de Buckwalter montrons les mots-clés abouti écrites dans la même translittéra
tion.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/buckwalter example.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Exemple de la translittération de Buckwalter
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Gestionnaire d'importation de ressources
\end_layout

\begin_layout Standard
Une partie importante manquait dans l'ancienne implémentation du gestionnaire
 d'importation de ressources.
 La partie manquante est l'importation des données à partir de leur source
 d'origine.
 Nous avons fixé cette partie manquante et d'améliorer le comportement global
 du gestionnaire de ressources.
 Plus de détails dans le rapport complet.
 
\end_layout

\begin_layout Subsection
Automatisation de l'opération de generations des ressources
\end_layout

\begin_layout Standard
La generation des ressources était manuel et non documentés.
 Nous avons créé un Makefile pour automatiser maintenant le bâtiment.
 Nous remplissons le makefile avec le nombre approprié de commentaires pour
 le rendre clair et compréhensible.
 Le rôle du makefile est d'effectuer les tâches suivantes:
\end_layout

\begin_layout Enumerate
Téléchargement automatique des nouvelles versions utilisées des ressources
 linguistiques et coraniques;
\end_layout

\begin_layout Enumerate
La création et la régénération des fichiers de données générés intermédiaires;
\end_layout

\begin_layout Enumerate
Auto-construction des index de documents, en plus de les index inversés;
\end_layout

\begin_layout Enumerate
Auto-installation et emballage de l'API et des extensions connexes et des
 interfaces API liées et différent.
\end_layout

\begin_layout Subsection
Une nouvelle interface de console
\end_layout

\begin_layout Standard
Nous avons introduit une nouvelle interface de console pour être utilisé
 par l'application de bureau développée sous une autre langue que Python,
 pourrait fonctionner comme service arrière-plan caché , alias: Daemon.
 
\end_layout

\begin_layout Subsection
Système d'emballage: 
\end_layout

\begin_layout Standard
Nous avons implementé un système d'emballage pour emballer l'API pour différents
 systèmes d'exploitation.
 Puisque l'API est pur python de sorte que le rend facilement transportable
 à travers les différentes plates-formes.
 Bien que de nombreuses ressources de données doivent être produite et importée
 dans l'emballage.
 Nous distribuons de l'API comme: archive source, binaire compressée, paquet
 egg de Python, paquet deb de Debian, paquet rpm de Red Hat.
\end_layout

\begin_layout Subsection
Multiple search units
\end_layout

\begin_layout Standard
The Application Programming Interface initially was made up to search only
 in the ayahs.
 Actually we introduced more search units.
 To introduce any unit, we should gather the appropriate data resources,
 define the search fields, define the search request flags, and finally
 define the results structure.
 We introduced two units which are:
\end_layout

\begin_layout Enumerate

\series bold
Translations
\series default
: enable the search for Quranic translations in different languages.
 The information included are: identifier, text, language, author.
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Translation Search.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Translation-as-unit search , Query: seven 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Words:
\series default
 enable the search for Quranic words and different linguistic annotations
 including: word identifiers, origins (lemma, stem, root), POS, form, gender,
 person, number, voice, aspect, state.
\end_layout

\begin_layout Subsection
Coding Standardization
\end_layout

\begin_layout Standard
We passed our code base by Pylint code analysis.
 Pylint is a source code bug and quality checker for the Python programming
 language.
 It is highly configurable and can be customized as needed.
 It includes features such as: 
\end_layout

\begin_layout Itemize
Checking a line-code's Length ;
\end_layout

\begin_layout Itemize
Checking if variable names are well-formed according to your coding standard
 ;
\end_layout

\begin_layout Itemize
Checking if declared interfaces are truly implemented, and so on.
\end_layout

\begin_layout Standard
We have fixed a huge amount of shown up messages by Pylint including: Convention
s, Refactors, Warnings, Errors.
 This leads by consequence into a mass re-organization of the source code
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
, see the current code architecture in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Code-Architecture"

\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Documentation covering
\end_layout

\begin_layout Standard
We made the Readme files for the different parts of the project.
 The contents of readme files typically include one or more of the following:
 Configuration instructions, Installation instructions, Operating instructions,
 A file manifest (list of files included), Copyright and licensing information,
 Contact information for the distributor or programmer, Known bugs, Troubleshoot
ing, Credits and acknowledgments, A changelog (usually for programmers),
 A news section (usually for users).
\end_layout

\begin_layout Subsection
Open Issues
\begin_inset CommandInset label
LatexCommand label
name "sub:Open-Issues"

\end_inset


\end_layout

\begin_layout Standard
We went through many improvements.
 Yet, however, there still lot of things to be done.
 We browsed the main milestones that should go through in the full thesis.
\end_layout

\begin_layout Section
Interfaces
\end_layout

\begin_layout Standard
The project is working as a library offering many interfaces.
 The main one is the Application Programming Interface or API.
 It works as the intermediary between the library and the other interfaces.
 There are two low-level interfaces that works with the API: 
\end_layout

\begin_layout Enumerate
Console interface, destined for test purposes and to be used by third party
 non-pythonic desktop interfaces.
\end_layout

\begin_layout Enumerate
JSON web service, destined to be used by web interfaces, smart phone apps,
 and social network apps.
\end_layout

\begin_layout Subsection
Application Programming Interface
\end_layout

\begin_layout Standard
An application programming interface (API) is a protocol intended to be
 used as an interface by software components to communicate with each other.
 An API is a library that may include specification for routines, data structure
s, object classes, and variables.
\end_layout

\begin_layout Standard
The powerful points of our API are:
\end_layout

\begin_layout Enumerate

\series bold
Free Open Libre
\series default
: any one can use it, any one can contribute in.
 That means it takes the advantage of community involvement.
\end_layout

\begin_layout Enumerate

\series bold
A Python API
\series default
: that allows anyone to create independently a web interface, desktop interface
 , Android/Iphone/Windows phone interfaces , facebook/twitter/G+ applications
 ...and so on.
 
\end_layout

\begin_layout Enumerate

\series bold
A founded base
\series default
: The search process is too fast and too stable other websites/applications
 do.
 
\end_layout

\begin_layout Enumerate

\series bold
Lot of features
\series default
: The actual API has an important number of features and prepared to accept
 more.
 
\end_layout

\begin_layout Subsubsection
JSON web service
\end_layout

\begin_layout Standard
To enable the use of our API over the web, we made a web service that wrap
 the input/output of the API.
 The request arguments should be passed in URL and the output will be generated
 and shown in JSON format.
 This could be used by web interfaces, smart phone apps, social network
 apps, and browsers addons.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Json Output Service.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Preview of the JSON web service
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
[Usage statistics from stats.alwaysdata.org]
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Console interface 
\begin_inset CommandInset label
LatexCommand label
name "sub:Console-commandline"

\end_inset


\end_layout

\begin_layout Standard
As a test interface, we made a console interface that works on command line.
 This interface could be used also as a wrapper to make desktop interfaces
 that are developed under a programming language different then Python.
 The request should be passed as in-line arguments in the command line and
 the output will be generated & shown in JSON format.
 High-activity desktop interfaces, working on a linux-like platform, can
 run this interface as a Daemon service on the background.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Console interface.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Preview of the Console interface
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Conclusion
\end_layout

\begin_layout Standard
Notre proposition a été sur la conception d'un système de recherche qui
 répondent aux besoins de la recherche sur le Coran.
 Mais pour réaliser cet objectif, nous devions premièrement lister et classer
 toutes les fonctions de recherche qui sont possibles et utiles.
 Ensuite, nous avons besoin de faire une conception globale d'un système
 de recherche comme une première pierre pour la réalisation de chaque fonction
 de recherche.
\end_layout

\begin_layout Standard
Nous avons commencé par trois chapitres sur l'état de l'art.
 La première porte sur les moteurs de recherche et la façon dont ils fonctionne.
 Le second est sur ​​la langue arabe et ses propriétés.
 Le troisième est sur ​​le Coran et ses propriétés, y compris ses index
 et de nombreux outils de la recherche.
\end_layout

\begin_layout Standard
Pour clarifier notre proposition, nous avons demandé les fonctions de recherche
 dans le Coran qui sont utiles.
 Afin de faciliter l'enrôlement, nous avons classé ces caractéristiques
 en fonction de la nature du problème.
 Cette liste va nous aider à faire un système de recherche détaillée qui
 s'adaptent parfaitement aux besoins du Coran.
 Nous avons mené une enquête sur l'utilité, la convivialité et la clarté
 de chaque option et nous avons des feedbacks très utiles.
 Chaque caractéristique a un niveau différent de complexité: pourrait être
 mis en œuvre facilement ou peuvent conduire à un vaste problème nécessitant
 une étude plus approfondie.
 Une version primaire de cette liste de fonctions de recherche est publié
 en tant que papier dans un atelier de pré-conférence LREC 2012, qui est
 sur le point "LRE-Rel: les ressources et l'évaluation linguistiques des
 textes religieux".
 Le document était intitulé 
\begin_inset Quotes sld
\end_inset

Recherche avancée dans le Coran: Classification et Proposition de toutes
 les fonctionnalités possibles".
 
\end_layout

\begin_layout Standard
Pour la conception, nous avons basé notre travail sur un exercice antérieur,
 nous sommes allés à travers de l'explication de ce qui est déjà fait.
 Ensuite, nous avons proposé de nombreux correctifs, et de nombreuses améliorati
ons à ce sujet.
\end_layout

\begin_layout Standard
Première amélioration est d'atteindre un moteur de recherche plein vocalisé
 adapté pour offrir plus des caractéristiques mentionnées dans ce chapitre.
 La vocalisation complet est une amélioration très importante pour franchir
 les ambiguïtés et l'absence de précision surgi d'ignorer les voyelles (
\lang arabic_arabi
حركات
\lang french
).
\end_layout

\begin_layout Standard
Deuxième amélioration est une proposition d'un traitement de texte personnalisé
 qui répond aux propriétés du texte coranique.
 Nous avons mis en place l'utilisation de script Othmani côté à côte avec
 le script standard.
 Nous avons ajouté une phase de pré-tokenization qui substituent des motifs
 de la requête par leur correspondant approprié.
 Ceci est utile pour implémenter des fonctionnalités de recherche tels que
 romanizations et numéros-comme-mots .
 Nous avons suggéré un changement dans la phase de tokenization, ce qui
 ajoute une deuxième opération juste après la tokenization basé sur les
 espaces.
 Le rôle de cette nouvelle seconde opération est de séparer les tokens donné
 (les mots) en sous-jetons (les parties de mots) afin d'avoir un traitement
 spécifique pour chaque partie du mot.
 Pour la normalisation, nous avons discuté du traitement du texte Othmani.
 Nous avons discuté aussi quelques changements sur la façon comment filtrer
 des mots vides et la façon de faire la lemmatisation (stemming).
\end_layout

\begin_layout Standard
La troisième amélioration, nous avons considéré le mot comme une nouvelle
 unité de recherche en plus du Ayah comme l'unité principale.
 L'objectif de cette est de parvenir à un ensemble de fonctionnalités de
 recherche que nécessite la manipulation d'ensembles de mots.
 La recherche mot-as-a-unité contribue directement ou indirectement dans
 fonctionnalités nombreuses: 
\end_layout

\begin_layout Itemize
Recherche par les propriétés des mots;
\end_layout

\begin_layout Itemize
Recherche par les mots liés-sémantiquement;
\end_layout

\begin_layout Itemize
Recherche par les dérivations-a-niveaux;
\end_layout

\begin_layout Itemize
Recherche par les dérivations spécifiques;
\end_layout

\begin_layout Itemize
La recherche floue.
\end_layout

\begin_layout Standard
Nous avons discuté l'implementation de chacun de ces dernières fonctionalités.
\end_layout

\begin_layout Standard
Nous sommes allés à travers l'implementation de beaucoup des fonctionnalités
 de recherche que nous avons retenu précédemment.
 Malheureusement, il ya plus d'améliorations à faire et des problèmes à
 résoudre.
 nous leur avons laissé comme des perspectives: 
\end_layout

\begin_layout Itemize
Conception d'un système de collecte de statistiques précises;
\end_layout

\begin_layout Itemize
L'implémentation d'un système de suggestion plus adéquate;
\end_layout

\begin_layout Itemize
Clarifier la feuille de route vers un moteur de recherche sémantique.
\end_layout

\begin_layout Itemize
Procéder de la conception complète de toutes les fonctionnalités de la recherche
 cités dans le chapitre 4.
\end_layout

\begin_layout Itemize
L'implementation complète de toutes les problèmes non encore traités cités
 dans le chapitre 6.
\end_layout

\end_body
\end_document
