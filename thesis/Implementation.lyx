#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass extreport
\begin_preamble
 \usepackage{styles/esi_memoire}
\end_preamble
\use_default_options true
\begin_modules
hanging
minimalistic
fixltx2e
initials
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf4
\output_sync 1
\output_sync_macro "\synctex=1"
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Advanced Search in Quran"
\pdf_author "Assem Chelli"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 3
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 0
\use_esint 0
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\bullet 1 0 9 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Implementation
\end_layout

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
epigraph{
\backslash
textit{Talk is cheap, show me the code!}}{
\backslash
textit{Linus Torvalds}}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
[refaire]
\end_layout

\begin_layout Standard
Our aim in implementation is to offer an open application programming interface.
 That API must be well extensible to achieve all the search features we've
 discussed in the previous chapter.
 we'll talk -in this chapter- about the technical details of our implementations.
 Also we list all the technologies that we've chosen in development and
 the Qur'anic resources that we've used or we need.
 Otherwise, we'll explain why we decided to open the source, what are the
 advantages driving us to adopt a such approach.
\end_layout

\begin_layout Standard
---
\end_layout

\begin_layout Standard
[+We'll talk about our impovements]
\end_layout

\begin_layout Section
Why Open Source?
\end_layout

\begin_layout Standard
One of the fundamental differences between open source software and proprietary
 software is that the source code of open source software must be made freely
 available with the software.
 Anyone should be able to download the source code, view it, and alter it
 as they see fit.
\end_layout

\begin_layout Standard
There are a number of advantages lead us to open source, the following points
 examine the most important of these
\begin_inset CommandInset citation
LatexCommand cite
key "Oss-watch"

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Collaborative bug-fixing
\series default
: As a large number of users can access and change the code, bugs tend to
 be more visible and more rapidly corrected.
 One of the slogans of the open source movement is that ‘
\emph on
given enough eyeballs, all bugs are shallow
\emph default
’ 
\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
[
\noun on
Eric Raymond
\noun default
, The Cathedral and the Bazaar]
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Fast security vulnerabilities detection
\series default
: Access to source code makes it easier and faster to detect security flaws
 in software, whether you are looking to fix them or exploit them.
 This would seem to suggest that open source code is less secure than closed
 source.
 However, this view is not universally supported.
 Given the number of programmers who can access and edit open source code,
 compared with the few that are entitled to access closed source code, it
 should not come as a surprise that flaws in open source software tend to
 be fixed more rapidly, before serious damage can be done.
\end_layout

\begin_layout Itemize

\series bold
Customization:
\series default
 Open source applications may be customized by anyone with the requisite
 skill.
 Thus, open source software can be readily adapted to meet specific needs.
 For businesses or educational institutions, the ability to customize source
 code may enable improvements to the ‘best practice’ provided by default
 installations, therefore improving efficiency and possibly providing a
 competitive advantage.
\end_layout

\begin_layout Itemize

\series bold
Translation & Localization :
\series default
 With access to the source code it is easy to translate the language of
 the software interface.
\end_layout

\begin_layout Itemize

\series bold
Development discontinuation: 
\series default
With open source software, this danger of discontinuation is greatly reduced.
 As the source code is not 'owned' in the same way that proprietary source
 code is, it may be picked up and developed by anyone with an interest in
 a product's survival.
\end_layout

\begin_layout Itemize

\series bold
Learning from examples:
\series default
 Open source code provides an excellent resource from which to learn, and
 open source projects provide a practical environment in which to test skills.
 Just watching the development process can provide an education in itself.
 
\end_layout

\begin_layout Itemize

\series bold
Being part of a community:
\series default
 By adopting open source software you become part of a community of users
 and developers who have an interest in working together to support each
 other and improve the software.
 The extent to which you engage with this community is up to you, but you
 may obtain the intangible benefits of goodwill if you do.
\end_layout

\begin_layout Itemize

\series bold
Cost:
\series default
 Many open source programs can be obtained at no cost or at a very low cost.
 This is often an important issue for individuals and in many cases this
 has been the main reason for an individual adopting a particular open source
 solution over a closed source alternative.
\end_layout

\begin_layout Subsection
License : AGPL 
\end_layout

\begin_layout Standard
For licensing our API, we decide to choose one of the GNU public licenses
 which is the GNU Affero General Public License (AGPL
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "AGPL"
description "Affero General Public License"

\end_inset

).
 The GNU Affero General Public License is a modified version of the ordinary
 GNU GPL version 3.
 It has one added requirement: if you run the program on a server and let
 other users communicate with it there, your server must also allow them
 to download the source code corresponding to the program that it's running.
 If what's running there is your modified version of the program, the server's
 users must get the source code as you modified it.
\end_layout

\begin_layout Standard
The purpose of the GNU Affero GPL is to prevent a problem that affects developer
s of free programs that are often used on servers and since our API is considere
d among this type of software we have to choose this license.
\end_layout

\begin_layout Subsection
Python
\end_layout

\begin_layout Standard
Python is a remarkably powerful dynamic programming language that is used
 in a wide variety of application domains.
 Python is often compared to Tcl, Perl, Ruby, Scheme or Java.
 Some of its key distinguishing features include:
\end_layout

\begin_layout Itemize

\series bold
Python is powerful and fast: 
\series default
Fans of Python use the phrase 
\emph on
"batteries included"
\emph default
 to describe the standard library, which covers everything from asynchronous
 processing to zip files.
 The language itself is a flexible powerhouse that can handle practically
 any problem domain.
 It's possible in Python to build a web server in three lines of code.
 Python lets the user to write the code he needs, quickly.
 
\end_layout

\begin_layout Itemize

\series bold
Python plays well with others: 
\series default
Python can integrate with COM, .NET, and CORBA objects.
\end_layout

\begin_deeper
\begin_layout Itemize
For Java libraries, developers can use Jython, an implementation of Python
 for the Java Virtual Machine.
\end_layout

\begin_layout Itemize
For .NET, developers can use IronPython , Microsoft's new implementation
 of Python for .NET, or Python for .NET.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Python runs everywhere:
\series default
 Python is available for all major operating systems: Windows, Linux/Unix,
 OS/2, Mac, Amiga, among others.
 There are even versions that run on .NET, the Java virtual machine, and
 Nokia Series 60 cell phones.
 the same source code will run unchanged across all implementations.
\end_layout

\begin_layout Itemize

\series bold
Python is friendly and easy to learn: 
\series default
Python comes with complete documentation, both integrated into the language
 and as separate web pages.
 Online tutorials target both the seasoned programmer and the newcomer.
 All are designed to make developers productive quickly.
 The availability of first-rate books completes the learning package.
\end_layout

\begin_layout Itemize

\series bold
Python is Open:
\series default
 The Python implementation is under an open source license that makes it
 freely usable and distributable, even for commercial use.
 The Python license is administered by the Python Software Foundation
\begin_inset CommandInset citation
LatexCommand cite
key "Python"

\end_inset

.
\end_layout

\begin_layout Subsection
Whoosh Search API
\end_layout

\begin_layout Standard
Whoosh is a fast, featureful full-text indexing and searching library implemente
d in pure Python.
 Programmers can use it to easily add search functionality to their applications
 and websites.
 Every part of how Whoosh works can be extended or replaced to meet your
 needs exactly.
\end_layout

\begin_layout Standard
Some of Whoosh's features include: 
\end_layout

\begin_layout Itemize
Pythonic API.
\end_layout

\begin_layout Itemize
Pure-Python.
 No compilation or binary packages needed, no mysterious crashes.
 
\end_layout

\begin_layout Itemize
Fielded indexing and search.
 
\end_layout

\begin_layout Itemize
Fast indexing and retrieval -- faster than any other pure-Python search
 solution I know of.
 See Benchmarks.
 
\end_layout

\begin_layout Itemize
Pluggable scoring algorithm (including BM25F), text analysis, storage, posting
 format, etc.
 
\end_layout

\begin_layout Itemize
Powerful query language.
 
\end_layout

\begin_layout Itemize
Pure Python spell-checker.
 
\end_layout

\begin_layout Standard
Whoosh might be useful in the following circumstances: 
\end_layout

\begin_layout Itemize
Anywhere a pure-Python solution is desirable to avoid having to build/compile
 native libraries (or force users to build/compile them).
 
\end_layout

\begin_layout Itemize
As a research platform (at least for programmers that find Python easier
 to read and work with than Java ;) 
\end_layout

\begin_layout Itemize
When an easy-to-use Pythonic interface is more important to you than raw
 speed.
 
\end_layout

\begin_layout Itemize
If your application can make good use of one deeply integrated search/lookup
 solution you can rely on just being there rather than having two different
 search solutions (a simple/slow/homegrown one integrated, an indexed/fast/exter
nal binary dependency one as an option).
 
\end_layout

\begin_layout Standard
Whoosh was created and is maintained by 
\noun on
Matt Chaput
\noun default
.
 It was originally created for use in the online help system of Side Effects
 Software's 3D animation software Houdini.
 
\end_layout

\begin_layout Section
Previous Code Base
\end_layout

\begin_layout Standard
We have based on the code base we've realized on 
\begin_inset CommandInset citation
LatexCommand cite
key "ASSEM_MEROUANE"

\end_inset

...
 are you sure! yes, indeed.
\end_layout

\begin_layout Standard
-- Changes from THE PFE PDF
\end_layout

\begin_layout Enumerate
API that offer the basic operations (Search, Suggestion) and minimal information
s in raw html input (ayah results), Could be Used only in python or in other
 languages by using a wrapping intermediate.
\end_layout

\begin_layout Enumerate
only offer a TXT and an HTML output system
\end_layout

\begin_layout Enumerate
A very stricted resource manger , can only tranfer the data from the intermediat
e database into the document words.
 the importing of new resources into the intermediate database is a حلقة
 مفقودة
\end_layout

\begin_layout Enumerate
Creating a basic CGI Html interface , lack of independecy between Model,
 View, Control [screen shot]
\end_layout

\begin_layout Enumerate
Qt urgently-coded interface [french] [screenshot]
\end_layout

\begin_layout Enumerate
implemented features:
\end_layout

\begin_deeper
\begin_layout Enumerate
Exact Word: that is the simple search, eg: فأسقيناكموه
\end_layout

\begin_layout Enumerate
Phrase: for searching a whole phrase rather then independent words, eg:"رسول
 الله"
\end_layout

\begin_layout Enumerate
Logical relations Conjuction: for searching only the ayahs that contains
 two terms or more, eg: الصلاة + الزكاة.
 Disjunction (default): for searching all the ayahs that contains one of
 two terms or more, eg:الصلاة | الزكاة.
 Exception: for eleminating a term from search results, eg:الصلاة - الزكاة.
 You can understand it as "Ayahs that contains الصلاة but doesn't contain
 الزكاة".
\end_layout

\begin_layout Enumerate
Wildcards or Jokers: for search all words that share many letters, we have:
 Asterisk: replace zero or many undefined letters, eg: *نبي* Interogation
 mark: replace one undefined letter, eg: نعم؟
\end_layout

\begin_layout Enumerate
Fielded search: to search in more information of Quran , not only ayahs'text,
 we cite here the most significant fields for users: aya_id or رقم_الآية
 (Aya local ID): that's the number of ayah inside its sura, use it for example
 to search all first ayahs (رقم_الآية:1).
 sura_id or رقم_السورة (Sura ID): use it with aya_id to specify an exact
 ayah,for example the first ayah of surate an-nass will be : aya_id:1 +
 sura_id:114.
 subject or موضوع (Topics): thats field contains all topics information,
 it will be helpful to search for a topic,eg: موضوع:الشيطان
\end_layout

\begin_layout Enumerate
for more fields, see: Fields
\end_layout

\begin_layout Enumerate
Intervals: this will be helpful in statistics or positions, for example
 search the divine name only in the first surahs: رقم_السورة :[1 الى 5 ]
 + الله
\end_layout

\begin_layout Enumerate
Partial vocalization: to consider given diacritics and ignore the others,
 eg: آية_ :'مَن'.
\end_layout

\begin_layout Enumerate
Word Properties: to search using root and type of words, type could be اسم,
 فعل or أداة,eg: {قول،اسم}.
\end_layout

\begin_layout Enumerate
Derivations light (using lemma): to search all the words having the same
 lemma of the given word,eg: >ملك.
 heavy (using root): to search all the words having the same root of the
 given word,eg: >>ملك.
 
\end_layout

\end_deeper
\begin_layout Section
Quranic & Arabic Ressources 
\end_layout

\begin_layout Standard
Les indexes
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
For every ressource , a short definition + using details + loading(mise
 en service) details
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
In loading indexes, use dynamic fields it helps much to load ressources
 one by one
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Used resources
\end_layout

\begin_layout Standard

\lang french
Cette proposition de recherche est liée à certains projets, ces projets
 sont les suivants: 
\end_layout

\begin_layout Itemize

\series bold
\lang french
Arabic Quranic Corpus,
\series default
 est une ressource linguistique annotée qui montre la grammaire arabe, la
 syntaxe et la morphologie de chaque mot dans le Coran.
 Ce corpus est realisé par 
\noun on
Kais Dukes
\noun default
 en 2009 à l’école d’informatique, l'université de Leeds.
 Cet index est disponible sur l'internet avec d'autres index simplifiés
 sous la licence GPL (GNU Public License).
 Nous en aurons besoin pour la réalisation de certains aspects linguistiques
 par les informations qu'il contient.
\end_layout

\begin_layout Itemize

\series bold
\lang french
Qurany Concepts Tool
\series default
, est un outil complet qui couvre tous les thèmes et les concepts mentionnés
 dans le Coran.
 Cet outil est faite par 
\noun on
Noorhan Abbas
\noun default
 de l'université de Leeds.
 Mise en œuvre basée sur la structure dictionnaire de Python.
 Nous en aurons besoin pour la recherche thématique.
 
\end_layout

\begin_layout Itemize

\series bold
\lang french
Quranic Concepts Ontology, 
\series default
utilise la représentation des connaissances pour définir les concepts clés
 dans le Coran, et montre les relations entre ces concepts en utilisant
 la logique des prédicats.
 Nous pourrions utilisé ce système pour la suggestion de mots-clés relatifs.
\end_layout

\begin_layout Subsubsection
Tanzil
\end_layout

\begin_layout Standard

\lang french
Notre travail a besoin d'une version électronique de Coran pour l'indexer
 .
 Nous trouvons que le projet Tanzil est le plus authentique, il est passé
 par plusieurs phases de vérification et vérifié manuellement par une équipe
 spécialisée.
\end_layout

\begin_layout Subsubsection
Qurany
\end_layout

\begin_layout Subsubsection
Arabic Quanic Corpus
\end_layout

\begin_layout Subsubsection
Zekr Translation Models
\end_layout

\begin_layout Subsubsection
VerseByVerse Recitations
\end_layout

\begin_layout Subsection
Resources to use
\end_layout

\begin_layout Standard
Qutrub
\end_layout

\begin_layout Subsection
Lack fo Quranic resources
\end_layout

\begin_layout Standard
[what's the resources that we need and it's not available or not complete]
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
[How to resolve each one! no, it's not my business]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Subsection
FEATURExRESOURCE
\end_layout

\begin_layout Plain Layout
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="10">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Feature
\backslash
Resource
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tanzil Standard 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tanzil Uthmani
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Quranic Corpus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simple Search
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Adavanced Query => Phrase Search
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
FEATURExRESSOURCE
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Our improvements
\end_layout

\begin_layout Enumerate
Rewriting a huge part of the code [undocumented changes! to add or to remove!!]
\end_layout

\begin_layout Enumerate
Opening the source,Starting with GPL then AGPL because??
\end_layout

\begin_layout Enumerate
[Commits stat, lines added.
 lines changed]
\end_layout

\begin_layout Standard
Those are the main milestones we go through:
\end_layout

\begin_layout Subsection
A New Centralized JSON Output System:
\end_layout

\begin_layout Enumerate
First: Improving the basic html output of the API to a Json API works only
 in Web CGI.
\end_layout

\begin_layout Enumerate
Second: Centralizing the Output system to gain three benefits: 
\end_layout

\begin_deeper
\begin_layout Enumerate
easy-implementation of more data structure.
\end_layout

\begin_layout Enumerate
the use of the same output system in the different interfaces: Console Interface
, CGI Interface, Desktop Interfaces, Web Interfaces.
\end_layout

\begin_layout Enumerate
Make changes and updates in one place instead of many
\end_layout

\end_deeper
\begin_layout Enumerate
Proposing an extensible results structure # include the structure #How to
 highlight json or python in latex.
\end_layout

\begin_layout Enumerate
Centralize the loading of necessary Data files:
\end_layout

\begin_deeper
\begin_layout Enumerate
Configuration files: Available recitations list, Available translations...
\end_layout

\begin_layout Enumerate
Linguistic resources: ...
\end_layout

\begin_layout Enumerate
Qurnaic indexes: ...
\end_layout

\begin_layout Enumerate
[get it from Data.py] [or Output init function]
\end_layout

\end_deeper
\begin_layout Enumerate
Adding statistics calculating feature, capture the flags of each request
 .
 Stats are in json format [get the format 
\end_layout

\begin_layout Enumerate
offer a set of error messages in case of failed query [improve it as table]:
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
-1
\series default
:"fail, reason unknown", 
\end_layout

\begin_layout Enumerate

\series bold
0
\series default
:"success", 
\end_layout

\begin_layout Enumerate

\series bold
1
\series default
:"no action is chosen or action undefined", 
\end_layout

\begin_layout Enumerate

\series bold
2
\series default
:"""SuperJokers are not permitted, you have to add 3 letters or more to
 use * and 2 letters or more to use ? (؟)
\backslash
n -- Exceptions: ? (1), ??????????? (11) """
\end_layout

\begin_deeper
\begin_layout Enumerate
[it's extensible]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Extracting the configurations into independent config files and Standardizing
 them into a json format (benefits)
\end_layout

\begin_layout Enumerate
Make many meta data available for request in the API Json output system.
 Meta data includes:
\end_layout

\begin_deeper
\begin_layout Enumerate
API meta information including version.
\end_layout

\begin_layout Enumerate
Error messages
\end_layout

\begin_layout Enumerate
Possible flags, in addition to their default values, possibe values intervals,
 and help messages.
\end_layout

\begin_layout Enumerate
available search fields (Arabic and English names).
 
\end_layout

\begin_layout Enumerate
Available translations and recitations.
\end_layout

\begin_layout Enumerate
Surates and topics value lists
\end_layout

\begin_layout Enumerate
Global search hints
\end_layout

\end_deeper
\begin_layout Enumerate
Controlling what to retrieve with specific flags ,the concept of predefined
 views: minimal, normal, full, linguistic, statistical
\end_layout

\begin_layout Enumerate
Third: Fixing a lot of bugs and vulns such as:
\end_layout

\begin_deeper
\begin_layout Enumerate
SuperJokers Vulnerability: Fixed by [see the code of Output.Py]
\end_layout

\end_deeper
\begin_layout Subsection
Many new features
\end_layout

\begin_layout Enumerate
Implementing basically the fuzzy search feature.
\end_layout

\begin_layout Enumerate
Uthmani-Standard Mapping 
\end_layout

\begin_deeper
\begin_layout Enumerate
created a python dictionary
\end_layout

\end_deeper
\begin_layout Enumerate
Showing previous + next ayah.
\end_layout

\begin_layout Enumerate
Ability to choose the script of showing Ayahs:
\end_layout

\begin_deeper
\begin_layout Enumerate
Unvocalized Standard
\end_layout

\begin_layout Enumerate
Vocalized Standard
\end_layout

\begin_layout Enumerate
Vocalized Uthmani
\end_layout

\end_deeper
\begin_layout Enumerate
Different Vocalization Suggestion 
\end_layout

\begin_deeper
\begin_layout Enumerate
first: Mapping the diffrent possible vocalizations to each unvocalized word
\end_layout

\begin_layout Enumerate
second: show vocalizations in the API output results
\end_layout

\end_deeper
\begin_layout Enumerate
include the linguisitic annotations of each query keyword in the API output
 results.
 We got those Annotations from Quranic Corpus.
 
\end_layout

\begin_layout Enumerate
Show word information in buckwalter transliteration
\end_layout

\begin_layout Subsection
Resource Importing Manager
\end_layout

\begin_layout Enumerate
Improving the resource importing manager & fix the الحلقة المفقودة.
 The improved version can do:
\end_layout

\begin_deeper
\begin_layout Enumerate
downloading resources:
\end_layout

\begin_deeper
\begin_layout Enumerate
not needed for Quranic Corpus becuause it's GPL
\end_layout

\begin_layout Enumerate
an obligation for tanzeel because of the license
\end_layout

\begin_layout Enumerate
recommended for zekr translation models to benefit of updates and avoid
 a big size source
\end_layout

\begin_layout Enumerate
EveryVerse recitations list
\end_layout

\end_deeper
\begin_layout Enumerate
Updating auto-generated resources:
\end_layout

\begin_deeper
\begin_layout Enumerate
translations list
\end_layout

\end_deeper
\begin_layout Enumerate
Parsing & Importing the resources to our intermediate database
\end_layout

\begin_deeper
\begin_layout Enumerate
libraries to read & parse thirdparty Quranic resources such as Quranic Corpus(se
e x.x.x), VerseByVerse(see x.x.x), Zekrmodels(see x.x.x)
\end_layout

\end_deeper
\begin_layout Enumerate
Transforming resources from the database into the document indexes.
\end_layout

\end_deeper
\begin_layout Subsection
Automating the API building
\end_layout

\begin_layout Enumerate
Automating the API building by a well-commented Makefile that do:
\end_layout

\begin_deeper
\begin_layout Enumerate
Auto-downloading of resources, 
\end_layout

\begin_layout Enumerate
Updating of the intermediate resources
\end_layout

\begin_layout Enumerate
Auto-building of indexes(from Wiki)
\end_layout

\begin_layout Enumerate
Auto-installing script for API, WUI, GUI.
\end_layout

\end_deeper
\begin_layout Subsection
A new console interface
\end_layout

\begin_layout Enumerate
A new console interface, to be used by non-python desktop applications,
 could be run as background processus aka Daemon processus.
 for details see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Console-commandline"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
Unneeded:
\series default
 Cleaning the previous urgently-coded desktop interface, preparing it for
 localization, maintain it's portability and simplicity , improving its
 rapidity.
 remove the old html styling of results.
 Get the results from the API output system instead of direct access to
 API python code
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Enhancing the web interface
\end_layout

\begin_layout Enumerate
Improving the html web interface in two steps.
 the first one into an html-jquery web interface with client-side search
 results showing.
 The second step into a django web interface with a server-side search results
 showing with many extra features ( see )
\end_layout

\begin_layout Subsection
Packaging system: 
\end_layout

\begin_layout Enumerate
Pure python setup for the API, including all necessary files inside the
 API.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Egg API, Source Tarball, Binary Tarball, NSIS Windows Installer
\end_layout

\end_deeper
\begin_layout Subsection
Multiple search units
\end_layout

\begin_layout Subsection
Coding Standarization
\end_layout

\begin_layout Enumerate
Fixing a huge amount of pylint code analysis warnings [score of current
 code, more stats] and improving the quality of code following also the
 conventions explained in $Readability-counts
\end_layout

\begin_layout Enumerate
A mass organization of Source code, see the current code architecture in
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Code-Architecture"

\end_inset


\end_layout

\begin_layout Subsection
Documentation covering
\end_layout

\begin_layout Enumerate
Documention covering of many parts of the API:
\end_layout

\begin_deeper
\begin_layout Enumerate
--
\end_layout

\begin_layout Enumerate
a Script Sample of how to use the API #include the code #how to high light
 python code in Latex 
\end_layout

\begin_layout Enumerate
ومع ذلك it still has a weak documentation covering.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Extra TODO: +PyTanzil
\end_layout

\begin_layout Plain Layout
grouping the changes
\end_layout

\begin_layout Plain Layout
+ Suggestion Vocalizations!
\end_layout

\begin_layout Plain Layout
+ Suggestion (Verb Conjugation+ Random Affixes) U Quranic Verbs 
\end_layout

\begin_layout Plain Layout
+ Suggestion Synonyms
\end_layout

\begin_layout Plain Layout
+ Search Word : 2 Steps Search
\end_layout

\begin_layout Plain Layout
+ Search Translation:
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Open Issues
\end_layout

\begin_layout Itemize
Milestone #1 enrishing the resources
\end_layout

\begin_deeper
\begin_layout Itemize
textify the database
\end_layout

\begin_layout Itemize
Integrate Qurany for faceted thematic search
\end_layout

\begin_layout Itemize
Develop the importing script of Boundary annotations
\end_layout

\begin_layout Itemize
Propose a standard format for new linguistic and quranic resources
\end_layout

\begin_layout Itemize
Modular Query Parser:modularity, extensibility and combination
\end_layout

\begin_deeper
\begin_layout Itemize
An experienced challenge with the Query parser is the mixing (the combination)
 of the different operations 
\end_layout

\begin_layout Itemize
Extensible and Combination ability of different operations
\end_layout

\begin_layout Itemize
a high benefit to add search features one by one, without ruining all the
 parsing system
\end_layout

\end_deeper
\begin_layout Itemize
Study the restrictions creteria of the API json output service
\end_layout

\begin_deeper
\begin_layout Itemize
limit the maximum of simultanos requests globally and by IP.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Milestone #2
\end_layout

\begin_deeper
\begin_layout Itemize
Complete the features implementation:
\end_layout

\begin_deeper
\begin_layout Itemize
1 2-steps search!
\end_layout

\begin_layout Itemize
(list from features chapter )
\end_layout

\begin_layout Itemize
2
\end_layout

\begin_layout Itemize
3
\end_layout

\begin_layout Itemize
table of FeaturesXimplemented 
\end_layout

\begin_layout Itemize
Implementation Ratio
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Milestone #3: Moving to Whoosh 2.X, why?
\end_layout

\begin_layout Itemize
Milestone #4: Moving to Python 3000, why?
\end_layout

\begin_layout Itemize
Milestone #5: Documentaion covering :
\end_layout

\begin_deeper
\begin_layout Itemize
API comments & docstrings [here some stats] ; Cover the API modules with
 appropriate and helpful comments
\end_layout

\begin_layout Itemize
API usage howto
\end_layout

\begin_layout Itemize
API demos
\end_layout

\begin_layout Itemize
manpage for Alfanous linux console interface
\end_layout

\end_deeper
\begin_layout Itemize
Milestone #6: Optimization of code & performanice
\end_layout

\begin_deeper
\begin_layout Itemize
Fix 
\begin_inset Quotes sld
\end_inset

pylint
\begin_inset Quotes srd
\end_inset

 code analysis.
\end_layout

\begin_layout Itemize
Use 
\begin_inset Quotes sld
\end_inset

profile
\begin_inset Quotes srd
\end_inset

 to check the performance of each search feature in order to improve it.
\end_layout

\end_deeper
\begin_layout Section
Code Architecture 
\begin_inset CommandInset label
LatexCommand label
name "sec:Code-Architecture"

\end_inset


\end_layout

\begin_layout Standard
[Copy from src.README.rst]
\end_layout

\begin_layout Subsection
Application Programming Interface
\end_layout

\begin_layout Standard
[Copy the src/alfanous/README.rst]
\end_layout

\begin_layout Standard
API, show the sample code
\end_layout

\begin_layout Standard
For web-based interfaces use Json out put system.
\end_layout

\begin_layout Standard
for desktop-based interfaces use Console interface.
\end_layout

\begin_layout Standard
explain how it will be used to build lot of interfaces
\end_layout

\begin_layout Standard
API Powerful points:
\end_layout

\begin_layout Enumerate
FREE LIBRE OPEN SOURCE: Any one can use it and any one can contribute in.
 
\end_layout

\begin_layout Enumerate
A Python API: that allows anyone to create independently a web interface,
 desktop interface , Android/Iphone/Windows phone interfaces , facebook/twitter/
G+ applications ...and so on.
 
\end_layout

\begin_layout Enumerate
The API is based on a founded base: The search process is too fast and too
 stable other websites/applications do.
 
\end_layout

\begin_layout Enumerate
It has lot of features: see Search Features.
 
\end_layout

\begin_layout Enumerate
[lines of codes from Ohloh]
\end_layout

\begin_layout Subsubsection
JSON output system
\end_layout

\begin_layout Standard
How important for Web interfaces
\end_layout

\begin_layout Standard
[Usage statistics from stats.alwaysdata.org]
\end_layout

\begin_layout Subsubsection
Console commandline (a Linux Daemon service) 
\begin_inset CommandInset label
LatexCommand label
name "sub:Console-commandline"

\end_inset


\end_layout

\begin_layout Standard
How important for Desktop interfaces
\end_layout

\begin_layout Standard
get the command inline argumens, parse them and forward them to the API
 output system.
 [+screen shot]
\end_layout

\begin_layout Subsection
Django web interface (demonstration Interface)
\end_layout

\begin_layout Standard
We use this interfce to demonstrate and test the API implemented features.
\end_layout

\begin_layout Standard
MVC, localizable [work perfectly for LtR and RtL languages] , Server side
 (indexed by search engines), HTML5&CSS3 valid, Responsive theme with bootstrap
 .
 
\end_layout

\begin_layout Enumerate
Clickable feature to simplify the search idea to users: User can click on
 each information in order to search with it.
 Clickable info includes:
\end_layout

\begin_deeper
\begin_layout Enumerate
Aya words
\end_layout

\begin_layout Enumerate
[get it from the blog post] [+ScreenShot]
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Subsection
Other User Interfaces #no need for it here, just talk about them in presentation
\end_layout

\begin_layout Plain Layout
Proves the wide use of the API abroad the multiplatforms
\end_layout

\begin_layout Subsubsection
Desktop User Interface
\end_layout

\begin_layout Subsubsection
MWUI
\end_layout

\begin_layout Plain Layout
made by sneetsher...in order to get a minimal showing as a demo 
\end_layout

\begin_layout Plain Layout
localizable and has independent templates
\end_layout

\begin_layout Subsubsection
Smart phones
\end_layout

\begin_layout Subsubsection
Browsers-Addons
\end_layout

\begin_layout Plain Layout
Interfaces
\end_layout

\begin_layout Plain Layout
[interfaces from github readme files]
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
In this chapter , we talked about our implemented improvement
\end_layout

\begin_layout Standard
we included some statistics of usage.
\end_layout

\begin_layout Standard
[In presentation , Include the wining award]
\end_layout

\end_body
\end_document
